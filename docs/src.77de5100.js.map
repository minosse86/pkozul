{"version":3,"sources":["lib/floorplan/hass.ts","lib/simulator.ts","../node_modules/js-yaml/lib/js-yaml/common.js","../node_modules/js-yaml/lib/js-yaml/exception.js","../node_modules/js-yaml/lib/js-yaml/mark.js","../node_modules/js-yaml/lib/js-yaml/type.js","../node_modules/js-yaml/lib/js-yaml/schema.js","../node_modules/js-yaml/lib/js-yaml/type/str.js","../node_modules/js-yaml/lib/js-yaml/type/seq.js","../node_modules/js-yaml/lib/js-yaml/type/map.js","../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../node_modules/js-yaml/lib/js-yaml/type/null.js","../node_modules/js-yaml/lib/js-yaml/type/bool.js","../node_modules/js-yaml/lib/js-yaml/type/int.js","../node_modules/js-yaml/lib/js-yaml/type/float.js","../node_modules/js-yaml/lib/js-yaml/schema/json.js","../node_modules/js-yaml/lib/js-yaml/schema/core.js","../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../node_modules/js-yaml/lib/js-yaml/type/merge.js","../node_modules/js-yaml/lib/js-yaml/type/binary.js","../node_modules/js-yaml/lib/js-yaml/type/omap.js","../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../node_modules/js-yaml/lib/js-yaml/type/set.js","../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../node_modules/js-yaml/lib/js-yaml/loader.js","../node_modules/js-yaml/lib/js-yaml/dumper.js","../node_modules/js-yaml/lib/js-yaml.js","../node_modules/js-yaml/index.js","lib/utils.ts","../node_modules/process/browser.js","index.ts"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask"],"mappings":"A+BAA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA;AcCA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBDA;AFEA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBDA,IAAIA,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AFAA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBCA;AFAA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBCA;AFAA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBCA;AFAA,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AjBNM,IAAW,IAAX;A+BON,ADAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBCA,AhCRA,A+BAA,ICQIC,gBAAJ;AHAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AfAA,ASAA,APAA,ASAA,ACAA,AbAA,AcAA,AfAA,AUAA,AgBCA,ACLA,IDKIC,kBAAJ;AHAA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,ANAA,APAA,ASAA,ACAA,ACAA,ALAA,AjBTA,ACEM,CDFN,GCEiB,ODFA,ECEX,EDFN,EAAqB;A8BUrB,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,ANAA,APAA,ASAA,ACAA,ACAA,ALAA,AgBCA,ACNA,AlCHE,QAAa,CiCSNC,SjCTP,CAAuB,MiCSzB,GAA4B;AHA5B,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,ANAA,APAA,ASAA,ACAA,ACAA,ALAA,AgBCI,AjCVF,IAAA,IiCUQ,IAAIC,GjCVZ,EiCUQ,CAAU,AjCVlB,iCiCUQ,CAAN;AHAJ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,ANAA,APAA,ASAA,ACAA,ACAA,ALAA,AgBCC,AjCVG,ACDJ,CAAA,UDCI,ACDa,WDCb,ACDJ,EAA0B,CDCR,CAAC,MAAD,EAAiB,OAAjB,EAAkC,IAAlC,KAA+C,CAAG,CAAhE;A8BUJ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AhBTE,QAAa,eAAb,CAA4B;A6BU9B,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBAA,AjCVI,ACAF,IAAA,KgCUOC,EjCVL,ICAF,EDAE,CCAF,EDAkD,EAAhD,MiCUJ,GAAgC;AHChC,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBAI,AjCVD,ACAC,QgCUM,GhCVN,CgCUUD,KAAJ,CAAU,IhCVhB,GAAc,IAAI,KAAJ,EAAd,iBgCUM,CAAN;AHCJ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBAC,AhCVE;A6BWH,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,AbAA,AKAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AjBfyB;A8BgBzB,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AUAA,AWAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDC,AhCb6B,agCajB;AHEb,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDI,AjChBW,EAAA,IiCgBP,AjChBO,CAAA,UAAA,GAAU,UAAV;A8BkBf,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDQ,AhCfO,EAAA,MgCeH,KhCfG,CAAA,CgCeIE,UAAP,IhCfG,CgCemB,EhCfJ,QgCetB,EAAsC,KhCf/B;A6BiBf,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDYL,AjCbV,MiCaUA,EjCbG,ciCaa,EjCb1B,CiCa6BK,AjCbA,UiCanB;AHEZ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDS,AhCbP,KgCWM,GhCXO,GgCaA,OhCbb,CAAuB;A6BezB,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDYL,AjCfG,ACCb,EDDa,ECCb,EgCcUA,AjCfG,CAAA,QCCb,GAAA,IgCc0B,CjCfb,EiCegBE,CjCfA,eiCenB,CjCfG;A8BiBf,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDS,AhCdL,WAAA,QAAA,GAAW,IAAI,KAAJ,EAAX;A6BgBJ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AqBAA,AJAA,ARAA,AVAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDK,AjCbH,ACDE,GgCQA,CAME,IjCbS,GiCaFI,AhCdT,CgCcE,EAAU,GhCdZ,GAAS,GDCX,CAA4B,ACDb,KAAJ,EAAT;A6BgBJ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AiBAA,AlBAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDQN,AhCdJ,IgCcIA,OhCdJ,OAAA,EgCcoB,ChCdD,EgCcIE,EhCdvB,cgCcI;AHER,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AiBAA,AlBAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AgBDK,AjCfU,ACCZ,EDDY,IAAA,CAAA,eAAA,GAAe,eAAf;A8BiBf,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,AiBAA,AlBAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ADAA,AbAA,ASAA,ACAA,ACAA,ALAA,AjBRC,CApBD,EAAiB,IAAI,oBAAJ,IAAI,GAAA,EAAA,CAArB;A8B6BA,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,AdAA,ASAA,ACAA,ACAA,ALAA,AgBFI,AhCnBqB,MgCmBjB;AHGR,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,AdAA,ASAA,ACAA,AJAA,AgBFQ,QAAI,OAAOK,YAAP,KAAwB,UAA5B,EAAwC;AHGhD,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,AdAA,ASAA,ACAA,AJAA,AgBFYN,AhCrBG,EAAA,IgCqBHA,OhCrBG,CAAA,UgCqBe,AhCrBf,GgCqBkBM,AhCrBR,UAAV,EgCqBH;AHGZ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,AdAA,ASAA,ACAA,AJAA,AgBFS,KAFD,MAEO;AHGf,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,AdAA,ASAA,ACAA,AJAA,AgBFYN,AhCjBV,MgCiBUA,EhCjBG,gBgCiBe,AhCjB5B,CAA6B,EgCiBEG,mBAArB;AHGZ,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,AdAA,ASAA,ACAA,AJAA,AgBFS;AHGT,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,APAA,AEAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBFK,AhCnBU,EAAA,CgCaX,CAME,OAAOE,CAAP,ChCnBS,CgCmBC,AhCnBD,gBAAA,GAAgB,gBAAhB;A6BsBf,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBFQL,IAAAA,kBAAkB,GAAGG,mBAArB;AHGR,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBFK,AhChBH,QAAa,eAAb,CAA4B;A6BmB9B,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBFC,AhCjBC,CgCFD,GAAD,AhCEE,WAAA,GAAA;A6BoBF,A5BAA,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AhBnBI,A+BlBE,IAAW,KAAX,E/BkBF,KAAA,GAAgB,EAAhB;ACoBJ,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBHA,AC7BA,AjCaI,MiCbE,CAAC,ED6BEI,EhChBL,EiCbJ,GAAgB,GD6BhB,AhChBI,CgCgBgBC,EhChBG,CgCgBvB,AhChBI,EgCgBqB,GC7BT;AhCiChB,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBHI,AC7BF,AjCaC,MgCgBKT,EC7BA,QAAQ,GAAG,CACf,ED4BoB,KAAKK,UAAzB,EAAqC;A/BIzC,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBHQ,AC7BF,AFRN,CAAA,GEQM,GAAG,EAAE,EFRM,KAAjB,CEQI,CFRkB;A9ByCtB,A2BAA,A1BAA,AyBAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBHQ,AC9Ba,AjCSS,A+Bf5B,IEMmB,OD8BNA,GC9BgB,EAAE,KD8BR,CAACI,GAAD,EAAM,CAAN,CAAjB,KC9BJ;AhCkCJ,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ALAA,ACAA,AJAA,AgBHK,AC/BgD,GD2B5B,CAKrB,AChCiD,UAAU,EAAE;AhCmCjE,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AiBnCI,AjCSW,A+Bdb,E/Bca,CiCVI,EAEf,QjCQW,CAAA,eAAA,GAAe,eAAf;AC2Bf,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AiBnCM,IAAA,GAAG,EAAE,QAAP;AhCoCJ,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AgBJI,AChCiB,AjCanB,A+BhBA,IEGmB,EDgCb,CAACT,ChCnBM,G+BhBG,GEGa,EAAE,CjCa/B,CAAsB,E+BhBtB,CAA0B,ECmCH,KAAKE,CChC1B,AFHF,EAA0C,aCmCnC,IAAyC,CAACF,gBAA3C,KAAgEK,UAApE,EAAgF;A/BKpF,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AgBJQL,ACjCwC,AjCiB5C,A+BnBA,ICmCIA,ACjCwC,AjCiB5C,O+BnBO,GEE+C,CjCiBtD,A+BnBW,CEE6C,AjCiB5C,A+BnBA,ICmCQ,GAAGK,CDnChB,CAAc,M/BmBrB,EgCgBI,AhChBkD,A+BnB/C,CAAP,U/BmBA,EAAkG;ACqBtG,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AgBJQ,AClCJ,AjCiBsD,A+BlBvD,GEDgB,EAGf,MDiCWA,AhCjB2C,UgCiBjC,CAACI,AhCjBgC,GgCiBjC,AhCjBiC,EgCiB3B,CAAN,CAAjB,OhCjBkD;ACsB1D,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AgBJK,AClCC,AjCaF,IiCbE,GAAG,EAAE,EjCaP,UiCbA,UjCaA,GAAuB,IAAI,KAAJ,EAAvB;AC0BJ,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AiBvCyB,AjCcrB,A+BlBc,EAAA,EEIO,GFJP,CAAA,G/BkBd,GiCd+B,CjCc/B,CiCdiC,CFJnB,C/BkBP,E+BlBgB,E/BkBZ,KiCdX,EFJc,I/BkBE,UAAT,EAAP;AC0BJ,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AgBLI,ACnC8C,IAAA,EDmC1C,QCnCoD,EAAE;AhCyC9D,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,AJAA,AJAA,AgBLQ,ACpCJ,AjCiBE,A+BjBJ,GEHiB,EAIf,MjCgBO,A+BjBa,I/BiBT,UAAT,G+BjBJ,C/BiB2B,A+BjBa,WAAxC,EAA6D,E/BiBnB,CAAC,K+BjBkB,GAAoB,G/BiB7E,C+BjBJ,C/BiBwD,C+BjB6B;A9B0CvF,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLQ,ACpCF,AjCiBE,IiCjBF,GAAG,EAAE,EDoCIT,GCpCX,AjCiBU,agCmBiB,CAACS,GAAD,EAAM,AhCnBJ,CgCmBF,CAAvB,ChCnB4B,IAAI,mBAAJ,CAAwB,UAAxB,EAAoC,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CAApC,CAA5B;ACyBR,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLK,ACrCa,AjCkBV,A+BlBJ,GCkCA,CAGE,ACrCY,EFAd,KCqCQH,CAAN,ChCnBO,CgCmBC,ACrCc,EAAE,CFAf,GAAG,OEAd,CFAsB,GAAG,E/BkBrB,CAA0B,IAA1B,CAA+B,G+BlBb,GAAiB,WAAW,CAAC,C/BkB/C,U+BlB8C,CAAlD;A9B2CJ,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLQ,ACtCmC,AjCmBpC,A+BjBH,IEFuC,IDsC/B,IDpCF,EEF2C,EAAE,GFEtC,GAAG,IAAI,OAAJ,CAAY,WAAZ,EAAyB;A9B0C7C,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLY,ACvCR,AjCoBC,A+BjBC,GEPa,EAKf,GFEE,KAAK,EAAE,QAAQ,GAAG,QAAH,GAAc;A9B0CnC,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLY,ACvCN,AFCuC,IEDvC,GAAG,AFCW,CAAhB,CEDO,IDuCQN,ECvCf,cDuC+B,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;A/BMZ,A2BAA,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLS,ACxCU,AjCqBf,IiCrBe,AjCqBf,CgCgBI,CAGE,OAAMH,CAAN,ACxCmB,EDwCX,ACxCa,OjCqBR,CAAC,GiCrBpB,SjCqBmB,EAA0C;A4ByBjE,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ADAA,ARAA,AgBLY,ACzCgC,AjCsBtC,A+BjBF,IELwC,MFKpC,C/BiBG,GiCtB2C,CjCsBvC,CiCtByC,UjCsBlD,IAAwB,YAAxB,EAAsC;A4ByB5C,ADAA,AxBAA,AEAA,ADAA,AcAA,ALAA,ADAA,AaAA,ATAA,AgBLY,AC1CR,AjCuBI,A+BjBF,GEXa,CAAjB,SD+CiBN,AhCnBN,C+BjBD,G/BiBJ,CAAU,I+BjBE,E/BiBZ,CAAkB,A+BjBH,ICoCY,CAACU,CDpCP,GCoCV,CAAsB,ChCnBJ,A+BjBH,C/BiBI,A+BjBH,ECoChB,EAA4BD,GAA5B,ADpCe,CAA5B,CCoC8C,AhCnB5C,CgCmBW,CAAP,EhCnBwC,WAA5C;A4ByBR,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBLS,ACxCP,AjCqBK,QiCrBC,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,oBAAvB,CAAlB;AL8CF,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBLK,ACvCH,AFEI,EEFJ,OAAO,CAAC,EFEA,CEFR,OFEgB,CAAC,EAAb,EAAiB;AH2CvB,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBHC,ACzCC,AjCoBI,A+BlBE,EEFN,OAAO,CAAC,CjCoBC,EiCpBT,GFEY,IAAI,E/BkBZ,CAAiB,A+BlBF,K/BkBO,C+BlBD,G/BkBrB,K+BlB6B,CAAC,IAAT,EAAnB;AH2CR,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AiB5CE,AjCoBG,A+BlBG,EEFN,OAAO,CAAC,GAAR,CAAY,GFEC,IAAP,CEFc,CAAC,QAArB;AL6CF,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBJA,ACvCE,AFCK,EEDL,ODuCOE,ADzCH,CEEI,CAAC,IFEA,GEFT,CAAkB,KDuCpB,CAAyBC,CCvCN,IAAY,CDuC/B,EAAiC;AJKjC,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBJI,ACvCA,AjCAoB,A+BEhB,MCqCAX,ICvCE,MAAM,AFEF,GEFK,CFED,ICqCQ,CDrCZ,CEFY,AFEF,CEFG,EDuCIM,QCvCZ,CAAoB,GDuCnC,EAAyC,GCvC1B,CAA6B,IFElC,CAAN,CADG,CACyC,IEFjC,CAAf;AL4CJ,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBJQ,ACtCJ,AFCG,UEDG,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;AL2CJ,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBJQ,ACtCJ,AjCHW,A+BIV,E/BJU,EiCGX,GFRA,CAUA,GCoCWA,EhCzCA,CAAA,C+BKJ,GEFO,CAAC,CFEf,EAAc,CCoCS,AhCzCZ,CgCyCaK,EhCzCJ,EiCGpB,CAAyB,CDsCF,CAAnB,CCtCJ,CAA6B,EjCHlB,iBiCGX;AL2CJ,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBJK,ACtCD,AFEE,GCgC2B,CAK7B,ACvCA,SAAS,CAAC,AFEF,IAAI,OEFZ,CAAsB,AFEd,CAAa,GAAG,UEFxB,CFEmC,KAAK,KAAK,CAAC,OAAO,EAA7C,CAAN,CADY,CAC4C;AHyC9D,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AiBzCI,AjCcF,A+BbG,Q/BaU,EiCdL,cAAc,GAAG,AjCczB,CAAgC,OiCdC,CAAC,aAAT,CAAuB,IAAvB,CAAvB;AL0CJ,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AiBzCI,AjCgBA,A+BfD,IEDC,AjCgBA,WAAA,CAAoB,EiChBN,CAAC,OjCgBf,EAAoD,EiChBpD,GAA6B,GAAG,MAAM,GAAG,EjCgBzC,EAA4H,EiChBtF,GAAY,OAAO,MAAM,OAAO,CAAC,GAAI,EAA3E;AL0CJ,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBLI,ACpCA,AjCeoB,A+BfrB,IEAC,EDoCI,CAACX,IhCrBe,OiCfN,CAAC,EjCeK,GiCfpB,AjCeoB,CgCqBG,ACpCF,KDoCOG,ICpC5B,AjCeoB,GiCfa,QAAjC,IDoCK,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;AJM7F,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBLQN,ACpCJ,AjCcoD,IgCsBhDA,ACpCJ,OjCcoD,OiCdtC,CAAC,GDoCO,GAAGM,KCpCzB,AjCcoD,CiCdzB,EjCcyB,IgCsBhD,QCpCJ,OjCcoD;A4B4BxD,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBLQ,ACnCJ,AjCUA,A+BjCoB,EAAA,KAAA,CAAA,EEuBd,CDmCKA,AhCzBX,YgCyBuB,AhCzBvB,CgCyBwBK,CD1DJ,C/BiCL,CAAf,CiCVwB,AFvBa,EC0Dd,CAAnB,ACnCuB,QAAQ,CAAC,KFvBhB,QEuBO,CAAuB,KAAvB,CAA3B;ALyCJ,ADAA,AxBAA,AEAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBLK,ACnCD,AjCYE,IiCZF,OjCYO,WiCZW,CAAC,AjCYjB,CAAkB,KAAK,GiCZzB,CAA6B,GAA7B,CAAiC,EjCYb,CAAgB,MAAhB,CAAuB,CAAvB,CAAlB,SiCZF;ALyCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AiBxCI,AjCYC,A+BfH,IEGE,OFHoB,OEGN,CAAC,UFHjB,CEGE,AFHuC,CEGZ,UFH7B,EAA8D,MEG5D,EFHF,EAA+E;AH4CjF,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNI,ACjCA,MDiCI,ICjCE,gBAAgB,GAAG,MAAM,GAC7B,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CAD6B,GAE7B,QAAQ,CAAC,aAAT,CAAuB,iBAAvB,CAFF;ALwCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNQ,AC/BJ,AjCSA,A+BhBA,IEOA,AjCSA,E+BhBA,U/BgBY,CAAC,A+BhBF,GAAG,EEOI,CAAC,KFPG,C/BgBV,EAA8B,A+BhBjB,GEOzB,CAA+B,OFPT,GAAiB,MEOvC,KFPkD,CAAC,WAAD,CAAlD;AH6CJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNQ,AC9BJ,AjCQE,A+BfF,UEOM,AjCQA,CgCsBKX,CDrCL,G/BeK,I+BfE,EEOI,CFPD,EEOI,CjCQd,CAAgB,A+BfF,EEOI,CD8BK,CAACW,GhCtBxB,A+BfU,CAAY,ECqCC,CAAzB,AhCtB8B,KAAK,G+BfvB,EAAyB,CEOrB,CAAyB,GjCQX,CAAgB,OAAhB,KiCRd,AjCQ0C,EiCRC,OAA3C,AjCQlB,CiCRF,CjCQ0E;A4B6B9E,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNK,AC9BF,AjCQK,A+BfF,GCkCF,ACjDF,CDoDI,IDrCA,GCqCON,CAAP,ChCtBO,A+BfF,CCqCI,CDrCF,QAAQ,GAAG,K/BehB,CAAwB,E+BfX,GAAc,O/BeS,CAAC,E+BhBA,G/BgBrC;A4B6BR,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNQ,AC9BP,AjCQM,A+BfD,CE/BN,ODoEY,ADrCN,OAAO,EAAE,IAAI,OAAJ,CAAY;AH4C3B,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNY,ADtCiB,0BAAgB;AH6C7C,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNY,AC9BN,AjCQA,A+BjBqB,MESd,GFTE,G/BiBH,CgCsBOL,WhCtBK,EiCRlB,CAA2B,AjCQN,IgCsBU,CAACS,AhCtBN,IgCsBb,CAAwB,IAAxB,ChCtBQ,CgCsBsBE,AhCtBN,MgCsBxB,AhCtBQ,CgCsBf,AhCtBsC,OAAvB,CAA+B,YAA/B,CAArB;A4B6BN,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNS,AC5BP,AjCMI,A+BpBuC,EEc3C,GDyBM,CAGE,CD1CU,CAAhB,I/BoBQ,CgCsBKN,AC5Bf,CD4BQ,AC5BY,ED4BH,KhCtBE,EiCNnB,CjCMsB,CiCNmC,AjCMlC,OiCNvB,EAAkF,GjCM/C,GAAG,CAAhB,IAAqB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,MAA9D;A4B6BN,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNY,AC7BU,AjCOhB,SiCPgB,GjCOV,MiCPU,GAAA,AjCOD,GAAG,KAAK,CiCPP,SjCOE,CAAgB,MAAhB,CAAuB,SAAvB,CAAlB;A4B6BN,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNY,AC9B+C,AjCSrD,A+BlBF,M/BkBE,GiCTqD,CFTnD,MESmD,AjCS3C,CAAC,EiCT0C,GjCSrC,IiCTqC,QjCS1C,CAAkB,IAAlB,CAAuB,IAAvB,CAAD,EAA+B,YAAY,CAAC,QAAb,GAAwB,IAAvD,EAA6D,SAA7D,CAAV;A4B4BN,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,ATAA,AgBNY,AC9BR,AjCSC,A+BlBC,SESG,ID8BUL,AC9Bf,CFTQ,QAAQ,GAAG,MCuCc,ADvCR,CCuCSS,IAAnB,ADvCe,CCuCS,ADvCR,ICuChB,EAA8BE,CDvCf,CAA5B,ICuCa,CAAP;AJOZ,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,AONS,AC9BN;ALqCH,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,AONK,AhCrBD,A+BnBE,I/BmBF,Q+BnBM,QAAQ,CAAC,C/BmBG,CAAC,A+BnBjB,EAAiB,G/BmBD,EAAc;A4B4BpC,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,AOHC,ACjCO,AjCSF,A+BnBE,EEUA,IAAI,GAAA,GjCSA,I+BnBE,MAAM,E/BmBI,C+BnBD,E/BmBI,I+BnBE,C/BmBG,O+BnBK,CAAC,E/BmBX,CAAgB,QAAhB,A+BnBE,C/BmBuB,C+BnB5C,E/BmBmB,CAA8B,MAAD,IAAW;A4B4BnE,ADAA,AtBAA,AaAA,ALAA,ADAA,AaAA,AzB3BQ,A+BnBA,c/BmBM,G+BnBC,K/BmBO,GAAI,OAAO,MAAP,KAAkB,A+BnBH,Q/BmBhB,GAA+B,MAA/B,E+BnBmC,C/BmBM,A+BnBL,M/BmBgC,A+BnBjC,C/BmBkC,A+BnB1B,EAA5D,CAFe,CAEiD,E/BmBhE;A4B4BR,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJA,ACjCI,AjCWI,A+BpBD,IC0CHC,KAAK,AD7CH,GC6CM,ACjCF,AjCWE,EgCsBZ,CDzCW,MEQQ,CjCWG,EiCXA,CjCWG,EAAjB,IiCXqB,CAAC,GAAR,gBAAiE,EAAnF;ALsCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJA,ACjCI,AFRI,ICyCJC,QAAQ,ACjCF,GDiCK,CDzCD,ICyCd,ADzCkB,CEQC,GAAG,CFRR,CAAU,CEQF,wBFRR,CAAN,CADG,CACyC,CEQH,IAAI,KAAK,OAAL,CAAa,GAAG,IAAI,KAAK,OAAL,CAAa,UAAU,EAA5F;ALsCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJA,ACjCI,AjCUI,A+BlBD,ICyCHC,ECjCA,MjCUS,CiCVF,CAAC,EDiCZ,CCjCI,CAAY,AjCUwB,CAAC,UAAjC,EAA6C,CiCVjD,EAA4B,SAA5B;ALsCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJA,ACjCI,AjCUM,A+BlBL,ICyCDC,GDlDA,CAUA,EEOI,AjCUE,IgCuBI,CDxCH,ECwCM,CAAC,CAAlB,ChCvBoB,A+BjBhB,EAAc,C/BiBM,CiCVF,GAAG,EjCU0B,CAAC,GiCVrB,OjCUrB,MiCV2B,iBAAN,CAAwB,SAAxB,CAA3B;ALsCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AqBrCI,AjCUK,A+BjBH,MEOF,QFPQ,IAAI,EEOE,GAAG,GFPT,CAAa,GAAG,OEOO,CAAC,GFPG,IEOlB,CAAuB,AFPA,KAAK,CAAC,OAAO,EAA7C,CAAN,CADY,CAC4C,CEOzC,EAA4C,wBAA5C,CAAjB;ALsCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJA,ADxCK,SCwCIC,eAAT,GAA2B;AJK3B,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJI,AClCA,AjCUI,A+BhBL,MCwCK,CAACH,ChCxBD,IiCVE,GDkCF,GClCQ,AjCUG,CgCwBE,AhCxBD,CgCwBEC,CClCH,WDkCf,AhCxBI,EgCwB4B,AClCX,CjCUW,QiCVjB,CAAgB,CjCUY,CAAC,YiCV7B,CAAf,AjCUgC,GAA4B,UAAW,CAAC,aAAxC,GAAwD,QAApF;A4B6BR,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJQ,AhCvBA,A+BlBL,e/BkBY;A4B4Bf,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBJK,AClCD,AjCWM,UAAA,CiCXD,QjCWU,CiCXf,CAAe,AjCWE,QADN,CiCVX,CAAyB,MAAzB;ALuCJ,ADAA,AtBAA,AaAA,ALAA,ADAA,AZ3BU,A+BzCc,EAAA,KAAA,CAAA,E/ByCd,KAAK,EAAE,KAFF,I+BvCS,GAAkB,kBAAlB;AHqExB,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBLID,ACjCA,AjCWM,A+BnBR,ECyCEA,QAAQ,ACjCJ,AjCWE,GgCsBK,ECjCF,GDiCT,ICjCI,AjCWc,CiCXD,CjCWG,IAAI,IAAJ,CiCXpB,CjCQW,CiCRkB;ALuCjC,ADAA,AtBAA,AaAA,ALAA,ADAA,AqBtCM,AjCWI,UAAA,IiCXE,QjCWU,EAAE,EiCXA,EjCWI,CiCXD,GAAA,AjCWH,EAJT,0BiCPuC,IAAI,KAAK,OAAL,CAAa,GAAG,IAAI,KAAK,OAAL,CAAa,UAAU,EAA/F;ALuCN,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBNI,AChCE,AjCWI,A+BpBR,MCyCMC,EChCF,EjCWI,KiCXG,CAAC,EDgCM,CAACG,AChCf,CAAY,AjCWE,EAAE,GgCqBlB,EAAyB,KhC1Bd,KiCNT,EAA+B,YAA/B;ALuCN,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBNQL,AChCF,AjCWI,IgCqBFA,KAAK,ChCrBH,EgCqBME,AChCN,KjCWO,EAAE,KgCqBS,CAACI,IChCF,EDgCX,CAAoBN,AChCN,KDgCd,CAAR,AChC4B,aAAM,iBAAN,CAAwB,YAAxB,CAA9B;ALuCN,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBNK,AChCC,AjCIS,GgC0BX,KC9BE,CDgCK,AhC5BH,gBiCJe,GAAG,iBAAiB,CAAC,OAAlB,CAA0B,mBAA1B,EAA+C,wBAA/C,CAApB;ALuCN,ADAA,AtBAA,AaAA,ALAA,ADAA,AoBNQG,AhCrBD,A+BpBL,ICyCMA,GhCtCmB,CAArB,G+BHY,GCyCA,GAAG,CAAC,CAAd,ADzCN,CAAyB,IAAzB,EAAkC;AHgDpC,ADAA,ATAA,ALAA,ADAA,AoBNK,ACjCC,AjCaA,A+BrBF,W/BqBO,A+BrBA,GEQC,EFRI,CAAC,OAAN,CAAc,IEQE,AFRhB,C/BqBL,CAAyB,CiCbD,CFRG,IAAtB,GAA6B,G/BqBlC,EiCb8B,CFRU,CAAC,IAAP,CAAY,EEQtB,CAAgB,CFRN,EAAkB,GAAlB,CAAsB,GAAG,IAAI,GEQvC,CAAxB,AFRmE,CAAC,GAAD,CAAjC,CAApC;AHgDJ,ADAA,ATAA,ALAA,ADAA,AZ1BK,A+BrBF;AHgDH,ADAA,ATAA,ALAA,ADAA,AoBPI,ACjCE,MDiCEH,KAAK,CAACK,CCjCH,KDiCP,EAAkB,ECjChB,GAAiB,IAAI,qBAAU,SAAd,CAAwB,eAAxB,EAAyC,KAAK,SAAL,CAAe,OAAf,CAAuB,IAAvB,CAA4B,KAAK,SAAjC,CAAzC,CAAjB;ALyCN,ADAA,ATAA,ALAA,ADAA,AoBPQE,ACjCH,AjC5B6B,A+BiBhB,EAAA,EC4CVA,GD5CU,CAAA,MC4CA,ED5CA,GAAQ,QAAR;AHoDlB,ADAA,ATAA,ALAA,ADAA,AoBPK,ACjCF;ALyCH,ADAA,ATAA,ALAA,ADAA,AoBPC,AClCE,AjC7BY,A+BqBb,E/BrBa,S+BqBG,E/BrBH,CAAA,gB+BqBb,CAAoC,E/BrBvB,GAAmB,C+BqBhC,EAA2D,gB/BrB9C;A4BuEf,ADAA,ATAA,ALAA,ADAA,AZ5BC,A+BrBG,C/BhEJ,EAAiB,K+BgET,I/BhEkB,E+BgEZ,GAAG,EAAb,kB/BhEa,SAAS,GAAA,EAAA,CAA1B;A4BkHA,ADAA,ATAA,ALAA,ADAA,AoBPA,AC7DiC,AFmB7B,SC0CKA,CD1CC,KAAK,GAAG,CC0ClB,ED1CqB,CC0CC,ID1CJ,CAAS,IAAT,CAAc,IAAI,UAAJ,CAAe,MAAf,CAAd,CAAd;AHkDJ,ADAA,ATAA,ANAA,AoBPI,ADzCA,IAAA,ECyCIN,GDzCC,CAAC,ICyCN,EAAc,CDzCd,CAAe,CAAD,IAAO,MAAM,IAAI,MAAM,CAAC,YAAP,CAAoB,CAApB,CAA/B;AHiDJ,ADAA,ATAA,ANAA,AoBPQ,ADxCJ,QAAI,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAb,CANyD,CAQzD;AH8CJ,ADAA,ATAA,ANAA,AoBPK;AJQL,ADAA,ATAA,ANAA,AqB5CM,AFFF,MEES,KFFD,MAAM,CAAC,IEEb,CAAuB,CFFjB,GAAgB,CAAjB,GAAsB,CAA7B,EAAgC;AH+CpC,ADAA,ATAA,ANAA,AoBRI,ADtCE,MCsCEO,ADtCF,MAAM,CCsCG,GAAGb,ADtCF,GAAV,OCsCsB,CAACS,eAAD,CAAxB;AJSJ,ADAA,ATAA,ANAA,AoBRIH,ADtCC,ECsCDA,QAAQ,GAAG,IAAX;AJSJ,ADAA,ATAA,ANAA,AoBPI,MAAIQ,GAAG,GAAGT,KAAK,CAACK,MAAhB;AJQJ,ADAA,ATAA,ANAA,AmB9CI,WAAO,MAAP;AH+CJ,ADAA,ATAA,ANAA,AoBRI,ADtCD,SCsCOI,GAAN,EAAW;AJSf,ADAA,ATAA,ANAA,AoBRQP,IAAAA,YAAY,GAAGF,KAAf;AJSR,ADAA,ATAA,ANAA,AoBRQA,ADtDU,EAAA,ECsDVA,GDtDU,CAAA,CCsDL,GAAG,EAAR,aDtDU,GAAmB,mBAAnB;AH+DlB,ADAA,ATAA,ANAA;AgBCA,ADAA,ATAA,ANAA,AoBTQ,ADvCN,WCuCa,ADvCG,ECuCDG,SDvCf,CCuCa,ADvCe,GCuCAM,ADvC5B,EAAuC,CCuCjC,EAA2B;AJUnC,ADAA,ATAA,ANAA,AoBTY,ADvCR,UCuCYP,CDvCL,GAAG,GAAG,GAAI,ECuCT,CDvCY,CCuCM,ADvCL,OAAJ,CAAY,GAAZ,KAAoB,CAArB,GAA0B,GAA1B,GAAgC,GAAG,KAAK,IAAI,IAAJ,GAAW,OAAX,EAAoB,EAA5E,CADqC,CAC2C;AHiDpF,ADAA,ATAA,ANAA,AoBTgBA,ADvCb,QCuCaA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;AJUhB,ADAA,ATAA,ANAA,AoBTa;AJUb,ADAA,ATAA,ANAA,AoBTS,AD3CS,EAAA,KAAA,CAAA,WAAA,GAAW,WAAX;AHqDlB,ADAA,ATAA,ANAA;AgBCA,ADAA,ATAA,ANAA,AoBVQP,ADxCN,ICwCMA,ODxCU,GCwCA,EDxChB,CCwCmB,ADxCG,CCwCF,ADxCpB,CCwCM,CDxCwB,CAA9B,EAAoC;AHmDtC,ADAA,ATAA,ANAA,AoBVQM,ADxCJ,ICwCIA,GAAG,CDxCH,CAAC,CCwCKT,IDxCA,CCwCK,ADxCf,CCwCgBK,CDxCH,KCwCT,EDxCgB,IAAP;AHmDjB,ADAA,ATAA,ANAA,AoBVK,ADvCD,QAAI,IAAI,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,CAAX;AHkDJ,ADAA,ATAA,ANAA,AmBlDI,QACI,IAAI,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,CADX;AHmDJ,ADAA,AfAA,AoBXIH,ADxCA,ECwCAA,MDtCI,CAFJ,KCwCY,GAAG,IAAf;AJYJ,ADAA,AfAA,AoBXID,EAAAA,QAAQ,GAAG,KAAX;AJYJ,ADAA,AfAA,AoBXIH,ADtCA,ECsCAA,MDtCI,IAAI,IAAI,CCsCG,CAACU,EDtChB,EAAkB,GCsCH,CAAf;AJYJ,ADAA,AfAA,AoBXC,ADtCK,UAAI,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,MAAlB,EAA0B,OAAO,KAAP;AHkDhC,ADAA,AfAA;AgBCA,ADAA,AfAA,AoBXAxB,ADvCM,OCuCC,CAAC2B,GDvCG,CAAC,GAAG,CCuCf,ADvCM,EAAY,CCuCC,ADvCA,GAAG,CAAC,CAAC,KCuCKf,CDvCvB,ECuCa,ADvCa,CAAC,CCuCC,CDvC5B,EACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,CAAR,CAAV,EAAwB,OAAO,KAAP;AHkDhC,ADAA,AfAA,AoBXI,MAAIgB,IAAI,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACT,MAAV,GAAmB,CAA7B,CAAX;AJYJ,ADAA,AfAA,AmBlDM,aAAO,IAAP;AHmDN,ADAA,AfAA,AoBZI,ADtCC,MCsCGS,SAAS,CAACT,MAAV,GAAmB,CAAvB,EAA0B;AJa9B,ADAA,AfAA,AoBZQ,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AJanD,ADAA,AfAA,AoBZYH,ADtCR,MCsCQA,EDtCJ,ECsCQ,CAACG,CAAC,ADtCN,GCsCS,CAAL,ADtCA,CCsCJ,GAAcD,ADtCtB,EAAkB,OCsCa,ADtCN,CCsCOC,CAAD,CAAvB,EDtCU;AHmDtB,ADAA,AfAA,AoBZS;AJaT,ADAA,AfAA,AoBZK,ADtCD,QAAI,CAAC,IAAI,CAAL,IAAU,OAAO,CAAP,KAAa,QAAvB,IAAmC,OAAO,CAAP,KAAa,QAApD,EAA8D;AHmDlE,ADAA,AfAA,AmBlDM,YAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAb;AHmDN,ADAA,AfAA,AoBbIf,ADrCE,ECqCFA,KAAK,CAACgB,EDrCA,ECqCN,CAAW,CDrCD,CAAC,ECqCIC,IAAJ,ADrCL,CCqCcrB,GAAT,CDrCW,CCqCGgB,IAAd,CAAX,ADrC4B,CAAC,IAAP,CAAY,CAAZ,EAAe,MAAnC,EAA2C,OAAO,KAAP;AHmDjD,ADAA,AfAA,AmBjDM,YAAM,KAAK,GAAG,CAAC,YAAY,IAA3B;AHkDN,ADAA,AfAA,AoBdI,ADpCE,MCoCEZ,KAAK,CAACK,ADnCJ,KAAK,CCmCP,EDnCU,CAAC,ECmCM,CAAjB,IAAsB,CAACJ,IDnCA,ICmC3B,ADpCE,ECoCmC;AJezC,ADAA,AfAA,AoBdQN,ADnCF,ICmCEA,MDnCE,ICmCQ,CAACY,ADnCJ,IAAI,KAAb,CCmCY,CAAV,ADnCkB,OAAO,CAAC,CAAC,OAAF,MAAe,CAAC,CAAC,OAAF,EAAtB;AHkD1B,ADAA,AfAA,AoBdK,ADnCC,UAAI,KAAK,IAAI,KAAb,EAAoB,OAAO,KAAP;AHkD1B,ADAA,AfAA,AoBdC,ADlCK,CCuBN,EAaA,SDpCY,OAAO,GAAG,CAAC,YAAY,MAA7B;AHiDN,ADAA,AfAA,AmBjDM,YACI,OAAO,GAAG,CAAC,YAAY,MAD3B;AHkDN,ADAA,AfAA,AmBhDM,UAAI,OAAO,IAAI,OAAf,EAAwB,OAAO,CAAC,CAAC,QAAF,MAAgB,CAAC,CAAC,QAAF,EAAvB;AHiD9B,ADAA,AfAA,AoBdA,ADlCM,SCkCGU,CDlCC,GCkCV,CAAcrB,GAAd,ADlCiB,ECkCEsB,EDlCE,GCkCrB,EAA0B,EDlCpB,EAAwB,OAAO,KAAP;AHiD9B,ADAA,AfAA,AoBdI,OAAKtB,GAAL,GAAWA,GAAX;AJeJ,ADAA,AfAA,AoBdI,ADlCE,OCkCGsB,IDlCE,CCkCP,ADlCQ,GCkCKA,ADlCF,CAAT,EAAY,CAAC,CCkCf,EDlCkB,IAAI,CAAC,MAArB,EAA6B,CAAC,EAA9B,EACE,IAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,CAArC,EAAwC,IAAI,CAAC,CAAD,CAA5C,CAAL,EAAuD,OAAO,KAAP;AHgD/D,ADAA,AfAA,AoBdC;AJeD,ADAA,AfAA,AmB/CM,WAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,IAAI,CAAC,MAArB,EAA6B,CAAC,EAA9B,EACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAD,CAAL,CAAF,EAAa,CAAC,CAAC,IAAI,CAAC,CAAD,CAAL,CAAd,CAAV,EAAoC,OAAO,KAAP;AH+C5C,ADAA,AfAA,AoBfAD,IAAI,CAACE,SAAL,CAAeT,GAAf,GAAqB,YAAY;AJgBjC,ADAA,AfAA,AoBfI,AD/BE,OC+BGd,GAAL,CAASwB,ED/BA,GC+BT,CAAe,AD/Bb,IC+BF,EAAqB,KAAKF,KAA1B;AJgBJ,ADAA,AfAA,AoBfC,AD/BI,CC6BL;AJkBA,ADAA,AfAA;AgBCA,ADAA,AfAA,AoBhBAlC,AD9BI,OC8BG,CAACqC,GD9BG,EC8BX,GAAgB,AD9BZ,SC8BJ;AJiBA,ADAA,AfAA,AoBfArC,AD/BG,OC+BI,CAACsC,GAAR,GAAc,EAAd;AJgBA,ADAA,AfAA,AoBfAtC,OAAO,CAACuC,IAAR,GAAe,EAAf;AJgBA,ADAA,AfAA,AoBfAvC,ADzEkB,EAAA,KCyEX,ADzEW,CCyEVwC,ADzEU,KAAA,ECyElB,CDzEuB,ECyEL,EAAlB,CDzEkB,CCyEI;AJgBtB,ADAA,AI/CC,CA7HD,EAAiB,KAAK,qBAAL,KAAK,GAAA,EAAA,CAAtB;AH6KA,ADAA,AKhBAxC,OAAO,CAACyC,QAAR,GAAmB,EAAnB;AJiBA,ADAA;ACCA,ADAA,AKhBA,SAASC,IAAT,GAAgB,CAAE;AJiBlB,ADAA;ACCA,ADAA,AKhBA1C,OAAO,CAAC2C,EAAR,GAAaD,IAAb;AJiBA,ADAA,AKhBA1C,OAAO,CAAC4C,WAAR,GAAsBF,IAAtB;AJiBA,ADAA,AKhBA1C,OAAO,CAAC6C,IAAR,GAAeH,IAAf;AJiBA,ADAA,AKhBA1C,OAAO,CAAC8C,GAAR,GAAcJ,IAAd;AJiBA,ADAA,AKhBA1C,OAAO,CAAC+C,cAAR,GAAyBL,IAAzB;AJiBA,ADAA,AKhBA1C,OAAO,CAACgD,kBAAR,GAA6BN,IAA7B;AJiBA,ADAA,AKhBA1C,OAAO,CAACiD,IAAR,GAAeP,IAAf;AJiBA,ADAA,AKhBA1C,OAAO,CAACkD,eAAR,GAA0BR,IAA1B;AJiBA,ADAA,AKhBA1C,OAAO,CAACmD,mBAAR,GAA8BT,IAA9B;AJiBA,ADAA;ACCA,ADAA,AKhBA1C,OAAO,CAACoD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AJiBpC,ADAA,AKjBsC,SAAO,EAAP;AJkBtC,ADAA,AKlBiD,CAAjD;AJmBA,ADAA;ACCA,ADAA,AKlBArD,OAAO,CAACsD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AJmBlC,ADAA,AKlBI,QAAM,IAAI/C,KAAJ,CAAU,kCAAV,CAAN;AJmBJ,ADAA,AKlBC,CAFD;AJqBA,ADAA;ACCA,ADAA,AKlBAN,OAAO,CAACuD,GAAR,GAAc,YAAY;AJmB1B,ADAA,AKnB4B,SAAO,GAAP;AJoB5B,ADAA,AKpBwC,CAAxC;AJqBA,ADAA;ACCA,ADAA,AKrBAvD,OAAO,CAACwD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AJsB/B,ADAA,AKrBI,QAAM,IAAInD,KAAJ,CAAU,gCAAV,CAAN;AJsBJ,ADAA,AKrBC,CAFD;AJwBA,ADAA;ACCA,ADAA,AKtBAN,OAAO,CAAC0D,KAAR,GAAgB,YAAW;AJuB3B,ADAA,AKvB6B,SAAO,CAAP;AJwB7B,ADAA,AKxBwC,CAAxC;AJyfile":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["export namespace Hass {\r\n\r\n  export class HassObject {\r\n    callService = (domain: string, service: string, data: any) => {};\r\n    states?: { [index: string]: HassEntityState } = {};\r\n  }\r\n\r\n  export class HassEntityStates {\r\n    states?: { [index: string]: HassEntityState };\r\n  }\r\n\r\n  export class HassEntityState {\r\n    entity_id?: string;\r\n    state?: string;\r\n    last_changed?: Date;\r\n    last_updated?: Date;\r\n    attributes?: { [index: string]: any };\r\n    context: any;\r\n  }\r\n\r\n}","import { Hass } from './floorplan/hass';\r\n\r\nexport namespace Simulator {\r\n\r\n  export class SimulatorConfig {\r\n    simulations = new Array<Simulation>();\r\n  }\r\n\r\n  export class Simulation {\r\n    entities = new Array<string | SimulationEntity>();\r\n    states = new Array<SimulationState>();\r\n    enabled: boolean = true;\r\n  }\r\n\r\n  export class SimulationEntity {\r\n    entity?: string;\r\n    attributes?: { [index: string]: any };\r\n  }\r\n\r\n  export class SimulationState {\r\n    state: string = \"\";\r\n    duration: number = 0;\r\n  }\r\n\r\n  export class Simulator {\r\n    simulationProcessors = new Array<SimulationProcessor>();\r\n    hass = new Hass.HassObject();\r\n\r\n    constructor(simulatorConfig: SimulatorConfig, private hassChanged: (hass: Hass.HassObject) => void) {\r\n      for (let simulation of simulatorConfig.simulations) {\r\n        const simulationProcessor = new SimulationProcessor(simulation, this.entityStatesChanged.bind(this));\r\n        this.simulationProcessors.push(simulationProcessor);\r\n      }\r\n    }\r\n\r\n    entityStatesChanged(entityStates: Array<Hass.HassEntityState>) {\r\n      for (let entityState of entityStates) {\r\n        this.hass.states![entityState.entity_id!] = entityState;\r\n      }\r\n\r\n      this.hassChanged(this.hass);\r\n    }\r\n  }\r\n\r\n  export class SimulationProcessor {\r\n    currentIndex = 0;\r\n\r\n    constructor(private simulation: Simulation, private entityStatesChanged: (entityStates: Array<Hass.HassEntityState>) => void) {\r\n      this.triggerState(this.simulation.states[0]);\r\n    }\r\n\r\n    triggerState(currentState: SimulationState) {\r\n      if (this.simulation.enabled || (this.simulation.enabled === undefined)) {\r\n        this.updateEntityStates(currentState.state);\r\n      }\r\n\r\n      const currentIndex = this.simulation.states.indexOf(currentState);\r\n      const nextIndex = (currentIndex + 1) % this.simulation.states.length;\r\n      const nextState = this.simulation.states[nextIndex];\r\n\r\n      setTimeout(this.triggerState.bind(this), currentState.duration * 1000, nextState);\r\n    }\r\n\r\n    updateEntityStates(state: string) {\r\n      const entityStates = this.simulation.entities.map((entity) => {\r\n        const entityId = (typeof entity === 'string') ? entity : (entity as SimulationEntity).entity;\r\n\r\n        let attributes = {} as { [index: string]: any };\r\n        if ((entity as SimulationEntity).attributes) {\r\n          attributes = (entity as SimulationEntity).attributes!;\r\n        }\r\n        attributes!.friendly_name = attributes!.friendly_name ? attributes!.friendly_name : entityId;\r\n\r\n        return {\r\n          entity_id: entityId,\r\n          state: state,\r\n          last_changed: new Date(),\r\n          last_updated: new Date(),\r\n          attributes: attributes,\r\n          context: {},\r\n        } as Hass.HassEntityState;\r\n      });\r\n\r\n      this.entityStatesChanged(entityStates);\r\n    }\r\n  }\r\n\r\n}","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  if (typeof output === 'function') {\n    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  } else {\n    return loadAll(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  }\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    && c !== CHAR_COLON\n    && c !== CHAR_SHARP;\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = state.condenseFlow ? '\"' : '';\n\n    if (index !== 0) pairBuffer += ', ';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","import * as yaml from 'js-yaml';\r\n\r\nexport namespace Utils {\r\n\r\n  /***************************************************************************************************************************/\r\n  /* General helper functions\r\n  /***************************************************************************************************************************/\r\n\r\n  export function parseYaml(yamlText: string): any {\r\n    return yaml.safeLoad(yamlText);\r\n  }\r\n\r\n  export async function fetchTextResource(resourceUrl: string, useCache: boolean = true): Promise<string> {\r\n    resourceUrl = useCache ? resourceUrl : cacheBuster(resourceUrl);\r\n\r\n    const request = new Request(resourceUrl, {\r\n      cache: useCache ? 'reload' : 'no-cache',\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n        return text;\r\n      }\r\n      else {\r\n        throw new Error(`Error fetching resource`); //`\r\n      }\r\n    }\r\n    catch (error) {\r\n      throw new URIError(`${resourceUrl}: ${error.message}`); //`\r\n    }\r\n  }\r\n\r\n  export async function fetchImageResource(resourceUrl: string, useCache: boolean): Promise<string> {\r\n    resourceUrl = useCache ? resourceUrl : cacheBuster(resourceUrl);\r\n\r\n    const request = new Request(resourceUrl, {\r\n      cache: useCache ? 'reload' : 'no-cache',\r\n      headers: new Headers({ 'Content-Type': 'text/plain; charset=x-user-defined' }),\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        const result = await response.arrayBuffer();\r\n        return `data:image/jpeg;base64,${arrayBufferToBase64(result)}`; //`\r\n      }\r\n      else {\r\n        throw new Error(`Error fetching resource`); //`\r\n      }\r\n    }\r\n    catch (error) {\r\n      throw new URIError(`${resourceUrl}: ${error.message}`); //`\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Utility functions\r\n  /***************************************************************************************************************************/\r\n\r\n  export function getArray(list: any): Array<any> {\r\n    return Array.isArray(list) ? list : Object.keys(list).map(key => list[key]);\r\n  }\r\n\r\n  export function arrayBufferToBase64(buffer: ArrayBufferLike): string {\r\n    let binary = '';\r\n    const bytes = [].slice.call(new Uint8Array(buffer));\r\n\r\n    bytes.forEach((b) => binary += String.fromCharCode(b));\r\n\r\n    let base64 = window.btoa(binary);\r\n\r\n    // IOS / Safari will not render base64 images unless length is divisible by 4\r\n    while ((base64.length % 4) > 0) {\r\n      base64 += '=';\r\n    }\r\n\r\n    return base64;\r\n  }\r\n\r\n  export function cacheBuster(url: string): string {\r\n    return `${url}${(url.indexOf('?') >= 0) ? '&' : '?'}_=${new Date().getTime()}`; //`\r\n  }\r\n\r\n  export function equal(a: any, b: any): boolean {\r\n    if (a === b) return true;\r\n\r\n    let arrA = Array.isArray(a)\r\n      , arrB = Array.isArray(b)\r\n      , i;\r\n\r\n    if (arrA && arrB) {\r\n      if (a.length != b.length) return false;\r\n      for (i = 0; i < a.length; i++)\r\n        if (!equal(a[i], b[i])) return false;\r\n      return true;\r\n    }\r\n\r\n    if (arrA != arrB) return false;\r\n\r\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n      const keys = Object.keys(a);\r\n      if (keys.length !== Object.keys(b).length) return false;\r\n\r\n      const dateA = a instanceof Date\r\n        , dateB = b instanceof Date;\r\n      if (dateA && dateB) return a.getTime() == b.getTime();\r\n      if (dateA != dateB) return false;\r\n\r\n      const regexpA = a instanceof RegExp\r\n        , regexpB = b instanceof RegExp;\r\n      if (regexpA && regexpB) return a.toString() == b.toString();\r\n      if (regexpA != regexpB) return false;\r\n\r\n      for (i = 0; i < keys.length; i++)\r\n        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n      for (i = 0; i < keys.length; i++)\r\n        if (!equal(a[keys[i]], b[keys[i]])) return false;\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { FloorplanPanel } from './floorplan-panel';\r\nimport { FloorplanCard } from './floorplan';\r\nimport { Floorplan as FloorplanConfig } from './lib/floorplan/floorplan-config';\r\nimport { Lovelace } from './lib/lovelace/card-config';\r\nimport { Simulator } from './lib/simulator';\r\nimport { Utils } from './lib/utils';\r\nimport { FloorplanElement } from './floorplan-element';\r\n\r\nwindow.onload = function () {\r\n  const projects = [\r\n    { dir: \"simple\", configFile: \"simple-card.yaml\", statesFile: \"states.yaml\", },\r\n    { dir: \"simple\", configFile: \"simple.yaml\", statesFile: \"states.yaml\", },\r\n    { dir: \"home-multi\", configFile: \"main.yaml\", statesFile: \"states.yaml\", },\r\n    { dir: \"ian\", configFile: \"home.yaml\", statesFile: \"states.yaml\", },\r\n    { dir: \"home\", configFile: \"home.yaml\", statesFile: \"states.yaml\", },\r\n  ] as Array<FloorplanProject>;\r\n\r\n  const container = document.querySelector(\".project-container\") as Element;\r\n\r\n  console.log(process.env.NODE_ENV);\r\n  console.log(process.env.EXAMPLES_DIR);\r\n  console.log(document.location);\r\n\r\n  projects.forEach((project) => {\r\n    const isCard = project.configFile!.endsWith(\"card.yaml\");\r\n\r\n    const projectElement = document.createElement(\"div\");\r\n    projectElement.classList.add(\"floorplan-project\");\r\n    container.appendChild(projectElement);\r\n\r\n    const projectHeading = document.createElement(\"h2\");\r\n    projectHeading.textContent = `${isCard ? \"Card\" : \"Panel\"} - ${project.dir!}`;\r\n    projectHeading.style.textAlign = \"center\";\r\n    projectElement.appendChild(projectHeading);\r\n\r\n    const floorplanContainer = document.createElement(\"div\");\r\n    floorplanContainer.classList.add(\"floorplan-container\");\r\n    projectElement.appendChild(floorplanContainer);\r\n\r\n    const floorplanElement = isCard ?\r\n      document.createElement(\"floorplan-card\") as FloorplanCard :\r\n      document.createElement(\"floorplan-panel\") as FloorplanPanel;\r\n    floorplanContainer.appendChild(floorplanElement);\r\n\r\n    const projectDemo = new FloorplanProjectDemo(floorplanElement, project);\r\n  });\r\n}\r\n\r\nexport class FloorplanProjectDemo {\r\n  simulator?: Simulator.Simulator;\r\n\r\n  constructor(private floorplan: FloorplanElement, private project: FloorplanProject) {\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    const publicUrl = process.env && process.env.PUBLIC_URL ? process.env.PUBLIC_URL : \"\";\r\n    const configUrl = `${process.env.EXAMPLES_DIR}/${this.project.dir}/${this.project.configFile}`;\r\n    console.log(\"Config YAML:\", configUrl);\r\n    let configYamlText = await Utils.fetchTextResource(configUrl);\r\n    configYamlText = configYamlText.replace(/local\\/floorplan/g, \"pkozul/local/floorplan\");\r\n    const config = Utils.parseYaml(configYamlText) as FloorplanConfig.FloorplanConfig | Lovelace.CardConfig;\r\n\r\n    this.floorplan.setConfig(config);\r\n\r\n    if (this.project.statesFile) {\r\n      const simulatorUrl = `${process.env.EXAMPLES_DIR}/${this.project.dir}/${this.project.statesFile}`;\r\n      console.log(\"Simulator YAML:\", simulatorUrl);\r\n      let simulatorYamlText = await Utils.fetchTextResource(simulatorUrl);\r\n      simulatorYamlText = simulatorYamlText.replace(/local\\/floorplan/g, \"pkozul/local/floorplan\");\r\n      const simulatorConfig = Utils.parseYaml(simulatorYamlText) as Simulator.SimulatorConfig;\r\n      this.simulator = new Simulator.Simulator(simulatorConfig, this.floorplan.setHass.bind(this.floorplan));\r\n    }\r\n  }\r\n}\r\n\r\nexport class FloorplanProject {\r\n  dir?: string;\r\n  configFile?: string;\r\n  statesFile?: string\r\n}"]}