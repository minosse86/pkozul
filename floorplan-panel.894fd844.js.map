{"version":3,"sources":["lib/floorplan/floorplan-info.ts","lib/fully-kiosk.ts","../node_modules/debounce/index.js","../node_modules/js-yaml/lib/js-yaml/common.js","../node_modules/js-yaml/lib/js-yaml/exception.js","../node_modules/js-yaml/lib/js-yaml/mark.js","../node_modules/js-yaml/lib/js-yaml/type.js","../node_modules/js-yaml/lib/js-yaml/schema.js","../node_modules/js-yaml/lib/js-yaml/type/str.js","../node_modules/js-yaml/lib/js-yaml/type/seq.js","../node_modules/js-yaml/lib/js-yaml/type/map.js","../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../node_modules/js-yaml/lib/js-yaml/type/null.js","../node_modules/js-yaml/lib/js-yaml/type/bool.js","../node_modules/js-yaml/lib/js-yaml/type/int.js","../node_modules/js-yaml/lib/js-yaml/type/float.js","../node_modules/js-yaml/lib/js-yaml/schema/json.js","../node_modules/js-yaml/lib/js-yaml/schema/core.js","../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../node_modules/js-yaml/lib/js-yaml/type/merge.js","../node_modules/js-yaml/lib/js-yaml/type/binary.js","../node_modules/js-yaml/lib/js-yaml/type/omap.js","../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../node_modules/js-yaml/lib/js-yaml/type/set.js","../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../node_modules/js-yaml/lib/js-yaml/loader.js","../node_modules/js-yaml/lib/js-yaml/dumper.js","../node_modules/js-yaml/lib/js-yaml.js","../node_modules/js-yaml/index.js","lib/utils.ts","lib/floorplan/floorplan.ts","floorplan-element.ts","floorplan-panel.ts"],"names":[],"mappings":";AAGA,aAAM,IAAW,EAAjB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,cAAA,EAAA,SAAiB,GAEF,EAAA,SAAA,MAAb,cAIE,KAAA,UAAoB,EACpB,KAAA,WAAqB,IAGV,EAAA,YAAA,MAAb,cACE,KAAA,UAAY,IAAI,QAGL,EAAA,eAAA,MACX,YACS,EACA,EACA,EACA,EACA,EACA,EACA,GANA,KAAA,SAAA,EACA,KAAA,IAAA,EACA,KAAA,WAAA,EACA,KAAA,mBAAA,EACA,KAAA,gBAAA,EACA,KAAA,aAAA,EACA,KAAA,mBAAA,IAIE,EAAA,SAAA,MAMX,YAAmB,GAAA,KAAA,KAAA,EALnB,KAAA,gBAAkB,IAAI,IAGtB,KAAA,WAAqB,EAGd,KAAA,KAAO,IAIH,EAAA,WAAA,MAAb,cAGE,KAAA,UAAY,IAAI,QAxCpB,CAAiB,IAAA,QAAA,cAAA,EAAa;;ACDP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAAjB,MAAO,EACX,YAAoB,GAAA,KAAA,UAAA,EAGpB,SAJqB,QAAA,WAAA;;ACYvB,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAGA,SAAA,IACA,IAAA,EAAA,KAAA,MAAA,EAEA,EAAA,GAAA,GAAA,EACA,EAAA,WAAA,EAAA,EAAA,IAEA,EAAA,KACA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,OAXA,MAAA,IAAA,EAAA,KAgBA,IAAA,EAAA,WACA,EAAA,KACA,EAAA,UACA,EAAA,KAAA,MACA,IAAA,EAAA,IAAA,EAOA,OANA,IAAA,EAAA,WAAA,EAAA,IACA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAGA,GAoBA,OAjBA,EAAA,MAAA,WACA,IACA,aAAA,GACA,EAAA,OAIA,EAAA,MAAA,WACA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,KAEA,aAAA,GACA,EAAA,OAIA,EAIA,EAAA,SAAA,EAEA,OAAA,QAAA;;ACrEA,aAGA,SAAA,EAAA,GACA,OAAA,MAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,GAAA,OAAA,EAIA,SAAA,EAAA,GACA,OAAA,MAAA,QAAA,GAAA,EACA,EAAA,GAAA,GAEA,CAAA,GAIA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAEA,GAAA,EAGA,IAAA,EAAA,EAAA,GAFA,EAAA,OAAA,KAAA,IAEA,OAAA,EAAA,EAAA,GAAA,EAEA,EADA,EAAA,EAAA,IACA,EAAA,GAIA,OAAA,EAIA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GAAA,EAGA,OAAA,EAIA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,OAAA,oBAAA,EAAA,EAIA,OAAA,QAAA,UAAA,EACA,OAAA,QAAA,SAAA,EACA,OAAA,QAAA,QAAA,EACA,OAAA,QAAA,OAAA,EACA,OAAA,QAAA,eAAA,EACA,OAAA,QAAA,OAAA;;ACxDA,aAEA,SAAA,EAAA,EAAA,GAEA,MAAA,KAAA,MAEA,KAAA,KAAA,gBACA,KAAA,OAAA,EACA,KAAA,KAAA,EACA,KAAA,SAAA,KAAA,QAAA,qBAAA,KAAA,KAAA,IAAA,KAAA,KAAA,WAAA,IAGA,MAAA,kBAEA,MAAA,kBAAA,KAAA,KAAA,aAGA,KAAA,OAAA,IAAA,OAAA,OAAA,GAMA,EAAA,UAAA,OAAA,OAAA,MAAA,WACA,EAAA,UAAA,YAAA,EAGA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,KAAA,KAAA,KAQA,OANA,GAAA,KAAA,QAAA,oBAEA,GAAA,KAAA,OACA,GAAA,IAAA,KAAA,KAAA,YAGA,GAIA,OAAA,QAAA;;AC1CA,aAGA,IAAA,EAAA,QAAA,YAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,OAAA,EACA,KAAA,SAAA,EACA,KAAA,KAAA,EACA,KAAA,OAAA,EAIA,EAAA,UAAA,WAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAEA,IAAA,KAAA,OAAA,OAAA,KAQA,IANA,EAAA,GAAA,EACA,EAAA,GAAA,GAEA,EAAA,GACA,EAAA,KAAA,SAEA,EAAA,IAAA,IAAA,sBAAA,QAAA,KAAA,OAAA,OAAA,EAAA,KAEA,GADA,GAAA,EACA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,CACA,EAAA,QACA,GAAA,EACA,MAOA,IAHA,EAAA,GACA,EAAA,KAAA,SAEA,EAAA,KAAA,OAAA,SAAA,IAAA,sBAAA,QAAA,KAAA,OAAA,OAAA,KAEA,IADA,GAAA,GACA,KAAA,SAAA,EAAA,EAAA,EAAA,CACA,EAAA,QACA,GAAA,EACA,MAMA,OAFA,EAAA,KAAA,OAAA,MAAA,EAAA,GAEA,EAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,KACA,EAAA,OAAA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,QAAA,KAIA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,EAAA,GAgBA,OAdA,KAAA,OACA,GAAA,OAAA,KAAA,KAAA,MAGA,GAAA,YAAA,KAAA,KAAA,GAAA,aAAA,KAAA,OAAA,GAEA,IACA,EAAA,KAAA,gBAGA,GAAA,MAAA,GAIA,GAIA,OAAA,QAAA;;AC3EA,aAEA,IAAA,EAAA,QAAA,eAEA,EAAA,CACA,OACA,UACA,YACA,aACA,YACA,YACA,eACA,gBAGA,EAAA,CACA,SACA,WACA,WAGA,SAAA,EAAA,GACA,IAAA,EAAA,GAUA,OARA,OAAA,GACA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,EAAA,GAAA,QAAA,SAAA,GACA,EAAA,OAAA,IAAA,MAKA,EAGA,SAAA,EAAA,EAAA,GAoBA,GAnBA,EAAA,GAAA,GAEA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,IAAA,IAAA,EAAA,QAAA,GACA,MAAA,IAAA,EAAA,mBAAA,EAAA,8BAAA,EAAA,kBAKA,KAAA,IAAA,EACA,KAAA,KAAA,EAAA,MAAA,KACA,KAAA,QAAA,EAAA,SAAA,WAAA,OAAA,GACA,KAAA,UAAA,EAAA,WAAA,SAAA,GAAA,OAAA,GACA,KAAA,WAAA,EAAA,YAAA,KACA,KAAA,UAAA,EAAA,WAAA,KACA,KAAA,UAAA,EAAA,WAAA,KACA,KAAA,aAAA,EAAA,cAAA,KACA,KAAA,aAAA,EAAA,EAAA,cAAA,OAEA,IAAA,EAAA,QAAA,KAAA,MACA,MAAA,IAAA,EAAA,iBAAA,KAAA,KAAA,uBAAA,EAAA,gBAIA,OAAA,QAAA;;AC5DA,aAIA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,eACA,EAAA,QAAA,UAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GAgBA,OAdA,EAAA,QAAA,QAAA,SAAA,GACA,EAAA,EAAA,EAAA,EAAA,KAGA,EAAA,GAAA,QAAA,SAAA,GACA,EAAA,QAAA,SAAA,EAAA,GACA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MACA,EAAA,KAAA,KAIA,EAAA,KAAA,KAGA,EAAA,OAAA,SAAA,EAAA,GACA,OAAA,IAAA,EAAA,QAAA,KAKA,SAAA,IACA,IAKA,EAAA,EALA,EAAA,CACA,OAAA,GACA,SAAA,GACA,QAAA,GACA,SAAA,IAGA,SAAA,EAAA,GACA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAGA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,GAAA,EACA,UAAA,GAAA,QAAA,GAEA,OAAA,EAIA,SAAA,EAAA,GACA,KAAA,QAAA,EAAA,SAAA,GACA,KAAA,SAAA,EAAA,UAAA,GACA,KAAA,SAAA,EAAA,UAAA,GAEA,KAAA,SAAA,QAAA,SAAA,GACA,GAAA,EAAA,UAAA,WAAA,EAAA,SACA,MAAA,IAAA,EAAA,qHAIA,KAAA,iBAAA,EAAA,KAAA,WAAA,IACA,KAAA,iBAAA,EAAA,KAAA,WAAA,IACA,KAAA,gBAAA,EAAA,KAAA,iBAAA,KAAA,kBAIA,EAAA,QAAA,KAGA,EAAA,OAAA,WACA,IAAA,EAAA,EAEA,OAAA,UAAA,QACA,KAAA,EACA,EAAA,EAAA,QACA,EAAA,UAAA,GACA,MAEA,KAAA,EACA,EAAA,UAAA,GACA,EAAA,UAAA,GACA,MAEA,QACA,MAAA,IAAA,EAAA,wDAMA,GAHA,EAAA,EAAA,QAAA,GACA,EAAA,EAAA,QAAA,IAEA,EAAA,MAAA,SAAA,GAAA,OAAA,aAAA,IACA,MAAA,IAAA,EAAA,6FAGA,IAAA,EAAA,MAAA,SAAA,GAAA,OAAA,aAAA,IACA,MAAA,IAAA,EAAA,sFAGA,OAAA,IAAA,EAAA,CACA,QAAA,EACA,SAAA,KAKA,OAAA,QAAA;;AC3GA,aAEA,IAAA,EAAA,QAAA,WAEA,OAAA,QAAA,IAAA,EAAA,wBAAA,CACA,KAAA,SACA,UAAA,SAAA,GAAA,OAAA,OAAA,EAAA,EAAA;;ACNA,aAEA,IAAA,EAAA,QAAA,WAEA,OAAA,QAAA,IAAA,EAAA,wBAAA,CACA,KAAA,WACA,UAAA,SAAA,GAAA,OAAA,OAAA,EAAA,EAAA;;ACNA,aAEA,IAAA,EAAA,QAAA,WAEA,OAAA,QAAA,IAAA,EAAA,wBAAA,CACA,KAAA,UACA,UAAA,SAAA,GAAA,OAAA,OAAA,EAAA,EAAA;;ACFA,aAGA,IAAA,EAAA,QAAA,aAGA,OAAA,QAAA,IAAA,EAAA,CACA,SAAA,CACA,QAAA,eACA,QAAA,eACA,QAAA;;ACdA,aAEA,IAAA,EAAA,QAAA,WAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,OAEA,OAAA,IAAA,GAAA,MAAA,GACA,IAAA,IAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAGA,SAAA,IACA,OAAA,KAGA,SAAA,EAAA,GACA,OAAA,OAAA,EAGA,OAAA,QAAA,IAAA,EAAA,yBAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA,CACA,UAAA,WAAA,MAAA,KACA,UAAA,WAAA,MAAA,QACA,UAAA,WAAA,MAAA,QACA,UAAA,WAAA,MAAA,SAEA,aAAA;;AChCA,aAEA,IAAA,EAAA,QAAA,WAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,OAEA,OAAA,IAAA,IAAA,SAAA,GAAA,SAAA,GAAA,SAAA,IACA,IAAA,IAAA,UAAA,GAAA,UAAA,GAAA,UAAA,GAGA,SAAA,EAAA,GACA,MAAA,SAAA,GACA,SAAA,GACA,SAAA,EAGA,SAAA,EAAA,GACA,MAAA,qBAAA,OAAA,UAAA,SAAA,KAAA,GAGA,OAAA,QAAA,IAAA,EAAA,yBAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA,CACA,UAAA,SAAA,GAAA,OAAA,EAAA,OAAA,SACA,UAAA,SAAA,GAAA,OAAA,EAAA,OAAA,SACA,UAAA,SAAA,GAAA,OAAA,EAAA,OAAA,UAEA,aAAA;;ACjCA,aAEA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,WAEA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,IACA,IAAA,GAAA,GAAA,IACA,IAAA,GAAA,GAAA,IAGA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,GAGA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,GAGA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAGA,EAHA,EAAA,EAAA,OACA,EAAA,EACA,GAAA,EAGA,IAAA,EAAA,OAAA,EASA,GAJA,OAHA,EAAA,EAAA,KAGA,MAAA,IACA,EAAA,IAAA,IAGA,MAAA,EAAA,CAEA,GAAA,EAAA,IAAA,EAAA,OAAA,EAKA,GAAA,OAJA,EAAA,IAAA,IAIA,CAIA,IAFA,IAEA,EAAA,EAAA,IAEA,GAAA,OADA,EAAA,EAAA,IACA,CACA,GAAA,MAAA,GAAA,MAAA,EAAA,OAAA,EACA,GAAA,EAEA,OAAA,GAAA,MAAA,EAIA,GAAA,MAAA,EAAA,CAIA,IAFA,IAEA,EAAA,EAAA,IAEA,GAAA,OADA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,EAAA,WAAA,IAAA,OAAA,EACA,GAAA,EAEA,OAAA,GAAA,MAAA,EAIA,KAAA,EAAA,EAAA,IAEA,GAAA,OADA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,EAAA,WAAA,IAAA,OAAA,EACA,GAAA,EAEA,OAAA,GAAA,MAAA,EAMA,GAAA,MAAA,EAAA,OAAA,EAEA,KAAA,EAAA,EAAA,IAEA,GAAA,OADA,EAAA,EAAA,IACA,CACA,GAAA,MAAA,EAAA,MACA,IAAA,EAAA,EAAA,WAAA,IACA,OAAA,EAEA,GAAA,EAIA,SAAA,GAAA,MAAA,KAGA,MAAA,GAGA,oBAAA,KAAA,EAAA,MAAA,KAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAcA,OAZA,IAAA,EAAA,QAAA,OACA,EAAA,EAAA,QAAA,KAAA,KAKA,OAFA,EAAA,EAAA,KAEA,MAAA,IACA,MAAA,IAAA,GAAA,GAEA,GADA,EAAA,EAAA,MAAA,IACA,IAGA,MAAA,EAAA,EAEA,MAAA,EACA,MAAA,EAAA,GAAA,EAAA,SAAA,EAAA,MAAA,GAAA,GACA,MAAA,EAAA,GAAA,EAAA,SAAA,EAAA,IACA,EAAA,SAAA,EAAA,IAGA,IAAA,EAAA,QAAA,MACA,EAAA,MAAA,KAAA,QAAA,SAAA,GACA,EAAA,QAAA,SAAA,EAAA,OAGA,EAAA,EACA,EAAA,EAEA,EAAA,QAAA,SAAA,GACA,GAAA,EAAA,EACA,GAAA,KAGA,EAAA,GAIA,EAAA,SAAA,EAAA,IAGA,SAAA,EAAA,GACA,MAAA,oBAAA,OAAA,UAAA,SAAA,KAAA,IACA,EAAA,GAAA,IAAA,EAAA,eAAA,GAGA,OAAA,QAAA,IAAA,EAAA,wBAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA,CACA,OAAA,SAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,SAAA,GAAA,MAAA,EAAA,SAAA,GAAA,MAAA,IACA,MAAA,SAAA,GAAA,OAAA,GAAA,EAAA,IAAA,EAAA,SAAA,GAAA,KAAA,EAAA,SAAA,GAAA,MAAA,IACA,QAAA,SAAA,GAAA,OAAA,EAAA,SAAA,KAEA,YAAA,SAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,SAAA,IAAA,cAAA,MAAA,EAAA,SAAA,IAAA,cAAA,MAAA,KAEA,aAAA,UACA,aAAA,CACA,OAAA,CAAA,EAAA,OACA,MAAA,CAAA,EAAA,OACA,QAAA,CAAA,GAAA,OACA,YAAA,CAAA,GAAA;;AC1KA,aAEA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,WAEA,EAAA,IAAA,OAEA,2LAWA,SAAA,EAAA,GACA,OAAA,OAAA,MAEA,EAAA,KAAA,IAGA,MAAA,EAAA,EAAA,OAAA,IAOA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAUA,OAPA,EAAA,OADA,EAAA,EAAA,QAAA,KAAA,IAAA,eACA,IAAA,EAAA,EACA,EAAA,GAEA,KAAA,QAAA,EAAA,KAAA,IACA,EAAA,EAAA,MAAA,IAGA,SAAA,EACA,IAAA,EAAA,OAAA,kBAAA,OAAA,kBAEA,SAAA,EACA,IAEA,EAAA,QAAA,MAAA,GACA,EAAA,MAAA,KAAA,QAAA,SAAA,GACA,EAAA,QAAA,WAAA,EAAA,OAGA,EAAA,EACA,EAAA,EAEA,EAAA,QAAA,SAAA,GACA,GAAA,EAAA,EACA,GAAA,KAGA,EAAA,GAGA,EAAA,WAAA,EAAA,IAIA,IAAA,EAAA,gBAEA,SAAA,EAAA,EAAA,GACA,IAAA,EAEA,GAAA,MAAA,GACA,OAAA,GACA,IAAA,YAAA,MAAA,OACA,IAAA,YAAA,MAAA,OACA,IAAA,YAAA,MAAA,YAEA,GAAA,OAAA,oBAAA,EACA,OAAA,GACA,IAAA,YAAA,MAAA,OACA,IAAA,YAAA,MAAA,OACA,IAAA,YAAA,MAAA,YAEA,GAAA,OAAA,oBAAA,EACA,OAAA,GACA,IAAA,YAAA,MAAA,QACA,IAAA,YAAA,MAAA,QACA,IAAA,YAAA,MAAA,aAEA,GAAA,EAAA,eAAA,GACA,MAAA,OAQA,OALA,EAAA,EAAA,SAAA,IAKA,EAAA,KAAA,GAAA,EAAA,QAAA,IAAA,MAAA,EAGA,SAAA,EAAA,GACA,MAAA,oBAAA,OAAA,UAAA,SAAA,KAAA,KACA,EAAA,GAAA,GAAA,EAAA,eAAA,IAGA,OAAA,QAAA,IAAA,EAAA,0BAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA,EACA,aAAA;;AC1GA,aAGA,IAAA,EAAA,QAAA,aAGA,OAAA,QAAA,IAAA,EAAA,CACA,QAAA,CACA,QAAA,eAEA,SAAA,CACA,QAAA,gBACA,QAAA,gBACA,QAAA,eACA,QAAA;;ACfA,aAGA,IAAA,EAAA,QAAA,aAGA,OAAA,QAAA,IAAA,EAAA,CACA,QAAA,CACA,QAAA;;ACfA,aAEA,IAAA,EAAA,QAAA,WAEA,EAAA,IAAA,OACA,sDAIA,EAAA,IAAA,OACA,oLAWA,SAAA,EAAA,GACA,OAAA,OAAA,IACA,OAAA,EAAA,KAAA,IACA,OAAA,EAAA,KAAA,IAIA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EADA,EAAA,EACA,EAAA,KAKA,GAFA,QADA,EAAA,EAAA,KAAA,MACA,EAAA,EAAA,KAAA,IAEA,OAAA,EAAA,MAAA,IAAA,MAAA,sBAQA,GAJA,GAAA,EAAA,GACA,GAAA,EAAA,GAAA,EACA,GAAA,EAAA,IAEA,EAAA,GACA,OAAA,IAAA,KAAA,KAAA,IAAA,EAAA,EAAA,IASA,GAJA,GAAA,EAAA,GACA,GAAA,EAAA,GACA,GAAA,EAAA,GAEA,EAAA,GAAA,CAEA,IADA,EAAA,EAAA,GAAA,MAAA,EAAA,GACA,EAAA,OAAA,GACA,GAAA,IAEA,GAAA,EAgBA,OAXA,EAAA,KAGA,EAAA,KAAA,IAFA,EAAA,OACA,EAAA,KAAA,IAEA,MAAA,EAAA,KAAA,GAAA,IAGA,EAAA,IAAA,KAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,GAAA,EAAA,QAAA,EAAA,UAAA,GAEA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,cAGA,OAAA,QAAA,IAAA,EAAA,8BAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,WAAA,KACA,UAAA;;ACtFA,aAEA,IAAA,EAAA,QAAA,WAEA,SAAA,EAAA,GACA,MAAA,OAAA,GAAA,OAAA,EAGA,OAAA,QAAA,IAAA,EAAA,0BAAA,CACA,KAAA,SACA,QAAA;;ACVA,aAIA,IAAA,EAEA,IAEA,IAAA,EAAA,QACA,EAAA,EAAA,UAAA,OACA,MAAA,IAEA,IAAA,EAAA,QAAA,WAIA,EAAA,wEAGA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,IAIA,MAHA,EAAA,EAAA,QAAA,EAAA,OAAA,KAGA,IAAA,CAGA,GAAA,EAAA,EAAA,OAAA,EAEA,GAAA,EAIA,OAAA,EAAA,GAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EAAA,QAAA,WAAA,IACA,EAAA,EAAA,OACA,EAAA,EACA,EAAA,EACA,EAAA,GAIA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,GAAA,IACA,EAAA,KAAA,GAAA,GAAA,KACA,EAAA,KAAA,GAAA,EAAA,KACA,EAAA,KAAA,IAAA,IAGA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,OAAA,IAmBA,OAZA,KAFA,EAAA,EAAA,EAAA,IAGA,EAAA,KAAA,GAAA,GAAA,KACA,EAAA,KAAA,GAAA,EAAA,KACA,EAAA,KAAA,IAAA,IACA,KAAA,GACA,EAAA,KAAA,GAAA,GAAA,KACA,EAAA,KAAA,GAAA,EAAA,MACA,KAAA,GACA,EAAA,KAAA,GAAA,EAAA,KAIA,EAEA,EAAA,KAAA,EAAA,KAAA,GAAA,IAAA,EAAA,GAGA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,EAIA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,IAGA,GAAA,GAAA,GAAA,EAAA,GAwBA,OAjBA,KAFA,EAAA,EAAA,IAGA,GAAA,EAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,IACA,IAAA,GACA,GAAA,EAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAAA,KACA,IAAA,IACA,GAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAAA,IACA,GAAA,EAAA,KAGA,EAGA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,SAAA,GAGA,OAAA,QAAA,IAAA,EAAA,2BAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA;;ACxIA,aAEA,IAAA,EAAA,QAAA,WAEA,EAAA,OAAA,UAAA,eACA,EAAA,OAAA,UAAA,SAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,CAIA,GAHA,EAAA,EAAA,GACA,GAAA,EAEA,oBAAA,EAAA,KAAA,GAAA,OAAA,EAEA,IAAA,KAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,GAAA,EACA,OAAA,EADA,GAAA,EAKA,IAAA,EAAA,OAAA,EAEA,IAAA,IAAA,EAAA,QAAA,GACA,OAAA,EADA,EAAA,KAAA,GAIA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,OAAA,EAAA,EAAA,GAGA,OAAA,QAAA,IAAA,EAAA,yBAAA,CACA,KAAA,WACA,QAAA,EACA,UAAA;;AC1CA,aAEA,IAAA,EAAA,QAAA,WAEA,EAAA,OAAA,UAAA,SAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAIA,IAFA,EAAA,IAAA,MAAA,EAAA,QAEA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,CAGA,GAFA,EAAA,EAAA,GAEA,oBAAA,EAAA,KAAA,GAAA,OAAA,EAIA,GAAA,KAFA,EAAA,OAAA,KAAA,IAEA,OAAA,OAAA,EAEA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAGA,OAAA,EAGA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,MAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAIA,IAFA,EAAA,IAAA,MAAA,EAAA,QAEA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAEA,EAAA,OAAA,KAAA,GAEA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAGA,OAAA,EAGA,OAAA,QAAA,IAAA,EAAA,0BAAA,CACA,KAAA,WACA,QAAA,EACA,UAAA;;ACnDA,aAEA,IAAA,EAAA,QAAA,WAEA,EAAA,OAAA,UAAA,eAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,EAEA,IAAA,KAAA,EACA,GAAA,EAAA,KAAA,EAAA,IACA,OAAA,EAAA,GAAA,OAAA,EAIA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,OAAA,EAAA,EAAA,GAGA,OAAA,QAAA,IAAA,EAAA,wBAAA,CACA,KAAA,UACA,QAAA,EACA,UAAA;;ACpBA,aAGA,IAAA,EAAA,QAAA,aAGA,OAAA,QAAA,IAAA,EAAA,CACA,QAAA,CACA,QAAA,WAEA,SAAA,CACA,QAAA,qBACA,QAAA,kBAEA,SAAA,CACA,QAAA,kBACA,QAAA,gBACA,QAAA,iBACA,QAAA;;ACzBA,aAEA,IAAA,EAAA,QAAA,cAEA,SAAA,IACA,OAAA,EAGA,SAAA,KAKA,SAAA,IACA,MAAA,GAGA,SAAA,EAAA,GACA,YAAA,IAAA,EAGA,OAAA,QAAA,IAAA,EAAA,iCAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA;;AC1BA,aAEA,IAAA,EAAA,QAAA,cAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EACA,GAAA,IAAA,EAAA,OAAA,OAAA,EAEA,IAAA,EAAA,EACA,EAAA,cAAA,KAAA,GACA,EAAA,GAIA,GAAA,MAAA,EAAA,GAAA,CAGA,GAFA,IAAA,EAAA,EAAA,IAEA,EAAA,OAAA,EAAA,OAAA,EAEA,GAAA,MAAA,EAAA,EAAA,OAAA,EAAA,OAAA,GAAA,OAAA,EAGA,OAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,cAAA,KAAA,GACA,EAAA,GAQA,MALA,MAAA,EAAA,KACA,IAAA,EAAA,EAAA,IACA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,OAAA,IAGA,IAAA,OAAA,EAAA,GAGA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,OAAA,IAMA,OAJA,EAAA,SAAA,GAAA,KACA,EAAA,YAAA,GAAA,KACA,EAAA,aAAA,GAAA,KAEA,EAGA,SAAA,EAAA,GACA,MAAA,oBAAA,OAAA,UAAA,SAAA,KAAA,GAGA,OAAA,QAAA,IAAA,EAAA,8BAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA;;AC1DA,aAEA,IAAA,EASA,IAEA,IAAA,EAAA,QACA,EAAA,EAAA,WACA,MAAA,GAEA,oBAAA,SAAA,EAAA,OAAA,SAGA,IAAA,EAAA,QAAA,cAEA,SAAA,EAAA,GACA,GAAA,OAAA,EAAA,OAAA,EAEA,IACA,IAAA,EAAA,IAAA,EAAA,IACA,EAAA,EAAA,MAAA,EAAA,CAAA,OAAA,IAEA,MAAA,YAAA,EAAA,MACA,IAAA,EAAA,KAAA,QACA,wBAAA,EAAA,KAAA,GAAA,OACA,4BAAA,EAAA,KAAA,GAAA,WAAA,MACA,uBAAA,EAAA,KAAA,GAAA,WAAA,MAKA,MAAA,GACA,OAAA,GAIA,SAAA,EAAA,GAGA,IAGA,EAHA,EAAA,IAAA,EAAA,IACA,EAAA,EAAA,MAAA,EAAA,CAAA,OAAA,IACA,EAAA,GAGA,GAAA,YAAA,EAAA,MACA,IAAA,EAAA,KAAA,QACA,wBAAA,EAAA,KAAA,GAAA,MACA,4BAAA,EAAA,KAAA,GAAA,WAAA,MACA,uBAAA,EAAA,KAAA,GAAA,WAAA,KACA,MAAA,IAAA,MAAA,8BAWA,OARA,EAAA,KAAA,GAAA,WAAA,OAAA,QAAA,SAAA,GACA,EAAA,KAAA,EAAA,QAGA,EAAA,EAAA,KAAA,GAAA,WAAA,KAAA,MAIA,mBAAA,EAAA,KAAA,GAAA,WAAA,KAAA,KAEA,IAAA,SAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAKA,IAAA,SAAA,EAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAGA,SAAA,EAAA,GACA,OAAA,EAAA,WAGA,SAAA,EAAA,GACA,MAAA,sBAAA,OAAA,UAAA,SAAA,KAAA,GAGA,OAAA,QAAA,IAAA,EAAA,gCAAA,CACA,KAAA,SACA,QAAA,EACA,UAAA,EACA,UAAA,EACA,UAAA;;ACjFA,aAGA,IAAA,EAAA,QAAA,aAGA,OAAA,QAAA,EAAA,QAAA,IAAA,EAAA,CACA,QAAA,CACA,QAAA,mBAEA,SAAA,CACA,QAAA,wBACA,QAAA,qBACA,QAAA;;ACtBA,aAIA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,eACA,EAAA,QAAA,UACA,EAAA,QAAA,yBACA,EAAA,QAAA,yBAGA,EAAA,OAAA,UAAA,eAGA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAGA,EAAA,EACA,EAAA,EACA,EAAA,EAGA,EAAA,sIACA,EAAA,qBACA,EAAA,cACA,EAAA,yBACA,EAAA,mFAGA,SAAA,EAAA,GAAA,OAAA,OAAA,UAAA,SAAA,KAAA,GAEA,SAAA,EAAA,GACA,OAAA,KAAA,GAAA,KAAA,EAGA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,KAAA,EAGA,SAAA,EAAA,GACA,OAAA,IAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,EAGA,SAAA,EAAA,GACA,OAAA,KAAA,GACA,KAAA,GACA,KAAA,GACA,MAAA,GACA,MAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAEA,OAAA,IAAA,GAAA,GAAA,GACA,EAAA,GAMA,KAFA,EAAA,GAAA,IAEA,GAAA,IACA,EAAA,GAAA,IAGA,EAGA,SAAA,EAAA,GACA,OAAA,MAAA,EAAA,EACA,MAAA,EAAA,EACA,KAAA,EAAA,EACA,EAGA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,GACA,EAAA,IAGA,EAGA,SAAA,EAAA,GAEA,OAAA,KAAA,EAAA,KACA,KAAA,EAAA,IACA,KAAA,EAAA,KACA,MAAA,EAAA,KACA,IAAA,EAAA,KACA,MAAA,EAAA,KACA,MAAA,EAAA,KACA,MAAA,EAAA,KACA,MAAA,EAAA,KACA,MAAA,EAAA,IACA,KAAA,EAAA,IACA,KAAA,EAAA,IACA,KAAA,EAAA,IACA,KAAA,EAAA,KACA,KAAA,EAAA,IACA,KAAA,EAAA,IACA,KAAA,EAAA,SACA,KAAA,EAAA,SAAA,GAGA,SAAA,EAAA,GACA,OAAA,GAAA,MACA,OAAA,aAAA,GAIA,OAAA,aACA,OAAA,EAAA,OAAA,IACA,OAAA,EAAA,MAAA,OAMA,IAFA,IAAA,EAAA,IAAA,MAAA,KACA,EAAA,IAAA,MAAA,KACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,GAAA,EAAA,GAAA,EAAA,EACA,EAAA,GAAA,EAAA,GAIA,SAAA,EAAA,EAAA,GACA,KAAA,MAAA,EAEA,KAAA,SAAA,EAAA,UAAA,KACA,KAAA,OAAA,EAAA,QAAA,EACA,KAAA,UAAA,EAAA,WAAA,KACA,KAAA,OAAA,EAAA,SAAA,EACA,KAAA,KAAA,EAAA,OAAA,EACA,KAAA,SAAA,EAAA,UAAA,KAEA,KAAA,cAAA,KAAA,OAAA,iBACA,KAAA,QAAA,KAAA,OAAA,gBAEA,KAAA,OAAA,EAAA,OACA,KAAA,SAAA,EACA,KAAA,KAAA,EACA,KAAA,UAAA,EACA,KAAA,WAAA,EAEA,KAAA,UAAA,GAeA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EACA,EACA,IAAA,EAAA,EAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,KAAA,EAAA,SAAA,EAAA,YAGA,SAAA,EAAA,EAAA,GACA,MAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GACA,EAAA,WACA,EAAA,UAAA,KAAA,KAAA,EAAA,EAAA,IAKA,IAAA,EAAA,CAEA,KAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAEA,OAAA,EAAA,SACA,EAAA,EAAA,kCAGA,IAAA,EAAA,QACA,EAAA,EAAA,+CAKA,QAFA,EAAA,uBAAA,KAAA,EAAA,MAGA,EAAA,EAAA,6CAGA,EAAA,SAAA,EAAA,GAAA,IACA,EAAA,SAAA,EAAA,GAAA,IAEA,IAAA,GACA,EAAA,EAAA,6CAGA,EAAA,QAAA,EAAA,GACA,EAAA,gBAAA,EAAA,EAEA,IAAA,GAAA,IAAA,GACA,EAAA,EAAA,6CAIA,IAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAEA,IAAA,EAAA,QACA,EAAA,EAAA,+CAGA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,KAAA,IACA,EAAA,EAAA,+DAGA,EAAA,KAAA,EAAA,OAAA,IACA,EAAA,EAAA,8CAAA,EAAA,gBAGA,EAAA,KAAA,IACA,EAAA,EAAA,gEAGA,EAAA,OAAA,GAAA,IAKA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAEA,GAAA,EAAA,EAAA,CAGA,GAFA,EAAA,EAAA,MAAA,MAAA,EAAA,GAEA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAEA,KADA,EAAA,EAAA,WAAA,KAEA,IAAA,GAAA,GAAA,SACA,EAAA,EAAA,sCAGA,EAAA,KAAA,IACA,EAAA,EAAA,gDAGA,EAAA,QAAA,GAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAQA,IANA,EAAA,SAAA,IACA,EAAA,EAAA,qEAKA,EAAA,EAAA,GAFA,EAAA,OAAA,KAAA,IAEA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,KACA,EAAA,GAAA,EAAA,GACA,EAAA,IAAA,GAKA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAKA,GAAA,MAAA,QAAA,GAGA,IAAA,EAAA,EAAA,GAFA,EAAA,MAAA,UAAA,MAAA,KAAA,IAEA,OAAA,EAAA,EAAA,GAAA,EACA,MAAA,QAAA,EAAA,KACA,EAAA,EAAA,+CAGA,iBAAA,GAAA,oBAAA,EAAA,EAAA,MACA,EAAA,GAAA,mBAmBA,GAXA,iBAAA,GAAA,oBAAA,EAAA,KACA,EAAA,mBAIA,EAAA,OAAA,GAEA,OAAA,IACA,EAAA,IAGA,4BAAA,EACA,GAAA,MAAA,QAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,QAGA,EAAA,EAAA,EAAA,EAAA,QAGA,EAAA,MACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,GAAA,EAAA,KACA,EAAA,SAAA,GAAA,EAAA,SACA,EAAA,EAAA,2BAEA,EAAA,GAAA,SACA,EAAA,GAGA,OAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAIA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAGA,EAAA,WACA,KAAA,GACA,EAAA,WACA,KAAA,EAAA,MAAA,WAAA,EAAA,WACA,EAAA,YAGA,EAAA,EAAA,4BAGA,EAAA,MAAA,EACA,EAAA,UAAA,EAAA,SAGA,SAAA,EAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EAAA,EACA,EAAA,EAAA,MAAA,WAAA,EAAA,UAEA,IAAA,GAAA,CACA,KAAA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAGA,GAAA,GAAA,KAAA,EACA,GACA,EAAA,EAAA,MAAA,aAAA,EAAA,gBACA,KAAA,GAAA,KAAA,GAAA,IAAA,GAGA,IAAA,EAAA,GAYA,MALA,IANA,EAAA,GAEA,EAAA,EAAA,MAAA,WAAA,EAAA,UACA,IACA,EAAA,WAAA,EAEA,KAAA,GACA,EAAA,aACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAWA,OAJA,IAAA,GAAA,IAAA,GAAA,EAAA,WAAA,GACA,EAAA,EAAA,yBAGA,EAGA,SAAA,EAAA,GACA,IACA,EADA,EAAA,EAAA,SAOA,QAAA,MAJA,EAAA,EAAA,MAAA,WAAA,KAIA,KAAA,GACA,IAAA,EAAA,MAAA,WAAA,EAAA,IACA,IAAA,EAAA,MAAA,WAAA,EAAA,KAEA,GAAA,EAIA,KAFA,EAAA,EAAA,MAAA,WAAA,MAEA,EAAA,KAQA,SAAA,EAAA,EAAA,GACA,IAAA,EACA,EAAA,QAAA,IACA,EAAA,IACA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,IAKA,SAAA,EAAA,EAAA,EAAA,GACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EAGA,EAFA,EAAA,EAAA,KACA,EAAA,EAAA,OAKA,GAAA,EAFA,EAAA,EAAA,MAAA,WAAA,EAAA,YAGA,EAAA,IACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,MAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,EACA,OAAA,EAGA,IAAA,KAAA,GAAA,KAAA,KAGA,EAFA,EAAA,EAAA,MAAA,WAAA,EAAA,SAAA,KAGA,GAAA,EAAA,IACA,OAAA,EASA,IALA,EAAA,KAAA,SACA,EAAA,OAAA,GACA,EAAA,EAAA,EAAA,SACA,GAAA,EAEA,IAAA,GAAA,CACA,GAAA,KAAA,GAGA,GAAA,EAFA,EAAA,EAAA,MAAA,WAAA,EAAA,SAAA,KAGA,GAAA,EAAA,GACA,WAGA,GAAA,KAAA,GAGA,GAAA,EAFA,EAAA,MAAA,WAAA,EAAA,SAAA,IAGA,UAGA,CAAA,GAAA,EAAA,WAAA,EAAA,WAAA,EAAA,IACA,GAAA,EAAA,GACA,MAEA,GAAA,EAAA,GAAA,CAMA,GALA,EAAA,EAAA,KACA,EAAA,EAAA,UACA,EAAA,EAAA,WACA,EAAA,GAAA,GAAA,GAEA,EAAA,YAAA,EAAA,CACA,GAAA,EACA,EAAA,EAAA,MAAA,WAAA,EAAA,UACA,SAEA,EAAA,SAAA,EACA,EAAA,KAAA,EACA,EAAA,UAAA,EACA,EAAA,WAAA,EACA,OAIA,IACA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,EAAA,SACA,GAAA,GAGA,EAAA,KACA,EAAA,EAAA,SAAA,GAGA,EAAA,EAAA,MAAA,aAAA,EAAA,UAKA,OAFA,EAAA,EAAA,EAAA,GAAA,KAEA,EAAA,SAIA,EAAA,KAAA,EACA,EAAA,OAAA,GACA,GAGA,SAAA,EAAA,EAAA,GACA,IAAA,EACA,EAAA,EAIA,GAAA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAGA,OAAA,EAQA,IALA,EAAA,KAAA,SACA,EAAA,OAAA,GACA,EAAA,WACA,EAAA,EAAA,EAAA,SAEA,KAAA,EAAA,EAAA,MAAA,WAAA,EAAA,YACA,GAAA,KAAA,EAAA,CAIA,GAHA,EAAA,EAAA,EAAA,EAAA,UAAA,GAGA,MAFA,EAAA,EAAA,MAAA,aAAA,EAAA,WAOA,OAAA,EAJA,EAAA,EAAA,SACA,EAAA,WACA,EAAA,EAAA,cAKA,EAAA,IACA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,UAEA,EAAA,WAAA,EAAA,WAAA,EAAA,GACA,EAAA,EAAA,iEAGA,EAAA,WACA,EAAA,EAAA,UAIA,EAAA,EAAA,8DAGA,SAAA,EAAA,EAAA,GACA,IAAA,EACA,EACA,EACA,EACA,EACA,EAIA,GAAA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAGA,OAAA,EAQA,IALA,EAAA,KAAA,SACA,EAAA,OAAA,GACA,EAAA,WACA,EAAA,EAAA,EAAA,SAEA,KAAA,EAAA,EAAA,MAAA,WAAA,EAAA,YAAA,CACA,GAAA,KAAA,EAGA,OAFA,EAAA,EAAA,EAAA,EAAA,UAAA,GACA,EAAA,YACA,EAEA,GAAA,KAAA,EAAA,CAIA,GAHA,EAAA,EAAA,EAAA,EAAA,UAAA,GAGA,EAFA,EAAA,EAAA,MAAA,aAAA,EAAA,WAGA,EAAA,GAAA,EAAA,QAGA,GAAA,EAAA,KAAA,EAAA,GACA,EAAA,QAAA,EAAA,GACA,EAAA,gBAEA,IAAA,EAAA,EAAA,IAAA,EAAA,CAIA,IAHA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,KAGA,EAAA,EAFA,EAAA,EAAA,MAAA,aAAA,EAAA,aAEA,EACA,GAAA,GAAA,GAAA,EAGA,EAAA,EAAA,kCAIA,EAAA,QAAA,EAAA,GAEA,EAAA,gBAGA,EAAA,EAAA,2BAGA,EAAA,EAAA,EAAA,cAEA,EAAA,IACA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,UAEA,EAAA,WAAA,EAAA,WAAA,EAAA,GACA,EAAA,EAAA,iEAGA,EAAA,WACA,EAAA,EAAA,UAIA,EAAA,EAAA,8DAGA,SAAA,EAAA,EAAA,GACA,IACA,EAEA,EAGA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EAdA,GAAA,EAEA,EAAA,EAAA,IAEA,EAAA,EAAA,OAMA,EAAA,GAQA,GAAA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAGA,EAAA,GACA,GAAA,EACA,EAAA,OACA,CAAA,GAAA,MAAA,EAKA,OAAA,EAJA,EAAA,IACA,GAAA,EACA,EAAA,GAWA,IANA,OAAA,EAAA,SACA,EAAA,UAAA,EAAA,QAAA,GAGA,EAAA,EAAA,MAAA,aAAA,EAAA,UAEA,IAAA,GAAA,CAKA,GAJA,EAAA,GAAA,EAAA,IAEA,EAAA,EAAA,MAAA,WAAA,EAAA,aAEA,EAMA,OALA,EAAA,WACA,EAAA,IAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,EAAA,UAAA,WACA,EAAA,OAAA,GACA,EACA,GACA,EAAA,EAAA,gDAGA,EAAA,KACA,EAAA,GAAA,EAEA,KAAA,GAGA,EAFA,EAAA,MAAA,WAAA,EAAA,SAAA,MAGA,EAAA,GAAA,EACA,EAAA,WACA,EAAA,GAAA,EAAA,IAIA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,GAAA,GAAA,GACA,EAAA,EAAA,IACA,EAAA,EAAA,OACA,EAAA,GAAA,EAAA,GAEA,EAAA,EAAA,MAAA,WAAA,EAAA,WAEA,GAAA,EAAA,OAAA,GAAA,KAAA,IACA,GAAA,EACA,EAAA,EAAA,MAAA,aAAA,EAAA,UACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAAA,GAAA,GACA,EAAA,EAAA,QAGA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,EACA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAEA,EAAA,KAAA,GAGA,EAAA,GAAA,EAAA,GAIA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,YAGA,GAAA,EACA,EAAA,EAAA,MAAA,aAAA,EAAA,WAEA,GAAA,EAIA,EAAA,EAAA,yDAGA,SAAA,EAAA,EAAA,GACA,IAAA,EACA,EAOA,EACA,EAPA,EAAA,EACA,GAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EAMA,GAAA,OAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAGA,GAAA,MACA,CAAA,GAAA,KAAA,EAGA,OAAA,EAFA,GAAA,EAQA,IAHA,EAAA,KAAA,SACA,EAAA,OAAA,GAEA,IAAA,GAGA,GAAA,MAFA,EAAA,EAAA,MAAA,aAAA,EAAA,YAEA,KAAA,EACA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,EAEA,EAAA,EAAA,4CAGA,CAAA,MAAA,EAAA,EAAA,KAAA,GAWA,MAVA,IAAA,EACA,EAAA,EAAA,gFACA,EAIA,EAAA,EAAA,8CAHA,EAAA,EAAA,EAAA,EACA,GAAA,GAUA,GAAA,EAAA,GAAA,CACA,GAAA,EAAA,EAAA,MAAA,aAAA,EAAA,gBACA,EAAA,IAEA,GAAA,KAAA,EACA,GAAA,EAAA,EAAA,MAAA,aAAA,EAAA,iBACA,EAAA,IAAA,IAAA,GAIA,KAAA,IAAA,GAAA,CAMA,IALA,EAAA,GACA,EAAA,WAAA,EAEA,EAAA,EAAA,MAAA,WAAA,EAAA,YAEA,GAAA,EAAA,WAAA,IACA,KAAA,GACA,EAAA,aACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAOA,IAJA,GAAA,EAAA,WAAA,IACA,EAAA,EAAA,YAGA,EAAA,GACA,QADA,CAMA,GAAA,EAAA,WAAA,EAAA,CAGA,IAAA,EACA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,GACA,IAAA,GACA,IACA,EAAA,QAAA,MAKA,MAuCA,IAnCA,EAGA,EAAA,IACA,GAAA,EAEA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,IAGA,GACA,GAAA,EACA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,IAGA,IAAA,EACA,IACA,EAAA,QAAA,KAKA,EAAA,QAAA,EAAA,OAAA,KAAA,GAMA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,GAGA,GAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EAAA,UAEA,EAAA,IAAA,IAAA,GACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAGA,EAAA,EAAA,EAAA,EAAA,UAAA,IAGA,OAAA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAMA,EALA,EAAA,EAAA,IACA,EAAA,EAAA,OACA,EAAA,GAEA,GAAA,EASA,IANA,OAAA,EAAA,SACA,EAAA,UAAA,EAAA,QAAA,GAGA,EAAA,EAAA,MAAA,WAAA,EAAA,UAEA,IAAA,GAEA,KAAA,GAMA,EAFA,EAAA,MAAA,WAAA,EAAA,SAAA,KASA,GAHA,GAAA,EACA,EAAA,WAEA,EAAA,GAAA,GAAA,IACA,EAAA,YAAA,EACA,EAAA,KAAA,MACA,EAAA,EAAA,MAAA,WAAA,EAAA,eAYA,GAPA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,GAAA,GAAA,GACA,EAAA,KAAA,EAAA,QACA,EAAA,GAAA,GAAA,GAEA,EAAA,EAAA,MAAA,WAAA,EAAA,WAEA,EAAA,OAAA,GAAA,EAAA,WAAA,IAAA,IAAA,EACA,EAAA,EAAA,4CACA,GAAA,EAAA,WAAA,EACA,MAIA,QAAA,IACA,EAAA,IAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,WACA,EAAA,OAAA,GACA,GAKA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EACA,EACA,EACA,EAUA,EATA,EAAA,EAAA,IACA,EAAA,EAAA,OACA,EAAA,GACA,EAAA,GACA,EAAA,KACA,EAAA,KACA,EAAA,KACA,GAAA,EACA,GAAA,EASA,IANA,OAAA,EAAA,SACA,EAAA,UAAA,EAAA,QAAA,GAGA,EAAA,EAAA,MAAA,WAAA,EAAA,UAEA,IAAA,GAAA,CASA,GARA,EAAA,EAAA,MAAA,WAAA,EAAA,SAAA,GACA,EAAA,EAAA,KACA,EAAA,EAAA,SAMA,KAAA,GAAA,KAAA,IAAA,EAAA,GA2BA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GA8CA,MA5CA,GAAA,EAAA,OAAA,EAAA,CAGA,IAFA,EAAA,EAAA,MAAA,WAAA,EAAA,UAEA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAGA,GAAA,KAAA,EAGA,EAFA,EAAA,EAAA,MAAA,aAAA,EAAA,YAGA,EAAA,EAAA,2FAGA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MACA,EAAA,EAAA,EAAA,MAGA,GAAA,EACA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,IACA,EAAA,EAAA,WAEA,CAAA,IAAA,EAMA,OAFA,EAAA,IAAA,EACA,EAAA,OAAA,GACA,EALA,EAAA,EAAA,iEAQA,CAAA,IAAA,EAMA,OAFA,EAAA,IAAA,EACA,EAAA,OAAA,GACA,EALA,EAAA,EAAA,wFA9DA,KAAA,GACA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MACA,EAAA,EAAA,EAAA,MAGA,GAAA,EACA,GAAA,EACA,GAAA,GAEA,GAEA,GAAA,EACA,GAAA,GAGA,EAAA,EAAA,qGAGA,EAAA,UAAA,EACA,EAAA,EA2EA,IAlBA,EAAA,OAAA,GAAA,EAAA,WAAA,KACA,EAAA,EAAA,EAAA,GAAA,EAAA,KACA,EACA,EAAA,EAAA,OAEA,EAAA,EAAA,QAIA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAGA,EAAA,GAAA,GAAA,GACA,EAAA,EAAA,MAAA,WAAA,EAAA,WAGA,EAAA,WAAA,GAAA,IAAA,EACA,EAAA,EAAA,2CACA,GAAA,EAAA,WAAA,EACA,MAqBA,OAZA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAIA,IACA,EAAA,IAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,UACA,EAAA,OAAA,GAGA,EAGA,SAAA,EAAA,GACA,IAAA,EAGA,EACA,EACA,EAJA,GAAA,EACA,GAAA,EAOA,GAAA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAEA,OAAA,EAuBA,GArBA,OAAA,EAAA,KACA,EAAA,EAAA,iCAKA,MAFA,EAAA,EAAA,MAAA,aAAA,EAAA,YAGA,GAAA,EACA,EAAA,EAAA,MAAA,aAAA,EAAA,WAEA,KAAA,GACA,GAAA,EACA,EAAA,KACA,EAAA,EAAA,MAAA,aAAA,EAAA,WAGA,EAAA,IAGA,EAAA,EAAA,SAEA,EAAA,CACA,GAAA,EAAA,EAAA,MAAA,aAAA,EAAA,gBACA,IAAA,GAAA,KAAA,GAEA,EAAA,SAAA,EAAA,QACA,EAAA,EAAA,MAAA,MAAA,EAAA,EAAA,UACA,EAAA,EAAA,MAAA,aAAA,EAAA,WAEA,EAAA,EAAA,0DAEA,CACA,KAAA,IAAA,IAAA,EAAA,IAEA,KAAA,IACA,EAUA,EAAA,EAAA,gDATA,EAAA,EAAA,MAAA,MAAA,EAAA,EAAA,EAAA,SAAA,GAEA,EAAA,KAAA,IACA,EAAA,EAAA,mDAGA,GAAA,EACA,EAAA,EAAA,SAAA,IAMA,EAAA,EAAA,MAAA,aAAA,EAAA,UAGA,EAAA,EAAA,MAAA,MAAA,EAAA,EAAA,UAEA,EAAA,KAAA,IACA,EAAA,EAAA,uDAwBA,OApBA,IAAA,EAAA,KAAA,IACA,EAAA,EAAA,4CAAA,GAGA,EACA,EAAA,IAAA,EAEA,EAAA,KAAA,EAAA,OAAA,GACA,EAAA,IAAA,EAAA,OAAA,GAAA,EAEA,MAAA,EACA,EAAA,IAAA,IAAA,EAEA,OAAA,EACA,EAAA,IAAA,qBAAA,EAGA,EAAA,EAAA,0BAAA,EAAA,MAGA,EAGA,SAAA,EAAA,GACA,IAAA,EACA,EAIA,GAAA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAEA,OAAA,EASA,IAPA,OAAA,EAAA,QACA,EAAA,EAAA,qCAGA,EAAA,EAAA,MAAA,aAAA,EAAA,UACA,EAAA,EAAA,SAEA,IAAA,IAAA,EAAA,KAAA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAQA,OALA,EAAA,WAAA,GACA,EAAA,EAAA,8DAGA,EAAA,OAAA,EAAA,MAAA,MAAA,EAAA,EAAA,WACA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EACA,EAIA,GAAA,MAFA,EAAA,EAAA,MAAA,WAAA,EAAA,WAEA,OAAA,EAKA,IAHA,EAAA,EAAA,MAAA,aAAA,EAAA,UACA,EAAA,EAAA,SAEA,IAAA,IAAA,EAAA,KAAA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAeA,OAZA,EAAA,WAAA,GACA,EAAA,EAAA,6DAGA,EAAA,EAAA,MAAA,MAAA,EAAA,EAAA,UAEA,EAAA,UAAA,eAAA,IACA,EAAA,EAAA,uBAAA,EAAA,KAGA,EAAA,OAAA,EAAA,UAAA,GACA,EAAA,GAAA,GAAA,IACA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EACA,EACA,EAIA,EACA,EACA,EACA,EACA,EAPA,EAAA,EACA,GAAA,EACA,GAAA,EAkCA,GA3BA,OAAA,EAAA,UACA,EAAA,SAAA,OAAA,GAGA,EAAA,IAAA,KACA,EAAA,OAAA,KACA,EAAA,KAAA,KACA,EAAA,OAAA,KAEA,EAAA,EAAA,EACA,IAAA,GACA,IAAA,EAEA,GACA,EAAA,GAAA,GAAA,KACA,GAAA,EAEA,EAAA,WAAA,EACA,EAAA,EACA,EAAA,aAAA,EACA,EAAA,EACA,EAAA,WAAA,IACA,GAAA,IAKA,IAAA,EACA,KAAA,EAAA,IAAA,EAAA,IACA,EAAA,GAAA,GAAA,IACA,GAAA,EACA,EAAA,EAEA,EAAA,WAAA,EACA,EAAA,EACA,EAAA,aAAA,EACA,EAAA,EACA,EAAA,WAAA,IACA,GAAA,IAGA,GAAA,EAwDA,GAnDA,IACA,EAAA,GAAA,GAGA,IAAA,GAAA,IAAA,IAEA,EADA,IAAA,GAAA,IAAA,EACA,EAEA,EAAA,EAGA,EAAA,EAAA,SAAA,EAAA,UAEA,IAAA,EACA,IACA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,KACA,EAAA,EAAA,GACA,GAAA,GAEA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,IACA,EAAA,EAAA,GACA,GAAA,EAEA,EAAA,IACA,GAAA,EAEA,OAAA,EAAA,KAAA,OAAA,EAAA,QACA,EAAA,EAAA,8CAGA,EAAA,EAAA,EAAA,IAAA,KACA,GAAA,EAEA,OAAA,EAAA,MACA,EAAA,IAAA,MAIA,OAAA,EAAA,SACA,EAAA,UAAA,EAAA,QAAA,EAAA,SAGA,IAAA,IAGA,EAAA,GAAA,EAAA,EAAA,KAIA,OAAA,EAAA,KAAA,MAAA,EAAA,IACA,GAAA,MAAA,EAAA,KACA,IAAA,EAAA,EAAA,EAAA,EAAA,cAAA,OAAA,EAAA,EAAA,GAAA,EAOA,IANA,EAAA,EAAA,cAAA,IAMA,QAAA,EAAA,QAAA,CACA,EAAA,OAAA,EAAA,UAAA,EAAA,QACA,EAAA,IAAA,EAAA,IACA,OAAA,EAAA,SACA,EAAA,UAAA,EAAA,QAAA,EAAA,QAEA,YAGA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,YAAA,EAAA,MACA,EAAA,EAAA,QAAA,EAAA,MAAA,YAAA,EAAA,KAEA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MACA,EAAA,EAAA,gCAAA,EAAA,IAAA,wBAAA,EAAA,KAAA,WAAA,EAAA,KAAA,KAGA,EAAA,QAAA,EAAA,SAGA,EAAA,OAAA,EAAA,UAAA,EAAA,QACA,OAAA,EAAA,SACA,EAAA,UAAA,EAAA,QAAA,EAAA,SAJA,EAAA,EAAA,gCAAA,EAAA,IAAA,mBAQA,EAAA,EAAA,iBAAA,EAAA,IAAA,KAOA,OAHA,OAAA,EAAA,UACA,EAAA,SAAA,QAAA,GAEA,OAAA,EAAA,KAAA,OAAA,EAAA,QAAA,EAGA,SAAA,GAAA,GACA,IACA,EACA,EACA,EAEA,EALA,EAAA,EAAA,SAIA,GAAA,EAQA,IALA,EAAA,QAAA,KACA,EAAA,gBAAA,EAAA,OACA,EAAA,OAAA,GACA,EAAA,UAAA,GAEA,KAAA,EAAA,EAAA,MAAA,WAAA,EAAA,aACA,EAAA,GAAA,GAAA,GAEA,EAAA,EAAA,MAAA,WAAA,EAAA,YAEA,EAAA,WAAA,GAAA,KAAA,KALA,CAaA,IAJA,GAAA,EACA,EAAA,EAAA,MAAA,aAAA,EAAA,UACA,EAAA,EAAA,SAEA,IAAA,IAAA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAUA,IANA,EAAA,IADA,EAAA,EAAA,MAAA,MAAA,EAAA,EAAA,WAGA,OAAA,GACA,EAAA,EAAA,gEAGA,IAAA,GAAA,CACA,KAAA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAGA,GAAA,KAAA,EAAA,CACA,GAAA,EAAA,EAAA,MAAA,aAAA,EAAA,gBACA,IAAA,IAAA,EAAA,IACA,MAGA,GAAA,EAAA,GAAA,MAIA,IAFA,EAAA,EAAA,SAEA,IAAA,IAAA,EAAA,IACA,EAAA,EAAA,MAAA,aAAA,EAAA,UAGA,EAAA,KAAA,EAAA,MAAA,MAAA,EAAA,EAAA,WAGA,IAAA,GAAA,EAAA,GAEA,EAAA,KAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,EAAA,+BAAA,EAAA,KAIA,EAAA,GAAA,GAAA,GAEA,IAAA,EAAA,YACA,KAAA,EAAA,MAAA,WAAA,EAAA,WACA,KAAA,EAAA,MAAA,WAAA,EAAA,SAAA,IACA,KAAA,EAAA,MAAA,WAAA,EAAA,SAAA,IACA,EAAA,UAAA,EACA,EAAA,GAAA,GAAA,IAEA,GACA,EAAA,EAAA,mCAGA,EAAA,EAAA,EAAA,WAAA,EAAA,GAAA,GAAA,GACA,EAAA,GAAA,GAAA,GAEA,EAAA,iBACA,EAAA,KAAA,EAAA,MAAA,MAAA,EAAA,EAAA,YACA,EAAA,EAAA,oDAGA,EAAA,UAAA,KAAA,EAAA,QAEA,EAAA,WAAA,EAAA,WAAA,EAAA,GAEA,KAAA,EAAA,MAAA,WAAA,EAAA,YACA,EAAA,UAAA,EACA,EAAA,GAAA,GAAA,IAKA,EAAA,SAAA,EAAA,OAAA,GACA,EAAA,EAAA,yDAOA,SAAA,GAAA,EAAA,GAEA,EAAA,GAAA,GAEA,KAHA,EAAA,OAAA,IAGA,SAGA,KAAA,EAAA,WAAA,EAAA,OAAA,IACA,KAAA,EAAA,WAAA,EAAA,OAAA,KACA,GAAA,MAIA,QAAA,EAAA,WAAA,KACA,EAAA,EAAA,MAAA,KAIA,IAAA,EAAA,IAAA,EAAA,EAAA,GAKA,IAFA,EAAA,OAAA,KAEA,KAAA,EAAA,MAAA,WAAA,EAAA,WACA,EAAA,YAAA,EACA,EAAA,UAAA,EAGA,KAAA,EAAA,SAAA,EAAA,OAAA,GACA,GAAA,GAGA,OAAA,EAAA,UAIA,SAAA,GAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAEA,GAAA,mBAAA,EACA,OAAA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,IAKA,SAAA,GAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,GAEA,GAAA,IAAA,EAAA,OAAA,CAGA,GAAA,IAAA,EAAA,OACA,OAAA,EAAA,GAEA,MAAA,IAAA,EAAA,6DAIA,SAAA,GAAA,EAAA,EAAA,GACA,GAAA,mBAAA,EAGA,OAAA,GAAA,EAAA,EAAA,OAAA,CAAA,OAAA,GAAA,IAFA,GAAA,EAAA,EAAA,EAAA,OAAA,CAAA,OAAA,GAAA,IAOA,SAAA,GAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,OAAA,CAAA,OAAA,GAAA,IAIA,OAAA,QAAA,QAAA,GACA,OAAA,QAAA,KAAA,GACA,OAAA,QAAA,YAAA,GACA,OAAA,QAAA,SAAA;;ACxlDA,aAIA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,eACA,EAAA,QAAA,yBACA,EAAA,QAAA,yBAEA,EAAA,OAAA,UAAA,SACA,EAAA,OAAA,UAAA,eAEA,EAAA,EACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,IACA,EAAA,IACA,EAAA,IAEA,EAAA,CAEA,EAAA,MACA,EAAA,MACA,EAAA,MACA,EAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,OACA,IAAA,MACA,IAAA,MACA,KAAA,MACA,KAAA,OAEA,EAAA,CACA,IAAA,IAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KACA,IAAA,IAAA,KAAA,KAAA,KAAA,MAAA,MAAA,OAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,GAAA,OAAA,EAAA,MAAA,GAKA,IAHA,EAAA,GAGA,EAAA,EAAA,GAFA,EAAA,OAAA,KAAA,IAEA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GACA,EAAA,OAAA,EAAA,IAEA,OAAA,EAAA,MAAA,EAAA,KACA,EAAA,qBAAA,EAAA,MAAA,KAEA,EAAA,EAAA,gBAAA,SAAA,KAEA,EAAA,KAAA,EAAA,aAAA,KACA,EAAA,EAAA,aAAA,IAGA,EAAA,GAAA,EAGA,OAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAIA,GAFA,EAAA,EAAA,SAAA,IAAA,cAEA,GAAA,IACA,EAAA,IACA,EAAA,OACA,GAAA,GAAA,MACA,EAAA,IACA,EAAA,MACA,CAAA,KAAA,GAAA,YAIA,MAAA,IAAA,EAAA,iEAHA,EAAA,IACA,EAAA,EAKA,MAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,QAAA,EAGA,SAAA,EAAA,GACA,KAAA,OAAA,EAAA,QAAA,EACA,KAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,GACA,KAAA,cAAA,EAAA,gBAAA,EACA,KAAA,YAAA,EAAA,cAAA,EACA,KAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,UACA,KAAA,SAAA,EAAA,KAAA,OAAA,EAAA,QAAA,MACA,KAAA,SAAA,EAAA,WAAA,EACA,KAAA,UAAA,EAAA,WAAA,GACA,KAAA,OAAA,EAAA,SAAA,EACA,KAAA,aAAA,EAAA,eAAA,EACA,KAAA,aAAA,EAAA,eAAA,EAEA,KAAA,cAAA,KAAA,OAAA,iBACA,KAAA,cAAA,KAAA,OAAA,iBAEA,KAAA,IAAA,KACA,KAAA,OAAA,GAEA,KAAA,WAAA,GACA,KAAA,eAAA,KAIA,SAAA,EAAA,EAAA,GAQA,IAPA,IAIA,EAJA,EAAA,EAAA,OAAA,IAAA,GACA,EAAA,EACA,GAAA,EACA,EAAA,GAEA,EAAA,EAAA,OAEA,EAAA,IAEA,KADA,EAAA,EAAA,QAAA,KAAA,KAEA,EAAA,EAAA,MAAA,GACA,EAAA,IAEA,EAAA,EAAA,MAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAGA,EAAA,QAAA,OAAA,IAAA,GAAA,GAEA,GAAA,EAGA,OAAA,EAGA,SAAA,EAAA,EAAA,GACA,MAAA,KAAA,EAAA,OAAA,IAAA,EAAA,OAAA,GAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,cAAA,OAAA,EAAA,EAAA,GAAA,EAGA,GAFA,EAAA,cAAA,GAEA,QAAA,GACA,OAAA,EAIA,OAAA,EAIA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,IAAA,EAOA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,KACA,KAAA,GAAA,GAAA,OAAA,OAAA,GAAA,OAAA,GACA,OAAA,GAAA,GAAA,OAAA,QAAA,GACA,OAAA,GAAA,GAAA,QAIA,SAAA,EAAA,GAGA,OAAA,EAAA,IAAA,QAAA,GAEA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GAEA,IAAA,GACA,IAAA,EAIA,SAAA,EAAA,GAGA,OAAA,EAAA,IAAA,QAAA,IACA,EAAA,IAGA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GAEA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GAEA,IAAA,GACA,IAAA,GACA,IAAA,EAIA,SAAA,EAAA,GAEA,MADA,QACA,KAAA,GAGA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EASA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EACA,EACA,GAAA,EACA,GAAA,EACA,GAAA,IAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,WAAA,MACA,EAAA,EAAA,WAAA,EAAA,OAAA,IAEA,GAAA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAEA,IAAA,EADA,EAAA,EAAA,WAAA,IAEA,OAAA,EAEA,EAAA,GAAA,EAAA,OAEA,CAEA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAEA,IADA,EAAA,EAAA,WAAA,MACA,EACA,GAAA,EAEA,IACA,EAAA,GAEA,EAAA,EAAA,EAAA,GACA,MAAA,EAAA,EAAA,GACA,EAAA,QAEA,IAAA,EAAA,GACA,OAAA,EAEA,EAAA,GAAA,EAAA,GAGA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,EAAA,EAAA,GAKA,OAAA,GAAA,EAOA,EAAA,GAAA,EAAA,GACA,EAIA,EAAA,EAAA,EATA,IAAA,EAAA,GACA,EAAA,EAiBA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,WACA,GAAA,IAAA,EAAA,OACA,MAAA,KAEA,IAAA,EAAA,eACA,IAAA,EAAA,QAAA,GACA,MAAA,IAAA,EAAA,IAGA,IAAA,EAAA,EAAA,OAAA,KAAA,IAAA,EAAA,GAQA,GAAA,IAAA,EAAA,WACA,EAAA,KAAA,IAAA,KAAA,IAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAGA,EAAA,GAEA,EAAA,WAAA,GAAA,GAAA,EAAA,UAKA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAJA,SAAA,GACA,OAAA,EAAA,EAAA,MAIA,KAAA,EACA,OAAA,EACA,KAAA,EACA,MAAA,IAAA,EAAA,QAAA,KAAA,MAAA,IACA,KAAA,EACA,MAAA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,IACA,KAAA,EACA,MAAA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,EAAA,GAAA,IACA,KAAA,EACA,MAAA,IAAA,EAAA,EAAA,GAAA,IACA,QACA,MAAA,IAAA,EAAA,2CA1CA,GAgDA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GAAA,OAAA,GAAA,GAGA,EAAA,OAAA,EAAA,EAAA,OAAA,GAIA,OAAA,GAHA,IAAA,OAAA,EAAA,EAAA,OAAA,IAAA,OAAA,GACA,IAAA,EAAA,GAAA,KAEA,KAIA,SAAA,EAAA,GACA,MAAA,OAAA,EAAA,EAAA,OAAA,GAAA,EAAA,MAAA,GAAA,GAAA,EAKA,SAAA,EAAA,EAAA,GAoBA,IAfA,IAIA,EAOA,EAGA,EAdA,EAAA,iBAGA,GAEA,GAAA,KADA,EAAA,EAAA,QAAA,OACA,EAAA,EAAA,OACA,EAAA,UAAA,EACA,EAAA,EAAA,MAAA,EAAA,GAAA,IAGA,EAAA,OAAA,EAAA,IAAA,MAAA,EAAA,GAKA,EAAA,EAAA,KAAA,IAAA,CACA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,MAAA,EAAA,GACA,GAAA,GACA,GAAA,GAAA,KAAA,EACA,GAAA,MACA,EAAA,EAAA,GACA,EAAA,EAGA,OAAA,EAOA,SAAA,EAAA,EAAA,GACA,GAAA,KAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAaA,IAVA,IACA,EAEA,EAHA,EAAA,SAGA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAMA,EAAA,EAAA,KAAA,KACA,EAAA,EAAA,OAEA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,KAAA,EAAA,MAAA,EAAA,GAEA,EAAA,EAAA,GAEA,EAAA,EAaA,OARA,GAAA,KAEA,EAAA,OAAA,EAAA,GAAA,EAAA,EACA,GAAA,EAAA,MAAA,EAAA,GAAA,KAAA,EAAA,MAAA,EAAA,GAEA,GAAA,EAAA,MAAA,GAGA,EAAA,MAAA,GAIA,SAAA,EAAA,GAKA,IAJA,IACA,EAAA,EACA,EAFA,EAAA,GAIA,EAAA,EAAA,EAAA,EAAA,OAAA,KACA,EAAA,EAAA,WAAA,KAEA,OAAA,GAAA,QACA,EAAA,EAAA,WAAA,EAAA,KACA,OAAA,GAAA,OAEA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,OAEA,KAIA,KADA,EAAA,EAAA,KACA,EAAA,GACA,EAAA,GACA,GAAA,EAAA,GAGA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAEA,EACA,EAHA,EAAA,GACA,EAAA,EAAA,IAIA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAEA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,KACA,IAAA,IAAA,GAAA,KAAA,EAAA,aAAA,GAAA,MACA,GAAA,EAAA,MAIA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,IAGA,SAAA,GAAA,EAAA,EAAA,EAAA,GACA,IAEA,EACA,EAHA,EAAA,GACA,EAAA,EAAA,IAIA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAEA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,KACA,GAAA,IAAA,IACA,GAAA,EAAA,EAAA,IAGA,EAAA,MAAA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,IAEA,GAAA,KAGA,GAAA,EAAA,MAIA,EAAA,IAAA,EACA,EAAA,KAAA,GAAA,KAGA,SAAA,GAAA,EAAA,EAAA,GACA,IAGA,EACA,EACA,EACA,EACA,EAPA,EAAA,GACA,EAAA,EAAA,IACA,EAAA,OAAA,KAAA,GAOA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,aAAA,IAAA,GAEA,IAAA,IAAA,GAAA,MAGA,EAAA,EADA,EAAA,EAAA,IAGA,GAAA,EAAA,EAAA,GAAA,GAAA,KAIA,EAAA,KAAA,OAAA,OAAA,GAAA,MAEA,GAAA,EAAA,MAAA,EAAA,aAAA,IAAA,IAAA,KAAA,EAAA,aAAA,GAAA,KAEA,GAAA,EAAA,EAAA,GAAA,GAAA,KAOA,GAHA,GAAA,EAAA,OAMA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,IAGA,SAAA,GAAA,EAAA,EAAA,EAAA,GACA,IAGA,EACA,EACA,EACA,EACA,EACA,EARA,EAAA,GACA,EAAA,EAAA,IACA,EAAA,OAAA,KAAA,GASA,IAAA,IAAA,EAAA,SAEA,EAAA,YACA,GAAA,mBAAA,EAAA,SAEA,EAAA,KAAA,EAAA,eACA,GAAA,EAAA,SAEA,MAAA,IAAA,EAAA,4CAGA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAEA,GAAA,IAAA,IACA,GAAA,EAAA,EAAA,IAIA,EAAA,EADA,EAAA,EAAA,IAGA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,MAIA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,KACA,EAAA,MAAA,EAAA,KAAA,OAAA,QAGA,EAAA,MAAA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,IAEA,GAAA,MAIA,GAAA,EAAA,KAEA,IACA,GAAA,EAAA,EAAA,IAGA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAIA,EAAA,MAAA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,IAEA,GAAA,KAMA,GAHA,GAAA,EAAA,OAMA,EAAA,IAAA,EACA,EAAA,KAAA,GAAA,KAGA,SAAA,GAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAIA,IAAA,EAAA,EAAA,GAFA,EAAA,EAAA,EAAA,cAAA,EAAA,eAEA,OAAA,EAAA,EAAA,GAAA,EAGA,KAFA,EAAA,EAAA,IAEA,YAAA,EAAA,cACA,EAAA,YAAA,iBAAA,GAAA,aAAA,EAAA,eACA,EAAA,WAAA,EAAA,UAAA,IAAA,CAIA,GAFA,EAAA,IAAA,EAAA,EAAA,IAAA,IAEA,EAAA,UAAA,CAGA,GAFA,EAAA,EAAA,SAAA,EAAA,MAAA,EAAA,aAEA,sBAAA,EAAA,KAAA,EAAA,WACA,EAAA,EAAA,UAAA,EAAA,OACA,CAAA,IAAA,EAAA,KAAA,EAAA,UAAA,GAGA,MAAA,IAAA,EAAA,KAAA,EAAA,IAAA,+BAAA,EAAA,WAFA,EAAA,EAAA,UAAA,GAAA,EAAA,GAKA,EAAA,KAAA,EAGA,OAAA,EAIA,OAAA,EAMA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,KACA,EAAA,KAAA,EAEA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,KAAA,EAAA,MAEA,IACA,EAAA,EAAA,UAAA,GAAA,EAAA,UAAA,GAGA,IACA,EACA,EAFA,EAAA,oBAAA,GAAA,mBAAA,EAaA,GATA,IAEA,GAAA,KADA,EAAA,EAAA,WAAA,QAAA,MAIA,OAAA,EAAA,KAAA,MAAA,EAAA,KAAA,GAAA,IAAA,EAAA,QAAA,EAAA,KACA,GAAA,GAGA,GAAA,EAAA,eAAA,GACA,EAAA,KAAA,QAAA,MACA,CAIA,GAHA,GAAA,IAAA,EAAA,eAAA,KACA,EAAA,eAAA,IAAA,GAEA,oBAAA,EACA,GAAA,IAAA,OAAA,KAAA,EAAA,MAAA,QACA,GAAA,EAAA,EAAA,EAAA,KAAA,GACA,IACA,EAAA,KAAA,QAAA,EAAA,EAAA,QAGA,GAAA,EAAA,EAAA,EAAA,MACA,IACA,EAAA,KAAA,QAAA,EAAA,IAAA,EAAA,YAGA,GAAA,mBAAA,EAAA,CACA,IAAA,EAAA,EAAA,eAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,IAAA,EAAA,KAAA,QACA,GAAA,EAAA,EAAA,EAAA,KAAA,GACA,IACA,EAAA,KAAA,QAAA,EAAA,EAAA,QAGA,EAAA,EAAA,EAAA,EAAA,MACA,IACA,EAAA,KAAA,QAAA,EAAA,IAAA,EAAA,WAGA,CAAA,GAAA,oBAAA,EAIA,CACA,GAAA,EAAA,YAAA,OAAA,EACA,MAAA,IAAA,EAAA,0CAAA,GALA,MAAA,EAAA,KACA,EAAA,EAAA,EAAA,KAAA,EAAA,GAOA,OAAA,EAAA,KAAA,MAAA,EAAA,MACA,EAAA,KAAA,KAAA,EAAA,IAAA,KAAA,EAAA,MAIA,OAAA,EAGA,SAAA,GAAA,EAAA,GACA,IAEA,EACA,EAHA,EAAA,GACA,EAAA,GAMA,IAFA,GAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,WAAA,KAAA,EAAA,EAAA,KAEA,EAAA,eAAA,IAAA,MAAA,GAGA,SAAA,GAAA,EAAA,EAAA,GACA,IAAA,EACA,EACA,EAEA,GAAA,OAAA,GAAA,iBAAA,EAEA,IAAA,KADA,EAAA,EAAA,QAAA,KAEA,IAAA,EAAA,QAAA,IACA,EAAA,KAAA,QAKA,GAFA,EAAA,KAAA,GAEA,MAAA,QAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,GAAA,EAAA,GAAA,EAAA,QAKA,IAAA,EAAA,EAAA,GAFA,EAAA,OAAA,KAAA,IAEA,OAAA,EAAA,EAAA,GAAA,EACA,GAAA,EAAA,EAAA,IAAA,EAAA,GAOA,SAAA,GAAA,EAAA,GAGA,IAAA,EAAA,IAAA,EAFA,EAAA,GAAA,IAMA,OAFA,EAAA,QAAA,GAAA,EAAA,GAEA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,KAAA,KAEA,GAGA,SAAA,GAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,OAAA,CAAA,OAAA,GAAA,IAGA,OAAA,QAAA,KAAA,GACA,OAAA,QAAA,SAAA;;AC1zBA,aAGA,IAAA,EAAA,QAAA,oBACA,EAAA,QAAA,oBAGA,SAAA,EAAA,GACA,OAAA,WACA,MAAA,IAAA,MAAA,YAAA,EAAA,uCAKA,OAAA,QAAA,KAAA,QAAA,kBACA,OAAA,QAAA,OAAA,QAAA,oBACA,OAAA,QAAA,gBAAA,QAAA,6BACA,OAAA,QAAA,YAAA,QAAA,yBACA,OAAA,QAAA,YAAA,QAAA,yBACA,OAAA,QAAA,oBAAA,QAAA,iCACA,OAAA,QAAA,oBAAA,QAAA,iCACA,OAAA,QAAA,KAAA,EAAA,KACA,OAAA,QAAA,QAAA,EAAA,QACA,OAAA,QAAA,SAAA,EAAA,SACA,OAAA,QAAA,YAAA,EAAA,YACA,OAAA,QAAA,KAAA,EAAA,KACA,OAAA,QAAA,SAAA,EAAA,SACA,OAAA,QAAA,cAAA,QAAA,uBAGA,OAAA,QAAA,eAAA,QAAA,6BACA,OAAA,QAAA,YAAA,QAAA,iCACA,OAAA,QAAA,eAAA,QAAA,iCAGA,OAAA,QAAA,KAAA,EAAA,QACA,OAAA,QAAA,MAAA,EAAA,SACA,OAAA,QAAA,QAAA,EAAA,WACA,OAAA,QAAA,eAAA,EAAA;;ACtCA,aAGA,IAAA,EAAA,QAAA,oBAGA,OAAA,QAAA;;ACJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAFA,IAAA,EAAA,EAAA,QAAA,YAEA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,IAAiB,EAAjB,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,QAAA,MAAA,EAAA,SAAiB,GA+DC,SAAA,EAAoB,GAC9B,IAAA,EAAS,GACC,GAAG,MAAM,KAAK,IAAI,WAAW,IAErC,QAAS,GAAM,GAAU,OAAO,aAAa,IAE/C,IAAA,EAAS,OAAO,KAAK,GAGjB,KAAA,EAAO,OAAS,EAAK,GAC3B,GAAU,IAGL,OAAA,EAGO,SAAA,EAAY,GACnB,SAAG,IAAO,EAAI,QAAQ,MAAQ,EAAK,IAAM,SAAQ,IAAI,MAAO,YA1ErD,EAAA,UAAA,SAAU,GACjB,OAAA,EAAK,SAAS,IAGD,EAAA,UAAA,SAAU,EAAqB,GAAoB,GAV3E,OAAA,EAAA,UAAA,OAAA,EAAA,YAWI,EAAc,EAAW,EAAc,EAAY,GAE7C,MAAA,EAAU,IAAI,QAAQ,EAAa,CACvC,MAAO,EAAW,SAAW,aAG3B,IACI,MAAA,QAAiB,MAAM,GACzB,GAAA,EAAS,GAEJ,aADY,EAAS,OAItB,MAAA,IAAI,MAAM,2BAGpB,MAAO,GACC,MAAA,IAAI,YAAY,MAAgB,EAAM,eAI1B,EAAA,WAAA,SAAW,EAAqB,GAAoB,GAhC5E,OAAA,EAAA,UAAA,OAAA,EAAA,YAiCI,EAAc,EAAW,EAAc,EAAY,GAE7C,MAAA,EAAU,IAAI,QAAQ,EAAa,CACvC,MAAO,EAAW,SAAW,WAC7B,QAAS,IAAI,QAAQ,CAAkB,eAAA,yCAGrC,IACI,MAAA,QAAiB,MAAM,GACzB,GAAA,EAAS,GAEJ,gCAA0B,QADZ,EAAS,iBAIxB,MAAA,IAAI,MAAM,2BAGpB,MAAO,GACC,MAAA,IAAI,YAAY,MAAgB,EAAM,eAQhC,EAAA,SAAA,SAAS,GAChB,OAAA,MAAM,QAAQ,GAAQ,EAAO,OAAO,KAAK,GAAM,IAAI,GAAO,EAAK,KAGxD,EAAA,oBAAmB,EAgBnB,EAAA,YAAW,EAIX,EAAA,MAAA,SAAA,EAAM,EAAQ,GACxB,GAAA,IAAM,EAAG,OAAO,EAEhB,IAEA,EAFA,EAAO,MAAM,QAAQ,GACrB,EAAO,MAAM,QAAQ,GAGrB,GAAA,GAAQ,EAAM,CACZ,GAAA,EAAE,QAAU,EAAE,OAAQ,OAAO,EAC5B,IAAA,EAAI,EAAG,EAAI,EAAE,OAAQ,IACxB,IAAK,EAAM,EAAE,GAAI,EAAE,IAAK,OAAO,EAC1B,OAAA,EAGL,GAAA,GAAQ,EAAM,OAAO,EAErB,GAAA,GAAK,GAAkB,iBAAN,GAA+B,iBAAN,EAAgB,CACtD,MAAA,EAAO,OAAO,KAAK,GACrB,GAAA,EAAK,SAAW,OAAO,KAAK,GAAG,OAAQ,OAAO,EAE5C,MAAA,EAAQ,aAAa,KACvB,EAAQ,aAAa,KACrB,GAAA,GAAS,EAAO,OAAO,EAAE,WAAa,EAAE,UACxC,GAAA,GAAS,EAAO,OAAO,EAErB,MAAA,EAAU,aAAa,OACzB,EAAU,aAAa,OACvB,GAAA,GAAW,EAAS,OAAO,EAAE,YAAc,EAAE,WAC7C,GAAA,GAAW,EAAS,OAAO,EAE1B,IAAA,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC3B,IAAK,OAAO,UAAU,eAAe,KAAK,EAAG,EAAK,IAAK,OAAO,EAE3D,IAAA,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC3B,IAAK,EAAM,EAAE,EAAK,IAAK,EAAE,EAAK,KAAM,OAAO,EAEtC,OAAA,EAGF,OAAA,GA1HX,CAAiB,IAAA,QAAA,MAAA,EAAK;;ACOA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EANtB,IAAA,EAAA,QAAA,oBACA,EAAA,QAAA,kBACA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,YAEsB,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAhB,MAAO,EAiBX,YAAoB,GAAA,KAAA,QAAA,EAhBpB,KAAA,QAAU,SAEV,KAAA,UAAY,IAAI,IAChB,KAAA,YAAc,IAAI,IAClB,KAAA,aAAe,IAAI,IACnB,KAAA,SAAW,IAAI,MAEf,KAAA,UAAY,IAAI,MAChB,KAAA,UAAY,IAAI,IAGhB,KAAA,yBAA0B,EAAS,EAAA,UAAA,KAAK,eAAgB,KAAK,GAE7D,KAAA,WAAY,EACZ,KAAA,UAAW,EAGT,OAAO,QAAU,KAAK,kBAAkB,KAAK,MAG/C,YAAY,GACL,KAAA,KAAO,EAEP,KAAA,WAEA,KAAA,0BAOD,WAjCc,OAAA,EAAA,UAAA,OAAA,EAAA,YAkCd,IAAA,KAAK,YAAa,KAAK,SAAvB,CAEC,KAAA,WAAY,EAEb,IACI,MAAA,QAAe,KAAK,WAAW,KAAK,QAAQ,QAI9C,GAHC,KAAA,aAAa,GACb,KAAA,QAAQ,wBAAyB,KAAK,YAEtC,KAAK,eAAe,GAEvB,YADK,KAAA,QAAQ,cAAa,GAIvB,KAAA,QAAQ,OAAS,EAKlB,KAAK,QAAQ,OAAQ,YACjB,KAAK,sBAGL,KAAK,iBAGR,KAAA,UAAW,EACX,KAAA,WAAY,EAEnB,MAAO,GACA,KAAA,UAAW,EACX,KAAA,WAAY,EAEZ,KAAA,QAAQ,cAAa,GACrB,KAAA,YAAY,OAIf,gBAxEc,OAAA,EAAA,UAAA,OAAA,EAAA,YAyEd,UACI,KAAK,YACN,KAAA,QAAQ,cAAa,GACrB,KAAA,kBACA,KAAA,gBACA,KAAA,2BACC,KAAK,gBAAe,GAE5B,MAAO,GACA,KAAA,YAAY,MAIf,iBAtFc,OAAA,EAAA,UAAA,OAAA,EAAA,YAuFd,IACI,MAAA,EAAW,KAAK,aAAa,KAAK,QAAQ,QAC1C,QAAY,KAAK,iBAAiB,GACnC,KAAA,QAAQ,OAAQ,IAAM,QACrB,KAAK,eAAe,KAAK,QAAQ,OAAQ,YAC1C,KAAA,cAAc,EAAK,KAAK,QAAQ,QAChC,KAAA,QAAQ,cAAa,GACrB,KAAA,kBACA,KAAA,gBACA,KAAA,2BACC,KAAK,gBAAe,GAE5B,MAAO,GACA,KAAA,YAAY,MAIrB,aAAa,GACP,IAAC,EAAO,UAAW,OAEjB,MAOA,EAPe,CACnB,MAAO,CAAC,SACR,QAAS,CAAC,QAAS,WACnB,KAAM,CAAC,QAAS,UAAW,QAC3B,MAAO,CAAC,QAAS,UAAW,OAAQ,UAGE,EAAO,UAAU,eAEpD,KAAA,UAAY,GAAwB,GAOrC,WAAW,GA3HG,OAAA,EAAA,UAAA,OAAA,EAAA,YA4Hd,GAAkB,iBAAX,EAAqB,CACxB,MAAA,QAAqB,EAAM,MAAA,UAAU,GAEpC,OADY,EAAK,SAAS,GAI1B,OAAA,IAIL,gBAtIc,OAAA,EAAA,UAAA,OAAA,EAAA,YAuId,KAAK,gBAAgB,KAAK,QAAQ,OAAQ,kBACtC,KAAK,WAAW,4CAA4C,IAGhE,KAAK,gBAAgB,KAAK,QAAQ,OAAQ,qBACtC,KAAK,WAAW,uCAAuC,MAIjE,WAAW,EAAmB,GACxB,OAAC,EAEE,IAAI,QAAQ,CAAC,EAAS,KACrB,MAAA,EAAS,SAAS,cAAc,UACtC,EAAO,IAAM,EAAW,EAAY,EAAM,MAAA,YAAY,GACtD,EAAO,OAAS,KAAM,KACtB,EAAO,QAAW,CAAA,IAChB,EAAO,IAAI,YAAa,EAAY,OAAO,UAGxC,KAAA,QAAQ,KAAM,YAAY,KAVV,QAAQ,UAc3B,YA/Jc,OAAA,EAAA,UAAA,OAAA,EAAA,YAgKb,IAAA,IAAI,KAAiB,KAAK,QAAQ,OAAQ,YACvC,KAAK,eAAe,EAAe,KAAK,QAAQ,OAAQ,MAAM,QAAQ,IAGxE,MAAA,EAAY,MAAM,KAAK,KAAK,UAAU,QAAQ,IAAI,GAAO,KAAK,UAAU,IAAI,IAClF,EAAU,KAAK,CAAC,EAAG,IAAM,EAAG,MAAS,EAAG,OAElC,MAAA,EAAiB,EAAU,KAAK,QAA+C,IAAlC,EAAU,OAAQ,aACjE,IACF,EAAe,UAAW,GAGtB,MAAA,EAAkB,EAAU,KAAK,QAA+C,IAAlC,EAAU,OAAQ,aAClE,IACF,EAAgB,WAAY,SAGxB,KAAK,qBAAqB,EAAiB,GAE3C,MAAA,EAAiB,EAAU,OAAO,GAAY,IAAa,GAC5D,IAAA,IAAI,KAAY,QACb,KAAK,qBAAqB,EAAW,KAIzC,eAAe,EAAuB,GAzLxB,OAAA,EAAA,UAAA,OAAA,EAAA,YA0LZ,MAAA,QAAmB,KAAK,WAAW,GACnC,EAAW,KAAK,eAAe,GAE9B,OADP,EAAS,MAAQ,EACV,IAGH,qBAAqB,EAAyB,GAhMhC,OAAA,EAAA,UAAA,OAAA,EAAA,YAiMZ,MAAA,EAAW,KAAK,aAAa,EAAS,QACtC,QAAY,KAAK,iBAAiB,EAAU,EAAU,GAC5D,EAAI,GAAK,EAAS,OAAQ,QAC1B,EAAS,IAAM,QACT,KAAK,eAAe,EAAS,OAAQ,YACtC,KAAA,cAAc,EAAS,IAAK,EAAS,UAG5C,aAAa,GACP,IAAA,EAAW,GAEX,GAAwB,iBAAjB,EAAO,MAChB,EAAW,EAAO,WAGd,GAAA,EAAO,OAAS,EAAO,MAAM,MAAO,CACtC,EAAO,MAAM,MAAM,KAAK,CAAC,EAAG,IAAM,EAAE,UAAY,EAAE,WAC7C,IAAA,IAAI,KAAY,EAAO,MAAM,MAC5B,GAAA,OAAO,OAAS,EAAS,UAAW,CACtC,EAAW,EAAS,SACpB,OAMD,OAAA,EAGT,eAAe,GACP,MAAA,EAAW,CAAE,OAAQ,GASpB,OANH,EAAS,OAAQ,OAAS,KAAK,QAAQ,OAAQ,QACjD,EAAS,OAAQ,MAAQ,EAAS,OAAQ,MAAM,OAAO,KAAK,QAAQ,OAAQ,QAGzE,KAAA,UAAU,IAAI,EAAS,OAAQ,QAAS,GAEtC,EAGH,eAAe,GA3OD,OAAA,EAAA,UAAA,OAAA,EAAA,YA4Od,IAAC,EAAe,OAEd,MAAA,QAAmB,EAAM,MAAA,UAAU,GACnC,EAAO,SAAS,cAAc,SACpC,EAAK,KAAO,WACX,EAAa,UAAY,EACrB,KAAA,QAAQ,KAAM,YAAY,GAEzB,MAAA,EAAW,EAAM,MAAA,SAAU,EAAK,MAAc,UAC/C,KAAA,SAAW,KAAK,SAAS,OAAO,KAGjC,iBAAiB,EAAkB,EAA0B,GAxP/C,OAAA,EAAA,UAAA,OAAA,EAAA,YAyPZ,MAAA,QAAgB,EAAM,MAAA,UAAU,GAChC,EAAe,SAAS,cAAc,OAC5C,EAAa,UAAY,EACnB,MAAA,EAAM,EAAa,cAAc,OAenC,GAbA,GACF,EAAI,aAAa,KAAM,EAAS,OAAQ,SAG1C,EAAI,aAAa,SAAU,QAC3B,EAAI,aAAa,QAAS,QAC1B,EAAI,MAAM,OAAS,OACnB,EAAI,MAAM,MAAQ,OAElB,EAAI,MAAM,OAAS,UACnB,EAAI,MAAM,QAAU,IACpB,EAAI,aAAa,cAAe,gCAE5B,GAAY,EAAgB,CACxB,MAAA,EAAe,EAAe,OAAQ,QACtC,EAAmB,EAAe,OAAQ,YAAY,gBAExD,GAAA,EAAS,OAAQ,UAAY,EAC1B,KAAA,QAAQ,QAAS,YAAY,OAE/B,CACuB,KAAK,QAAQ,QAAS,cAAc,IAAM,GAA9D,MACA,EAAiB,KAAK,QAAQ,QAAS,cAAc,IAAM,GAE3D,EAAS,OAAO,WAAW,EAAI,aAAa,WAC5C,EAAQ,OAAO,WAAW,EAAI,aAAa,UAC5C,EAAI,aAAa,YACpB,EAAI,aAAa,iBAAkB,KAAS,KAG9C,EAAI,aAAa,sBAAuB,iBACxC,EAAI,aAAa,SAAU,EAAgB,aAAa,WACxD,EAAI,aAAa,QAAS,EAAgB,aAAa,UACvD,EAAI,aAAa,IAAK,EAAgB,aAAa,MACnD,EAAI,aAAa,IAAK,EAAgB,aAAa,MAEnD,EAAgB,cAAe,YAAY,SAIxC,KAAA,QAAQ,QAAS,YAAY,GAgB7B,OAAA,IAGH,UAAU,EAAkB,EAAqC,EAAkB,GAzTrE,OAAA,EAAA,UAAA,OAAA,EAAA,YA0Td,OAAA,EAAS,cAAc,QAAQ,SAAW,QAC/B,KAAK,aAAa,EAAU,EAAgB,EAAU,SAGtD,KAAK,gBAAgB,EAAU,EAAgB,EAAU,KAIpE,gBAAgB,EAAkB,EAAqC,EAAkB,GAlU3E,OAAA,EAAA,UAAA,OAAA,EAAA,YAmUZ,MAAA,QAAkB,EAAM,MAAA,WAAW,GACpC,KAAA,SAAS,WAAY,qBAA4B,MAElD,IAAA,EAAa,EAAe,WAqBzB,MAnBqB,UAAxB,EAAW,WACb,EAAa,KAAK,mBAAmB,EAAe,oBAE/C,KAAA,iBAAiB,EAAY,KAAK,GAAM,QAAS,IAC9C,MAAA,EAAY,SAAS,gBAAgB,6BAA8B,SACzE,EAAQ,YAAY,GACnB,EAA+B,QAAU,KAAK,cAAc,KAAK,CAAE,SAAU,KAAM,eAAgB,EAAgB,SAAU,EAAU,KAAM,IAC7I,EAA+B,MAAM,OAAS,UAC1C,KAAA,SAAS,EAAS,oBAGzB,EAAe,WAAa,KAAK,eAAe,EAAe,WAAa,IAGzD,EAAW,eAAe,+BAAgC,gBAC1D,GACnB,EAAW,eAAe,+BAAgC,aAAc,GAGnE,IAGH,aAAa,EAAkB,EAAqC,EAAkB,GA9VxE,OAAA,EAAA,UAAA,OAAA,EAAA,YA+VZ,MAAA,QAAgB,EAAM,MAAA,UAAU,GAAU,GAC3C,KAAA,SAAS,WAAY,qBAA4B,MAEhD,MAAA,EAAe,SAAS,cAAc,OAC5C,EAAa,UAAY,EACnB,MAAA,EAAM,EAAa,cAAc,OAEjC,EAAS,OAAO,WAAW,EAAI,aAAa,WAC5C,EAAQ,OAAO,WAAW,EAAI,aAAa,UAsB1C,OArBF,EAAI,aAAa,YACpB,EAAI,aAAa,iBAAkB,KAAS,KAG9C,EAAI,GAAK,EAAe,WAAY,GACpC,EAAI,aAAa,sBAAuB,iBACxC,EAAI,aAAa,SAAU,EAAe,aAAc,OAAO,YAC/D,EAAI,aAAa,QAAS,EAAe,aAAc,MAAM,YAC7D,EAAI,aAAa,IAAK,EAAe,aAAc,EAAE,YACrD,EAAI,aAAa,IAAK,EAAe,aAAc,EAAE,YAEhD,KAAA,iBAAiB,EAAK,KAAK,GAAM,QAAS,IACvC,MAAA,EAAY,SAAS,gBAAgB,6BAA8B,SACzE,EAAQ,YAAY,GACnB,EAA+B,QAAU,KAAK,cAAc,KAAK,CAAE,SAAU,KAAM,eAAgB,EAAgB,SAAU,EAAU,KAAM,IAC7I,EAA+B,MAAM,OAAS,UAC1C,KAAA,SAAS,EAAS,oBAGzB,EAAe,WAAa,KAAK,eAAe,EAAe,WAAa,GAErE,IAGT,iBAAiB,EAAkB,EAAkB,GAC/C,IAAA,EAAW,MAAM,KAAK,EAAQ,iBAAiB,GAAU,UAEtD,OADP,EAAW,EAAc,EAAS,OAAO,GAAW,EAItD,eAAe,EAAwC,GAC/C,MAAA,EAAgB,EAAmB,cAUlC,OARF,KAAA,iBAAiB,EAAoB,KAAK,GAAM,QAAS,IAC3D,EAAwB,QAAU,KACnC,EAAQ,WAEV,EAAmB,SAEnB,EAAc,YAAY,GAEnB,EAOT,iBACM,KAAK,gBAAgB,KAAK,QAAQ,OAAQ,eACvC,KAAA,WAAa,IAAI,EAAJ,WAAe,MAC5B,KAAA,WAAW,QAIpB,kBACM,GAAA,KAAK,QAAQ,OAAQ,MAClB,IAAA,IAAI,KAAO,KAAK,UAAU,OAAQ,CAC/B,MAAA,EAAW,KAAK,UAAU,IAAI,GAEpC,EAAS,IAAK,MAAM,QAAU,IAC9B,EAAS,IAAK,MAAM,QAAU,EAAS,UAAY,EAAS,UAAY,UAAY,YAKjF,KAAA,QAAQ,OAAQ,IAAK,MAAM,QAAU,IACrC,KAAA,QAAQ,OAAQ,IAAK,MAAM,QAAU,QAI9C,gBACM,GAAA,KAAK,QAAQ,OAAQ,UAClB,IAAA,IAAI,KAAY,KAAK,QAAQ,OAAQ,UACnC,KAAA,aAAa,GAIlB,GAAA,KAAK,QAAQ,OAAQ,MAClB,IAAA,IAAI,KAAO,KAAK,UAAU,OAAQ,CAC/B,MAAA,EAAW,KAAK,UAAU,IAAI,GAEhC,GAAA,EAAS,OAAQ,UACd,IAAA,IAAI,KAAY,EAAS,OAAQ,UAC/B,KAAA,aAAa,IAO5B,aAAa,GACP,IAAA,EACA,EAcA,GAZoB,iBAAb,EACT,EAAe,GAGf,EAAe,EAAS,KAExB,EAAQ,EAAS,MACb,EAAS,iBACX,EAAQ,KAAK,SAAS,EAAS,eAAgB,OAAc,MAI5D,KAAK,YAAY,IAAI,GAAe,CACnC,IAAA,EAAa,CAAE,SAAU,EAAc,UAAW,GAAI,eAAW,GAChE,KAAA,YAAY,IAAI,EAAc,GAGhC,KAAK,KAAM,OAAQ,KACjB,KAAA,KAAM,OAAQ,GAAgB,CACjC,UAAW,EACX,MAAO,EACP,aAAc,IAAI,KAClB,WAAY,KAIX,KAAA,YAAY,EAAc,EAAO,IAAI,GAG5C,qBACM,IAAA,EAAU,IAAI,MAEZ,MAAA,EAAU,KAAK,QAAQ,OAAQ,QAKjC,GAJA,GAAW,EAAQ,SACrB,EAAU,EAAQ,OAAO,MAAM,QAAQ,EAAQ,QAAU,EAAQ,OAAS,CAAC,EAAQ,UAGjF,KAAK,QAAQ,OAAQ,MAClB,IAAA,IAAI,KAAO,KAAK,UAAU,OAAQ,CAC/B,MAAA,EAAW,KAAK,UAAU,IAAI,GAE9B,EAAU,EAAU,QAAU,EAAU,OAAO,QACjD,GAAW,EAAQ,SACrB,EAAU,EAAQ,OAAO,MAAM,QAAQ,EAAQ,QAAU,EAAQ,OAAS,CAAC,EAAQ,UAKpF,IAAA,IAAI,KAAU,EACb,GAAA,EAAO,SAAW,EAAO,iBAAkB,CACvC,MAAA,EAAgB,KAAK,iBAAiB,OAAQ,OAAW,GAEvD,OAAA,KAAK,UAAU,IAChB,IAAA,YACE,KAAA,qBAAqB,OAAQ,OAAW,GAC7C,MAEF,QACO,KAAA,yBAAyB,OAAQ,OAAW,KAW3D,cAAc,EAAyB,GACjC,IAAC,EAAO,MAAO,OAEb,MAAA,EAAc,KAAK,iBAAiB,EAAK,KAAK,GAE/C,KAAA,eAAe,EAAQ,EAAK,GAC5B,KAAA,UAAU,EAAQ,EAAK,GAG9B,eAAe,EAA2B,EAAyB,GAE7D,GAAA,EAAO,aAAe,EAAO,YAAY,QAAU,EAAO,YAAY,MAAO,CAC1E,KAAA,iBAAmB,EAAO,YAEzB,MAAA,EAAa,CAAE,SAAU,EAAO,YAAY,OAAQ,UAAW,GAAI,eAAW,GAC/E,KAAA,YAAY,IAAI,EAAO,YAAY,OAAQ,IAIpD,UAAU,EAA2B,EAAyB,GAExD,GAAA,EAAO,SACJ,IAAA,IAAI,KAAQ,EAAO,MACtB,EAAK,gBAAkC,IAApB,EAAK,WAA4B,EAAO,SAAS,WAAa,EAAK,WACtF,EAAK,eAAgC,IAAnB,EAAK,UAA2B,EAAO,SAAS,UAAY,EAAK,UACnF,EAAK,eAAgC,IAAnB,EAAK,UAA2B,EAAO,SAAS,UAAY,EAAK,UAIlF,IAAA,IAAI,KAAQ,EAAO,MAClB,EAAK,QAAU,EAAK,SACjB,KAAA,eAAe,EAAM,EAAK,IAExB,EAAK,SAAW,EAAK,WACvB,KAAA,gBAAgB,EAAM,EAAK,GAKtC,eAAe,EAAyB,EAAyB,GACzD,MAAA,EAAW,KAAK,0BAA0B,GAC3C,IAAA,IAAI,KAAU,EAAU,CACrB,MAAA,EAAW,EAAO,SAClB,EAAY,EAAO,UAErB,IAAA,EAAa,KAAK,YAAY,IAAI,GACjC,IACH,EAAa,CAAE,SAAU,EAAU,UAAW,GAAI,eAAW,GACxD,KAAA,YAAY,IAAI,EAAU,IAG3B,MAAA,EAAW,IAAI,EAAK,cAAA,SAAS,GACnC,EAAW,UAAU,KAAK,GAEpB,MAAA,EAAa,EAAY,KAAK,GAAc,EAAW,KAAO,GAChE,IAAC,EAAY,CACV,KAAA,WAAW,iCAAkC,kBAClD,SAGI,MAAA,EAAiB,KAAK,oBAAoB,EAAK,EAAY,GAEjE,EAAe,WAAa,EAG5B,EAAW,YAAY,SAAS,gBAAgB,6BAA8B,UAEzE,KAAA,iBAAiB,EAAY,KAAK,GAAM,QAAS,IAC9C,MAAA,EAAY,SAAS,gBAAgB,6BAA8B,SACzE,EAAQ,YAAY,GACnB,EAA+B,QAAU,KAAK,cAAc,KAAK,CAAE,SAAU,KAAM,eAAgB,EAAgB,SAAU,EAAU,KAAM,KAE1I,EAAS,KAAK,SAAuC,IAA5B,EAAS,KAAK,aACxC,EAA+B,MAAM,OAAS,WAG5C,KAAA,SAAS,EAAS,qBAkB7B,0BAA0B,GAClB,MAAA,EAAiB,IAAI,MAE3B,EAAK,OAAS,EAAK,OAAS,EAAK,OAAS,IAAI,MAGzC,IAAA,IAAI,KAAY,EAAK,OAAQ,CAC1B,MAAA,EAAQ,KAAK,KAAM,OAAQ,GAC7B,GAAA,EACG,IAAA,IAAI,KAAY,EAAM,WAAY,UAChC,KAAA,gBAAgB,EAAU,EAAU,QAItC,KAAA,WAAW,yBAA0B,+BAK9C,EAAK,SAAW,EAAK,SAAW,EAAK,SAAW,IAAI,MACpD,EAAK,SAAW,EAAK,OAAS,EAAK,SAAS,OAAO,EAAK,QAAU,EAAK,SAGjE,MAAA,EAAY,EAAK,SAAS,OAAO,GAAmB,iBAAN,GAC/C,IAAA,IAAI,KAAY,EAAW,CACxB,MAAA,EAAY,EAAK,QAAU,EAAK,QAAU,EAC3C,KAAA,gBAAgB,EAAU,EAAW,GAItC,MAAA,EAAgB,EAAK,SAAS,OAAO,GAAmB,iBAAN,GACnD,IAAA,IAAI,KAAgB,EAAe,CAChC,MAAA,EAAoB,EACrB,KAAA,gBAAgB,EAAkB,OAAS,EAAkB,QAAU,GAGvE,OAAA,EAGT,gBAAgB,EAAiB,EAAmB,GAC5C,MAAA,EAAa,KAAK,KAAM,OAAQ,GAChC,EAAiD,cAA1B,EAAQ,MAAM,KAAK,GAE5C,GAAc,EAChB,EAAe,KAAK,CAAE,SAAU,EAAS,UAAW,IAG/C,KAAA,WAAW,yBAA0B,iCAI9C,gBAAgB,EAAyB,EAAyB,GAC5D,GAAC,EAAK,SAAY,EAAK,SAAvB,CAEJ,EAAK,SAAW,EAAK,SAAW,EAAK,SAAW,IAAI,MACpD,EAAK,SAAW,EAAK,QAAU,EAAK,SAAS,OAAO,EAAK,SAAW,EAAK,SAEpE,IAAA,IAAI,KAAa,EAAK,SAAW,CAC9B,MAAA,EAAa,EAAY,KAAK,GAAc,EAAW,KAAO,GAChE,GAAA,EAAY,CACV,IAAA,EAAc,KAAK,aAAa,IAAI,GACnC,IACH,EAAc,CAAE,UAAW,GAAI,eAAW,GACrC,KAAA,aAAa,IAAI,EAAW,IAG7B,MAAA,EAAW,IAAI,EAAK,cAAA,SAAS,GACnC,EAAY,UAAU,KAAK,GAErB,MAAA,EAAiB,KAAK,oBAAoB,EAAK,EAAY,GAE5D,KAAA,iBAAiB,EAAY,KAAK,GAAM,QAAS,IAC9C,MAAA,EAAY,SAAS,gBAAgB,6BAA8B,SACzE,EAAQ,YAAY,GACnB,EAA+B,QAAU,KAAK,eAAe,KAAK,CAAE,SAAU,KAAM,eAAgB,EAAgB,UAAW,EAAW,KAAM,KAE7I,EAAS,KAAK,SAAuC,IAA5B,EAAS,KAAK,aACxC,EAA+B,MAAM,OAAS,WAG5C,KAAA,SAAS,EAAS,oBAgBnB,MAAA,EAAU,MAAM,QAAQ,EAAK,QAAU,EAAK,OAAS,CAAC,EAAK,QAC5D,IAAA,IAAI,KAAU,EAAQ,OAAO,QAAW,IAAN,GAC7B,OAAA,EAAO,SACR,IAAA,SACE,IAAA,IAAI,KAAkB,EAAO,KAAK,SAAU,CACzC,MAAA,EAAkB,EAAY,KAAK,GAAc,EAAW,KAAO,GACrE,GACG,KAAA,SAAS,EAAiB,EAAO,KAAK,sBAWhD,KAAA,WAAW,yBAA0B,oBAKhD,wBAAwB,GAChB,MAAA,EAAa,EAAe,WAE5B,EAAO,EAAW,UAElB,EAAO,SAAS,gBAAgB,6BAA8B,QACpE,EAAK,aAAa,KAAM,EAAW,GAAK,eACxC,EAAK,aAAa,UAAW,EAAK,OAAS,GAAG,YAC9C,EAAK,aAAa,SAAU,EAAK,MAAQ,GAAG,YAC5C,EAAK,aAAa,KAAM,EAAK,EAAI,GAAG,YACpC,EAAK,aAAa,KAAM,EAAK,EAAI,IAAK,YACtC,EAAK,MAAM,YAAc,IAEzB,EAAW,cAAe,aAAa,EAAM,GAG/C,oBAAoB,EAAyB,EAAgC,GACrE,MAAA,EAAiB,IAAI,EAAK,cAAA,eAC9B,EAAW,GACX,EACA,EACA,EACA,EAAM,MAAA,SAAS,EAAW,WAC1B,EAAW,UACX,EAAW,yBAMN,OAJP,EAAS,gBAAgB,IAAI,EAAW,GAAI,GAIrC,EAGT,2BAA2B,EAAgC,GACpD,KAAA,iBAAiB,EAAY,KAAK,GAAO,QAAS,IAC/C,MAAA,EAAiB,IAAI,EAAK,cAAA,eAC9B,EAAW,QACX,EACA,EACA,EACA,EAAM,MAAA,SAAS,EAAiB,WAC/B,EAAwC,UACzC,EAAiB,yBAEnB,EAAS,gBAAgB,IAAI,EAAW,GAAI,KAIhD,mBAAmB,GACX,MAAA,EAAQ,SAAS,gBAAgB,6BAA8B,SAM9D,OALP,EAAM,aAAa,KAAM,EAAW,aAAa,OACjD,EAAM,aAAa,IAAK,EAAW,aAAa,MAChD,EAAM,aAAa,IAAK,EAAW,aAAa,MAChD,EAAM,aAAa,SAAU,EAAW,aAAa,WACrD,EAAM,aAAa,QAAS,EAAW,aAAa,UAC7C,EAGT,SAAS,EAAkB,GACjB,OAAA,EAAQ,UACd,EAAQ,UAAU,SAAS,GAC3B,IAAI,OAAO,QAAU,EAAY,QAAS,MAAM,KAAK,EAAQ,WAGjE,YAAY,EAAkB,GAC3B,EAAQ,UACP,EAAQ,UAAU,OAAO,GACzB,EAAQ,UAAY,EAAQ,UAAU,QAAQ,IAAI,OAAO,UAAY,EAAU,MAAM,KAAK,KAAK,KAAO,UAAW,MAAO,KAG5H,SAAS,EAAkB,GACxB,EAAQ,UACP,EAAQ,UAAU,IAAI,GACtB,EAAQ,WAAa,IAAM,EAG/B,WAAW,EAAkB,EAAgC,EAAwB,GAC/E,GAAC,GAAY,EAAQ,OAEpB,IAAA,IAAI,KAAa,EAAS,CACzB,GAAA,KAAK,SAAS,EAAY,qBAAsB,OAE/C,KAAK,SAAS,EAAY,KACxB,KAAA,SAAS,WAAY,oBAA2B,MAChD,KAAA,SAAS,EAAY,GAEtB,EAAW,WAWb,QAA4B,IAAd,IACX,KAAA,iBAAiB,EAAY,KAAK,GAAO,QAAS,IAChD,KAAK,SAAS,EAAkB,sBAC9B,KAAK,SAAS,EAAkB,IAC9B,KAAA,SAAS,EAAkB,MAQ5C,cAAc,EAAkB,EAAgC,EAAwB,GAClF,GAAC,GAAY,EAAQ,OAEpB,IAAA,IAAI,KAAa,EAChB,KAAK,SAAS,EAAY,KACvB,KAAA,SAAS,WAAY,sBAA6B,MAClD,KAAA,YAAY,EAAY,IAYzB,QAA4B,IAAd,IACX,KAAA,iBAAiB,EAAY,KAAK,GAAO,QAAS,IACjD,KAAK,SAAS,EAAkB,IAC7B,KAAA,YAAY,EAAkB,MAYzC,eAAe,GAAyB,GA/2B1B,OAAA,EAAA,UAAA,OAAA,EAAA,YAg3Bb,KAAA,eAAe,GAEhB,IAAA,EAAmB,KAAK,mBAAmB,GAG3C,IAFJ,EAAmB,EAAiB,OAAO,MAAM,KAAK,KAAK,UAAU,WAE7C,EAAiB,OAClC,IAAA,IAAI,KAAY,QACb,KAAK,aAAa,EAAU,KAKxC,mBAAmB,GACX,MAAA,EAAmB,IAAI,MAEvB,EAAY,OAAO,KAAK,KAAK,KAAM,QAErC,IAAA,EAAsB,EAAoB,EAE1C,KAAK,mBACP,EAAuB,KAAK,YAAY,IAAI,KAAK,iBAAiB,UACtC,EAAqB,YAC/C,EAAqB,EAAqB,UAAU,MACpD,EAAqB,KAAK,KAAM,OAAQ,KAAK,iBAAiB,QAAS,OAItE,IAAA,IAAI,KAAY,EAAW,CACxB,MAAA,EAAa,KAAK,YAAY,IAAI,GACpC,GAAA,EAAY,CACR,MAAA,EAAc,KAAK,KAAM,OAAQ,GAEnC,GAAA,EACG,KAAA,SAAS,WAAY,MAAa,EAAY,wBAC/C,EAAiB,QAAQ,GAAY,GACvC,EAAiB,KAAK,QAGrB,GAAI,EAAW,UAAW,CACZ,EAAW,UAAU,MAAhC,MACA,EAAW,EAAY,MAiBzB,GAfA,EAAY,eAAiB,EAAW,UAAU,cAC/C,KAAA,SAAS,WAAY,MAAa,mBAA0B,KAAK,WAAW,EAAW,UAAU,kBAClG,EAAiB,QAAQ,GAAY,GACvC,EAAiB,KAAK,IAInB,EAAM,MAAA,MAAM,EAAW,UAAU,WAAY,EAAY,cACvD,KAAA,SAAS,WAAY,+BAAsC,KAAK,WAAW,EAAW,UAAU,kBACjG,EAAiB,QAAQ,GAAY,GACvC,EAAiB,KAAK,IAKxB,KAAK,kBACF,IAAuB,GAAwB,EAAS,QAAQ,kBAAoB,EAAI,CACrF,MAAA,EAAe,EAAY,WAAY,cAEzC,IAAiB,GACd,KAAA,SAAS,iBAAkB,WAC5B,EAAiB,QAAQ,GAAY,GACvC,EAAiB,KAAK,IAGjB,IAAiB,IACnB,KAAA,SAAS,iBAAkB,WAC5B,EAAiB,QAAQ,GAAY,GACvC,EAAiB,KAAK,OAS7B,OAAA,EAGH,aAAa,EAAkB,GAl8BjB,OAAA,EAAA,UAAA,OAAA,EAAA,YAm8BZ,MAAA,EAAc,KAAK,KAAM,OAAQ,GACjC,EAAa,KAAK,YAAY,IAAI,GAEnC,IAEL,EAAW,UAAY,OAAO,OAAO,GAAI,SAEnC,KAAK,sBAAsB,GAC5B,KAAA,sBAAsB,EAAY,GAClC,KAAA,gCAAgC,GAChC,KAAA,yBAAyB,MAG1B,sBAAsB,GAh9BR,OAAA,EAAA,UAAA,OAAA,EAAA,YAi9BZ,MAAA,EAAW,EAAW,SACR,KAAK,KAAM,OAAQ,GAElC,IAAA,IAAI,KAAY,EAAW,UACzB,IAAA,IAAI,KAAgB,EAAS,gBAAgB,OAAQ,CAClD,MAAA,EAAiB,EAAS,gBAAgB,IAAI,GAET,SAAvC,EAAe,WAAW,SACvB,KAAA,uBAAuB,EAAU,EAAU,IAEzC,EAAS,KAAK,OAAS,EAAS,KAAK,wBACtC,KAAK,wBAAwB,EAAU,EAAU,OAMzD,eAAe,GAl+BD,OAAA,EAAA,UAAA,OAAA,EAAA,YAm+Bb,IAAA,IAAI,KAAO,KAAK,aAAa,OAAQ,CAClC,MAAA,EAAc,KAAK,aAAa,IAAI,SACpC,KAAK,uBAAuB,GAC7B,KAAA,uBAAuB,EAAa,MAIvC,uBAAuB,GA1+BT,OAAA,EAAA,UAAA,OAAA,EAAA,YA2+Bb,IAAA,IAAI,KAAY,EAAY,UAC1B,IAAA,IAAI,KAAgB,EAAS,gBAAgB,OAAQ,CAClD,MAAA,EAAiB,EAAS,gBAAgB,IAAI,GAET,SAAvC,EAAe,WAAW,SACvB,KAAA,uBAAuB,EAAc,EAAU,IAE7C,EAAS,KAAK,OAAS,EAAS,KAAK,wBACtC,KAAK,wBAAwB,EAAc,EAAU,OAMnE,WAAW,EAAe,GAIjB,IAHH,IAAA,EAAU,IAAI,MACd,EAAgB,EAAQ,WAErB,IAAkB,GACvB,EAAQ,KAAK,GACb,EAAgB,EAAe,WAI1B,OAFP,EAAQ,KAAK,GAEN,EAGT,uBAAuB,EAAkB,EAAyB,GAC1D,MAAA,EAAc,EAAe,WAC7B,EAAQ,KAAK,KAAM,OAAQ,GAAY,KAAK,KAAM,OAAQ,GAAU,WAAQ,EAE5E,EAAO,EAAS,KAAK,cAAgB,KAAK,SAAS,EAAS,KAAK,cAAe,EAAU,GAAe,EAEzG,EAAe,EAAY,cAAc,SAC3C,GAAA,EACF,EAAa,YAAc,MAExB,CACC,IAAA,EAAe,EAAY,cAAc,SACxC,IACH,EAAe,SAAS,gBAAgB,6BAA8B,SACtE,EAAY,YAAY,IAE1B,EAAa,YAAc,GAwBzB,wBAAwB,EAAkB,EAAyB,GA9iCrD,OAAA,EAAA,UAAA,OAAA,EAAA,YA+iCZ,MAAA,EAAa,EAAe,WAE5B,EAAY,EAAS,KAAK,MAAQ,EAAS,KAAK,MAAQ,KAAK,SAAS,EAAS,KAAK,eAAiB,EAAU,GAEjH,GAAA,GAAa,EAAS,WAAa,EAAW,CAO5C,GANJ,EAAS,SAAW,EAEhB,EAAS,aACX,cAAc,EAAS,aAGrB,EAAS,KAAK,uBAAwB,CAClC,MAAA,EAAkB,SAAS,EAAS,KAAK,wBAE/C,EAAS,YAAc,YAAY,CAAC,EAAkB,KAC/C,KAAA,UAAU,EAAU,EAAgB,EAAU,EAAS,MACzD,MAAM,IACA,KAAA,YAAY,MAEF,IAAlB,EAAwB,EAAU,GAGnC,UACI,KAAK,UAAU,EAAU,EAAgB,EAAU,EAAS,MAEpE,MAAO,GACA,KAAA,YAAY,OAKvB,yBAAyB,GACjB,MAAA,EAAW,EAAW,SACtB,EAAc,KAAK,KAAM,OAAQ,GAElC,IAAA,IAAI,KAAY,EAAW,UAC1B,IAA6B,IAA7B,EAAS,KAAK,WACX,IAAA,IAAI,KAAgB,EAAS,gBAAgB,OAAQ,CAClD,MAAA,EAAiB,EAAS,gBAAgB,IAAI,GAE/C,KAAA,4BAA4B,EAAe,WAAY,IAMpE,4BAA4B,EAAgC,GACvC,KAAK,QAAQ,OAAQ,aAAc,KAAK,QAAQ,OAAQ,YAE3E,EAAW,iBAAiB,SAAS,QAAS,IACtC,MAAA,EAAkB,KAAK,WAAW,EAAY,cAC9C,EAAkB,KAAK,WAAW,EAAY,cAEhD,IAAA,KAAe,EAAY,WAAY,kBAC3C,aAAuB,EAAY,YAEnC,OAAO,KAAK,EAAY,YAAa,IAAI,IACvC,MAAgB,MAAQ,EAAY,WAAY,SAElD,GAAa,KAEb,oBAA8B,MAC9B,oBAA8B,IAE9B,EAAa,YAAc,IAI/B,uBAAuB,EAA+B,GAChD,GAAC,KAAK,UAAa,KAAK,SAAS,OAEhC,IAAA,IAAI,KAAY,EAAY,UAC1B,IAAA,IAAI,KAAgB,EAAS,gBAAgB,OAAQ,CAClD,MAAA,EAAiB,EAAS,gBAAgB,IAAI,GAE/C,KAAA,uBAAuB,EAAgB,IAKlD,sBAAsB,EAA6B,GAC7C,GAAC,KAAK,UAAa,KAAK,SAAS,OAEhC,IAAA,IAAI,KAAY,EAAW,UACzB,IAAA,IAAI,KAAgB,EAAS,gBAAgB,OAAQ,CAClD,MAAA,EAAiB,EAAS,gBAAgB,IAAI,GAEhD,EAAe,YACZ,KAAA,gBAAgB,EAAY,EAAgB,IAMzD,sBAAsB,GAChB,IAAA,EAAU,IAAI,MAEd,OAAC,GACI,MAAM,QAAQ,EAAY,OAAQ,EAAU,EAAY,MAC3B,iBAAtB,EAAY,MAAoB,EAAU,EAAY,MAAM,MAAM,KAAK,IAAI,GAAK,EAAE,QACzF,MAAM,QAAQ,EAAY,SAAU,EAAU,EAAY,QAC3B,iBAAxB,EAAY,UAAsB,EAAU,EAAY,QAAQ,MAAM,KAAK,IAAI,GAAK,EAAE,SAE/F,GANkB,GAS3B,gBAAgB,EAA6B,EAAqC,GAC1E,MAAA,EAAW,EAAW,SACtB,EAAa,EAAe,WAE9B,IAAA,EAAgB,IAAI,MACpB,GAAA,EAAS,KAAK,eAAgB,CAC1B,MAAA,EAAkB,KAAK,SAAS,EAAS,KAAK,eAAgB,EAAU,GAC9E,EAAgB,EAAkB,EAAgB,MAAM,KAAO,GAI7D,IAAA,EAAkB,IAAI,MACtB,GAAA,EAAS,KAAK,OAAQ,CAClB,MAAA,EAAc,KAAK,KAAM,OAAQ,GAEjC,EAAc,EAAS,KAAK,OAAO,KAAK,GAAgB,EAAY,QAAU,EAAY,OAChG,EAAgB,KAAK,sBAAsB,GAGtC,IAAA,IAAI,KAAoB,EAAS,KAAK,OACrC,IAAC,GAAgB,EAAiB,QAAU,EAAY,MAAQ,CAC5D,MAAA,EAAoB,KAAK,sBAAsB,GAChD,IAAA,IAAI,KAAmB,EACtB,GAAoB,EAAc,QAAQ,GAAmB,GAA2B,mBAApB,GAAyC,KAAK,SAAS,EAAY,IAAqB,EAAe,gBAAgB,QAAQ,GAAmB,GACxN,EAAgB,KAAK,SAOzB,GAAA,EAAW,UACR,IAAA,IAAI,KAAc,EAAM,MAAA,SAAS,EAAW,WAC1C,EAAc,QAAQ,GAAc,GAAsB,mBAAf,GAAoC,KAAK,SAAS,EAAY,IAAgB,EAAe,gBAAgB,QAAQ,GAAc,GACjL,EAAgB,KAAK,GAQxB,KAAA,cAAc,EAAU,EAAY,EAAiB,EAAS,KAAK,WAGnE,KAAA,WAAW,EAAU,EAAY,EAAe,EAAS,KAAK,WAGrE,uBAAuB,EAAqC,GACpD,MAAA,EAAW,EAAe,SAC1B,EAAa,EAAe,WAE9B,IAAA,EAAgB,IAAI,MACpB,GAAA,EAAS,KAAK,eAAgB,CAC1B,MAAA,EAAkB,KAAK,SAAS,EAAS,KAAK,eAAgB,EAAU,GAC9E,EAAgB,EAAkB,EAAgB,MAAM,KAAO,GAG3D,MAAA,EAAkB,IAAI,MACvB,IAAA,IAAI,KAAc,EAAM,MAAA,SAAS,EAAW,WAC1C,EAAc,QAAQ,GAAc,GAAsB,mBAAf,GAAoC,KAAK,SAAS,EAAY,IAAgB,EAAe,gBAAgB,QAAQ,GAAc,GACjL,EAAgB,KAAK,GAKpB,KAAA,cAAc,EAAU,EAAY,EAAiB,EAAS,KAAK,WAGnE,KAAA,WAAW,EAAU,EAAY,EAAe,EAAS,KAAK,WAGrE,gCAAgC,GAC1B,IAAC,KAAK,mBAAqB,KAAK,WAAa,KAAK,SAAS,OAAQ,OAEjE,MAAA,EAAW,EAAW,SACtB,EAAc,KAAK,KAAM,OAAQ,GAEnC,GAAC,EAEA,IAAA,IAAI,KAAY,EAAW,UACzB,IAAA,IAAI,KAAgB,EAAS,gBAAgB,OAAQ,CAClD,MACA,EADiB,EAAS,gBAAgB,IAAI,GAClB,WAE5B,EAAqB,KAAK,sBAAsB,KAAK,kBAEvD,KAAK,KAAM,OAAQ,KAAK,iBAAiB,SAC1C,EAAY,WAAY,gBAAkB,KAAK,KAAM,OAAQ,KAAK,iBAAiB,QAAS,MAExF,KAAA,WAAW,EAAU,EAAY,EAAoB,EAAS,WAI9D,KAAA,cAAc,EAAU,EAAY,EAAoB,EAAS,YAU9E,gBAAgB,GACL,OAAW,OAAX,QAAgC,IAAX,EAGhC,sBACS,YAAmH,KAAlH,KAAK,kBAAoB,KAAK,QAAQ,OAAQ,YAAa,QAAU,KAAK,QAAQ,OAAQ,YAAa,OAGjH,eAAe,GACT,IAAA,GAAU,EAEV,GAAC,EAAO,OAAU,EAAO,MAMvB,GAAA,EAAO,MACJ,EAAO,MAAM,SACX,KAAA,SAAS,SAAU,iFACxB,GAAU,OAGT,CACE,EAAO,QACL,KAAA,SAAS,SAAU,kDACxB,GAAU,GAGR,IAAA,EAAe,EAAO,MAAM,OAAO,GAAK,EAAE,UAAY,EAAE,UACxD,EAAa,SACV,KAAA,SAAS,SAAU,mFACxB,GAAU,IAGZ,EAAe,EAAO,MAAM,OAAO,KAAO,EAAE,QAAU,EAAE,UAAe,EAAE,SAAW,EAAE,YACrE,SACV,KAAA,SAAS,SAAU,kFACxB,GAAU,QA1BT,KAAA,QAAQ,cAAa,GACrB,KAAA,SAAS,SAAU,8DACxB,GAAU,EA6BL,OAAA,EAGT,WAAW,GACL,OAAC,EAEmB,iBAAT,EACb,IAAI,KAAK,GAAM,iBAAmB,EAAK,iBAHvB,GAMpB,SAAS,EAAc,EAAmB,GACpC,IACI,MAAA,EAAc,EAAW,KAAK,KAAM,OAAQ,QAAY,EAC1D,IAAA,EAAgB,EAAK,QAAQ,OAAS,OAAU,OAAY,EAIzD,OAHP,EAAgB,EAAa,QAAQ,WAAa,EAAK,YAAyB,KACnE,IAAI,SAAS,SAAU,WAAY,OAAQ,SAAU,UAAW,EAC9D,CAAK,EAAa,KAAK,KAAM,OAAQ,KAAK,KAAM,KAAK,QAAQ,OAAS,GAGvF,MAAO,KAUT,eAAe,GACb,EAAE,kBACgB,KACR,SAAS,cADD,KACyB,eADzB,KACmD,UADnD,KACwE,UADxE,KAC6F,MAGjH,cAAc,GACZ,EAAE,kBACgB,KACR,SAAS,cADD,KACyB,eADzB,KACmD,SADnD,KACuE,UADvE,KAC4F,MAGhH,cAAc,EAAqC,EAAkB,EAAmB,GAClF,IAAA,EAAa,KAAK,YAAY,IAAI,GAChC,MAAA,EAAiB,GAAc,EAAW,UAAU,KAAK,QAAsC,IAAzB,EAAS,KAAK,QACpF,EAAa,EAAK,OAAS,EAAQ,EAAiB,EAAe,UAAO,EAE5E,IAAC,IAAS,EAIZ,YAHI,IAAgC,IAAnB,EAAK,WACf,KAAA,QAAQ,aAAa,IAK1B,IAAA,EAAqB,EAEnB,MAAA,EAAa,EAAe,WAE5B,EAAU,MAAM,QAAQ,EAAW,QAAU,EAAW,OAAS,CAAC,EAAW,QAC9E,IAAA,IAAI,KAAU,EACb,GAAA,EAAO,SAAW,EAAO,iBAAkB,CACvC,MAAA,EAAgB,KAAK,iBAAiB,EAAQ,EAAU,GAEtD,OAAA,KAAK,UAAU,IAChB,IAAA,YACE,KAAA,qBAAqB,EAAQ,EAAU,GAC5C,MAEF,QACO,KAAA,yBAAyB,EAAQ,EAAU,GAIpD,IAIC,GACC,IAAsC,IAAzB,EAAW,WACrB,KAAA,QAAQ,aAAa,GAKhC,qBAAqB,EAA6B,EAAmB,GAC7D,MAAA,EAAc,EAAiB,EAAe,gBAAa,EAE3D,EAAgB,KAAK,iBAAiB,EAAQ,EAAU,GACxD,EAAa,KAAK,cAAc,EAAQ,EAAU,GAEhD,OAAA,KAAK,WAAW,IACjB,IAAA,eACC,GAAA,EAAY,CACR,MAAA,EAAU,EAAW,QAEtB,IAAA,IAAI,KAAkB,EAAW,SAAU,CACxC,MAAA,EAAkB,EAAgB,IAAK,sBAAsB,OAC/D,IACE,KAAK,SAAS,EAAiB,EAAQ,KACpC,KAAA,YAAY,EAAiB,EAAQ,IACrC,KAAA,SAAS,EAAiB,EAAQ,KAEhC,KAAK,SAAS,EAAiB,EAAQ,KACzC,KAAA,YAAY,EAAiB,EAAQ,IACrC,KAAA,SAAS,EAAiB,EAAQ,KAGlC,KAAA,SAAS,EAAiB,EAAW,iBAKlD,MAEG,IAAA,gBACG,MAAA,EAAU,EAAW,QACrB,EAAiB,GAAW,KAAK,UAAU,IAAI,GAEjD,IACF,MAAM,KAAK,KAAK,UAAU,QAAQ,IAAK,IAC/B,MAAA,EAAW,KAAK,UAAU,IAAI,GAE/B,EAAS,UAA6C,SAAhC,EAAS,IAAK,MAAM,UAC7C,EAAS,IAAK,MAAM,QAAU,UAIlC,EAAe,IAAK,MAAM,QAAU,SAEtC,MAEG,IAAA,eACC,GAAA,EAAW,SAAU,CACjB,MAAA,EAAa,GAEf,GAAA,EAAW,WACR,IAAA,IAAI,KAAa,EAAW,WAAY,CACrC,MAAA,EAAiB,KAAK,eAAe,EAAW,EAAU,GAChE,EAAW,KAAK,CAAE,KAAM,EAAU,UAAW,MAAO,IAIlD,MAAA,EAAQ,KAAK,eAAe,EAAY,EAAU,GACnD,KAAA,YAAY,EAAW,SAAU,EAAO,GAAY,KAUjE,eAAe,EAA6B,EAAmB,GACzD,IAAA,EAAQ,EAAO,MAIZ,OAHH,EAAO,iBACT,EAAQ,KAAK,SAAS,EAAO,eAAgB,EAAU,IAElD,EAGT,YAAY,EAAsB,EAAY,EAAiB,GAGzD,GAFC,KAAA,UAAU,IAAI,EAAc,GAE7B,KAAK,KAAM,OAAQ,GAAe,CAC/B,KAAA,KAAM,OAAQ,GAAc,MAAQ,EAEpC,IAAA,IAAI,KAAa,EACf,KAAA,KAAM,OAAQ,GAAc,WAAY,EAAU,MAAQ,EAAU,MAIxE,IAAA,IAAI,KAAqB,MAAM,KAAK,KAAK,UAAU,QAAS,CACzD,MAAA,EAAgB,KAAK,KAAM,OAAQ,GACrC,IACF,EAAc,aAAe,IAAI,MAKhC,GACE,KAAA,0BAQT,yBAAyB,EAA6B,EAAmB,GACjE,MAAA,EAAa,EAAiB,EAAe,gBAAa,EAE1D,EAAgB,KAAK,iBAAiB,EAAQ,EAAU,GACxD,EAAa,KAAK,cAAc,EAAQ,EAAU,IAEnD,EAAW,WAAa,IAC3B,EAAW,UAAY,GAGpB,KAAA,KAAM,YAAY,KAAK,UAAU,GAAgB,KAAK,WAAW,GAAgB,GAGxF,cAAc,EAA6B,EAAmB,GACxD,IAAA,EAAO,EAAO,KAAO,EAAO,KAAO,GACnC,GAAA,EAAO,cAAe,CAClB,MAAA,EAAS,KAAK,SAAS,EAAO,cAAe,EAAU,GAC7D,EAA0B,iBAAX,EAAuB,KAAK,MAAM,GAAU,EAEtD,OAAA,EAGT,iBAAiB,EAA6B,EAAmB,GAC3D,IAAA,EAAU,EAAO,QAId,OAHH,EAAO,mBACT,EAAU,KAAK,SAAS,EAAO,iBAAkB,EAAU,IAEtD,EAGT,UAAU,GACD,OAAA,EAAc,MAAM,KAAK,GAGlC,WAAW,GACF,OAAA,EAAc,MAAM,KAAK,GAOlC,kBAAkB,EAAuB,EAAiB,EAAiB,EAAgB,GAGpF,GAFA,KAAA,QAAQ,cAAa,GAErB,EAAiB,cAAc,QAAQ,iBAAmB,EACxD,KAAA,SAAS,SAAU,oDAErB,CACG,MAAA,EAAU,CACd,EACA,QAAU,EACV,SAAW,EAAS,aAAe,EACnC,UAAY,KAAK,UAAU,IAC3B,KAAK,QAEF,KAAA,SAAS,QAAS,GAGlB,OAAA,EAGT,YAAY,GACN,IAAA,EAAU,QACO,iBAAV,IACT,EAAU,GAER,EAAM,MACR,KAAa,EAAM,QAEZ,EAAM,UACb,KAAa,EAAM,WAGhB,KAAA,IAAI,QAAS,GAGpB,SAAS,EAAc,GAChB,KAAA,IAAI,WAAY,KAAQ,KAG/B,WAAW,EAAc,GAClB,KAAA,IAAI,aAAc,KAAQ,KAGjC,QAAQ,EAAc,GACf,KAAA,IAAI,UAAW,KAAQ,KAG9B,SAAS,EAAc,GAChB,KAAA,IAAI,WAAY,KAAQ,KAG/B,IAAI,EAAe,GACX,MAAA,KAAU,KAAK,WAAW,IAAI,SAAW,EAAM,iBAAiB,IAElE,GAAA,KAAK,QAAQ,QAAW,KAAK,QAAQ,OAAQ,YACvC,OAAA,KAAK,QAAQ,OAAQ,aACtB,IAAA,QACH,QAAQ,MAAM,GACd,MAEG,IAAA,UACH,QAAQ,KAAK,GACb,MAEG,IAAA,QACH,QAAQ,KAAK,GACb,MAEF,QACE,QAAQ,IAAI,GAKZ,MAAA,EAAmB,KAAK,WAAa,KAAK,UAAU,QAAW,KAAK,UAAU,QAAQ,IAAU,EAEjG,IAAC,KAAK,QAAQ,QAAsB,UAAV,GAAuB,EAAkB,CAEhE,MAAA,EAAO,KAAK,QAAQ,KAAkB,cAAc,QACpD,EAAkB,SAAS,cAAc,MAC1C,KAAA,SAAS,EAAiB,GAC/B,EAAgB,YAAc,EAC9B,EAAI,cAAc,MAAO,QAAQ,GACjC,EAAI,MAAM,QAAU,UArmDJ,QAAA,UAAA;;ACH2B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EALjD,IAAA,EAAA,QAAA,6BAKM,MAAO,UAAyB,YAUpC,cACE,QAVF,KAAA,oBAAqB,EACrB,KAAA,mBAAoB,EAMpB,KAAA,WAAqB,EAKd,KAAA,MAAM,eAEX,OAAO,iBAAiB,KAAM,KAAK,YAE9B,KAAA,aAAa,CAAE,KAAM,SAG5B,MAAM,GACC,KAAK,UAEL,KAAK,QAAgB,OAAW,KAAK,QAAgB,QAAa,KAAK,QAAgB,OAAe,QACzG,QAAQ,IAAI,GAIhB,oBACO,KAAA,MAAM,qBAGT,iBACG,KAAA,MAAM,kBAEL,MAAA,EAAO,KAEN,MAAA,CACL,OAAQ,CACN,IAAI,GACF,EAAK,UAAU,KAEhB,KAAM,CACP,IAAI,GACF,EAAK,QAAQ,MAMrB,UAAU,GACH,KAAA,MAAM,aAEN,KAAA,QAAU,EAEV,KAAA,QAAQ,GAER,KAAA,cAAa,GAGpB,QAAQ,GACD,KAAA,MAAM,WAEN,KAAK,SAAY,KAAK,cAEtB,KAAA,kBAAkB,EAAM,KAAK,SAE7B,KAAA,UAAW,YAAY,IAG9B,kBAAkB,EAAW,GAGvB,GAFC,KAAA,MAAM,qBAEP,KAAK,oBAAsB,KAAK,kBAAmB,OAElD,KAAA,oBAAqB,EAEpB,MAAA,EAAU,CACd,KAAM,KAAK,WACX,QAAS,KAAK,iBACd,KAAM,EACN,OAAS,GAAW,EAAe,QAAW,EAC9C,aAAc,KAAK,aAAa,KAAK,MACrC,aAAc,KAAK,aAAa,KAAK,OAGlC,KAAA,UAAY,IAAI,EAAJ,UAAc,GAE1B,KAAA,oBAAqB,EACrB,KAAA,mBAAoB,EAG3B,QAAQ,GACD,KAAA,MAAM,WAEL,MAAA,EAAO,KAAK,WAEd,EAAK,WAAW,EAAK,YAAY,EAAK,WAEpC,MAAA,EAAQ,SAAS,cAAc,SACrC,EAAM,YAAc,KAAK,WACzB,EAAK,YAAY,GAEX,MAAA,EAAY,KAAK,wBAEjB,EAAU,SAAS,cAAc,sBACvC,EAAU,YAAY,GAEhB,MAAA,EAAY,SAAS,cAAc,OACzC,EAAU,GAAK,YACf,EAAU,YAAY,GAEhB,MAAA,EAAM,SAAS,cAAc,OACnC,EAAI,GAAK,MACT,EAAU,YAAY,GAEhB,MAAA,EAAO,SAAS,cAAc,MACpC,EAAI,YAAY,GAEV,MAAA,EAAY,SAAS,cAAc,KACzC,EAAU,aAAa,OAAQ,KAC/B,EAAU,KAAO,YACjB,EAAI,YAAY,GAChB,EAAU,QAAU,MAClB,EAAK,UAAY,GACjB,EAAI,MAAM,QAAU,SAGjB,KAAA,IAAM,EACN,KAAA,QAAU,EACV,KAAA,iBAAmB,EAG1B,wBACQ,MAAA,EAAY,SAAS,cAAc,OAIlC,OAHP,EAAU,GAAK,YACV,KAAA,WAAY,YAAY,GAEtB,EAGT,WAGS,OAFF,KAAA,MAAM,YAEJ,o5BA2DT,aAAa,GACN,KAAA,KAAK,iBAAkB,CAAE,SAAU,IAG1C,aAAa,GACN,KAAA,UAAY,EAEb,KAAK,UACH,KAAK,WACF,KAAA,QAAQ,aAAa,SAAU,IAC/B,KAAA,QAAQ,MAAM,QAAU,iBAGxB,KAAA,QAAQ,gBAAgB,UACxB,KAAA,QAAQ,MAAM,QAAU,SAKnC,SAAS,GACP,QAAQ,MAAM,GAEV,KAAK,MACF,KAAA,IAAI,cAAc,MAAO,6BAA6B,UACtD,KAAA,IAAI,MAAM,QAAU,SAI7B,KAAK,EAAc,EAAa,GAC9B,EAAU,GAAW,GACrB,EAAU,MAAA,EAA2C,GAAK,EACpD,MAAA,EAAQ,IAAI,MAAM,EAAM,CAC5B,aAA6B,IAApB,EAAQ,SAA+B,EAAQ,QACxD,WAAY,QAAQ,EAAQ,YAC5B,cAA+B,IAArB,EAAQ,UAAgC,EAAQ,WAKrD,OAHN,EAAc,OAAS,GACX,EAAQ,MAAQ,MACxB,cAAc,GACZ,GAlPsC,QAAA,iBAAA;;ACDjD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EALA,IAAA,EAAA,QAAA,uBAEM,MAAO,UAAuB,EAA9B,kBAGN,QAAA,eAAA,EAAA,eAAe,OAAO,kBAAmB","file":"floorplan-panel.894fd844.js","sourceRoot":"..\\src","sourcesContent":["import { Hass } from './hass';\r\nimport { Floorplan as Config } from './floorplan-config';\r\n\r\nexport namespace FloorplanInfo {\r\n\r\n  export class PageInfo {\r\n    index?: number;\r\n    config?: Config.PageConfig;\r\n    svg?: SVGGraphicsElement;\r\n    isMaster: boolean = false;\r\n    isDefault: boolean = false;\r\n  }\r\n\r\n  export class ElementInfo {\r\n    ruleInfos = new Array<RuleInfo>();\r\n  }\r\n\r\n  export class SvgElementInfo {\r\n    constructor(\r\n      public entityId: string,\r\n      public svg: SVGGraphicsElement | undefined,\r\n      public svgElement: SVGGraphicsElement,\r\n      public originalSvgElement: SVGGraphicsElement,\r\n      public originalClasses: Array<string>,\r\n      public originalBBox: DOMRect,\r\n      public originalClientRect: ClientRect | DOMRect) {\r\n    }\r\n  }\r\n\r\n  export class RuleInfo {\r\n    svgElementInfos = new Map<string, SvgElementInfo>();\r\n    imageUrl?: string;\r\n    imageLoader: any;\r\n    propagate: boolean = false;\r\n\r\n    constructor(public rule: Config.RuleConfig) {\r\n      this.rule = rule;\r\n    }\r\n  }\r\n\r\n  export class EntityInfo {\r\n    lastState?: Hass.HassEntityState;\r\n    entityId?: string;\r\n    ruleInfos = new Array<RuleInfo>();\r\n  }\r\n}","import { Floorplan } from './floorplan/floorplan';\r\n\r\nexport class FullyKiosk {\r\n  constructor(private floorplan: Floorplan) {\r\n  }\r\n\r\n  init() {\r\n  }\r\n}","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  if (typeof output === 'function') {\n    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  } else {\n    return loadAll(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  }\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    && c !== CHAR_COLON\n    && c !== CHAR_SHARP;\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = state.condenseFlow ? '\"' : '';\n\n    if (index !== 0) pairBuffer += ', ';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","import * as yaml from 'js-yaml';\r\n\r\nexport namespace Utils {\r\n\r\n  /***************************************************************************************************************************/\r\n  /* General helper functions\r\n  /***************************************************************************************************************************/\r\n\r\n  export function parseYaml(yamlText: string): any {\r\n    return yaml.safeLoad(yamlText);\r\n  }\r\n\r\n  export async function fetchText(resourceUrl: string, useCache: boolean = true): Promise<string> {\r\n    resourceUrl = useCache ? resourceUrl : cacheBuster(resourceUrl);\r\n\r\n    const request = new Request(resourceUrl, {\r\n      cache: useCache ? 'reload' : 'no-cache',\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n        return text;\r\n      }\r\n      else {\r\n        throw new Error(`Error fetching resource`); //`\r\n      }\r\n    }\r\n    catch (error) {\r\n      throw new URIError(`${resourceUrl}: ${error.message}`); //`\r\n    }\r\n  }\r\n\r\n  export async function fetchImage(resourceUrl: string, useCache: boolean = true): Promise<string> {\r\n    resourceUrl = useCache ? resourceUrl : cacheBuster(resourceUrl);\r\n\r\n    const request = new Request(resourceUrl, {\r\n      cache: useCache ? 'reload' : 'no-cache',\r\n      headers: new Headers({ 'Content-Type': 'text/plain; charset=x-user-defined' }),\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        const result = await response.arrayBuffer();\r\n        return `data:image/jpeg;base64,${arrayBufferToBase64(result)}`; //`\r\n      }\r\n      else {\r\n        throw new Error(`Error fetching resource`); //`\r\n      }\r\n    }\r\n    catch (error) {\r\n      throw new URIError(`${resourceUrl}: ${error.message}`); //`\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Utility functions\r\n  /***************************************************************************************************************************/\r\n\r\n  export function getArray(list: any): Array<any> {\r\n    return Array.isArray(list) ? list : Object.keys(list).map(key => list[key]);\r\n  }\r\n\r\n  export function arrayBufferToBase64(buffer: ArrayBufferLike): string {\r\n    let binary = '';\r\n    const bytes = [].slice.call(new Uint8Array(buffer));\r\n\r\n    bytes.forEach((b) => binary += String.fromCharCode(b));\r\n\r\n    let base64 = window.btoa(binary);\r\n\r\n    // IOS / Safari will not render base64 images unless length is divisible by 4\r\n    while ((base64.length % 4) > 0) {\r\n      base64 += '=';\r\n    }\r\n\r\n    return base64;\r\n  }\r\n\r\n  export function cacheBuster(url: string): string {\r\n    return `${url}${(url.indexOf('?') >= 0) ? '&' : '?'}_=${new Date().getTime()}`; //`\r\n  }\r\n\r\n  export function equal(a: any, b: any): boolean {\r\n    if (a === b) return true;\r\n\r\n    let arrA = Array.isArray(a)\r\n      , arrB = Array.isArray(b)\r\n      , i;\r\n\r\n    if (arrA && arrB) {\r\n      if (a.length != b.length) return false;\r\n      for (i = 0; i < a.length; i++)\r\n        if (!equal(a[i], b[i])) return false;\r\n      return true;\r\n    }\r\n\r\n    if (arrA != arrB) return false;\r\n\r\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n      const keys = Object.keys(a);\r\n      if (keys.length !== Object.keys(b).length) return false;\r\n\r\n      const dateA = a instanceof Date\r\n        , dateB = b instanceof Date;\r\n      if (dateA && dateB) return a.getTime() == b.getTime();\r\n      if (dateA != dateB) return false;\r\n\r\n      const regexpA = a instanceof RegExp\r\n        , regexpB = b instanceof RegExp;\r\n      if (regexpA && regexpB) return a.toString() == b.toString();\r\n      if (regexpA != regexpB) return false;\r\n\r\n      for (i = 0; i < keys.length; i++)\r\n        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n      for (i = 0; i < keys.length; i++)\r\n        if (!equal(a[keys[i]], b[keys[i]])) return false;\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}","import { Hass } from './hass';\r\nimport { Floorplan as Options } from './floorplan-options';\r\nimport { Floorplan as Config } from './floorplan-config';\r\nimport { FloorplanInfo as Info } from './floorplan-info';\r\nimport { FullyKiosk } from '../fully-kiosk';\r\nimport { debounce } from 'debounce';\r\nimport * as yaml from 'js-yaml';\r\nimport { Utils } from '../utils';\r\n\r\nexport class Floorplan {\r\n  version = '1.1.13';\r\n  hass?: Hass.HassObject;\r\n  pageInfos = new Map<string, Info.PageInfo>();\r\n  entityInfos = new Map<string, any>();\r\n  elementInfos = new Map<string, any>();\r\n  cssRules = new Array<any>();\r\n  lastMotionConfig?: Config.LastMotionConfig;\r\n  logLevels = new Array<string>();\r\n  variables = new Map<string, any>();\r\n  fullyKiosk?: FullyKiosk;\r\n\r\n  handleEntitiesDebounced = debounce(this.handleEntities, 100, true);\r\n\r\n  isLoading = false;\r\n  isLoaded = false;\r\n\r\n  constructor(private options: Options.FloorplanOptions) {\r\n    window.onerror = this.handleWindowError.bind(this);\r\n  }\r\n\r\n  hassChanged(hass: Hass.HassObject): void {\r\n    this.hass = hass;\r\n\r\n    this.loadOnce();\r\n\r\n    this.handleEntitiesDebounced(); // use debounced wrapper\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Startup\r\n  /***************************************************************************************************************************/\r\n\r\n  async loadOnce(): Promise<void> {\r\n    if (this.isLoading || this.isLoaded) return;\r\n\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      const config = await this.loadConfig(this.options.config!);\r\n      this.getLogLevels(config);\r\n      this.logInfo('VERSION', `Floorplan v${this.version}`) //`;\r\n\r\n      if (!this.validateConfig(config)) {\r\n        this.options.setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      this.options.config = config; // set resolved config as effective config\r\n\r\n      //await this.loadLibraries()\r\n      //this.initFullyKiosk();\r\n\r\n      if (this.options.config!.pages) {\r\n        await this.initMultiPage();\r\n      }\r\n      else {\r\n        await this.initSinglePage();\r\n      }\r\n\r\n      this.isLoaded = true;\r\n      this.isLoading = false;\r\n    }\r\n    catch (error) {\r\n      this.isLoaded = true;\r\n      this.isLoading = false;\r\n\r\n      this.options.setIsLoading(false);\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async initMultiPage(): Promise<void> {\r\n    try {\r\n      await this.loadPages();\r\n      this.options.setIsLoading(false);\r\n      this.initPageDisplay();\r\n      this.initVariables();\r\n      this.initStartupActions();\r\n      await this.handleEntities(true);\r\n    }\r\n    catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  async initSinglePage(): Promise<void> {\r\n    try {\r\n      const imageUrl = this.getBestImage(this.options.config!);\r\n      const svg = await this.loadFloorplanSvg(imageUrl);\r\n      this.options.config!.svg = svg;\r\n      await this.loadStyleSheet(this.options.config!.stylesheet)\r\n      this.initFloorplan(svg, this.options.config!)\r\n      this.options.setIsLoading(false);\r\n      this.initPageDisplay();\r\n      this.initVariables();\r\n      this.initStartupActions();\r\n      await this.handleEntities(true);\r\n    }\r\n    catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  getLogLevels(config: Config.FloorplanConfig): void {\r\n    if (!config.log_level) return;\r\n\r\n    const allLogLevels = {\r\n      error: ['error'],\r\n      warning: ['error', 'warning'],\r\n      info: ['error', 'warning', 'info'],\r\n      debug: ['error', 'warning', 'info', 'debug'],\r\n    };\r\n\r\n    const logLevels = (allLogLevels as any)[config.log_level.toLowerCase()];\r\n\r\n    this.logLevels = logLevels ? logLevels : [];\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Loading resources\r\n  /***************************************************************************************************************************/\r\n\r\n  async loadConfig(config: Config.FloorplanConfig | string): Promise<Config.ConfigBase> {\r\n    if (typeof config === 'string') {\r\n      const targetConfig = await Utils.fetchText(config)\r\n      const configYaml = yaml.safeLoad(targetConfig);\r\n      return configYaml;\r\n    }\r\n    else {\r\n      return config;\r\n    }\r\n  }\r\n\r\n  async loadLibraries(): Promise<void> {\r\n    if (this.isOptionEnabled(this.options.config!.pan_zoom)) {\r\n      await this.loadScript('/local/floorplan/lib/svg-pan-zoom.min.js', true);\r\n    }\r\n\r\n    if (this.isOptionEnabled(this.options.config!.fully_kiosk)) {\r\n      await this.loadScript('/local/floorplan/lib/fully-kiosk.js', false);\r\n    }\r\n  }\r\n\r\n  loadScript(scriptUrl: string, useCache: boolean): Promise<void> {\r\n    if (!scriptUrl) return Promise.resolve();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n      script.src = useCache ? scriptUrl : Utils.cacheBuster(scriptUrl);\r\n      script.onload = () => resolve();\r\n      script.onerror = (err) => {\r\n        reject(new URIError(`${(err as any).target.src}`)); //`\r\n      };\r\n\r\n      this.options.root!.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async loadPages(): Promise<void> {\r\n    for (let pageConfigUrl of this.options.config!.pages) {\r\n      await this.loadPageConfig(pageConfigUrl, this.options.config!.pages.indexOf(pageConfigUrl));\r\n    }\r\n\r\n    const pageInfos = Array.from(this.pageInfos.keys()).map(key => this.pageInfos.get(key));\r\n    pageInfos.sort((a, b) => a!.index! - b!.index!); // sort ascending\r\n\r\n    const masterPageInfo = pageInfos.find(pageInfo => (pageInfo!.config!.master_page !== undefined));\r\n    if (masterPageInfo) {\r\n      masterPageInfo.isMaster = true;\r\n    }\r\n\r\n    const defaultPageInfo = pageInfos.find(pageInfo => (pageInfo!.config!.master_page === undefined));\r\n    if (defaultPageInfo) {\r\n      defaultPageInfo.isDefault = true;\r\n    }\r\n\r\n    await this.loadPageFloorplanSvg(masterPageInfo!, masterPageInfo!) // load master page first\r\n\r\n    const nonMasterPages = pageInfos.filter(pageInfo => pageInfo !== masterPageInfo);\r\n    for (let pageInfo of nonMasterPages) {\r\n      await this.loadPageFloorplanSvg(pageInfo!, masterPageInfo!);\r\n    }\r\n  }\r\n\r\n  async loadPageConfig(pageConfigUrl: string, index: number): Promise<Info.PageInfo> {\r\n    const pageConfig = await this.loadConfig(pageConfigUrl) as Config.PageConfig;\r\n    const pageInfo = this.createPageInfo(pageConfig);\r\n    pageInfo.index = index;\r\n    return pageInfo;\r\n  }\r\n\r\n  async loadPageFloorplanSvg(pageInfo: Info.PageInfo, masterPageInfo: Info.PageInfo): Promise<void> {\r\n    const imageUrl = this.getBestImage(pageInfo.config!);\r\n    const svg = await this.loadFloorplanSvg(imageUrl, pageInfo, masterPageInfo)\r\n    svg.id = pageInfo.config!.page_id; // give the SVG an ID so it can be styled (i.e. background color)\r\n    pageInfo.svg = svg;\r\n    await this.loadStyleSheet(pageInfo.config!.stylesheet)\r\n    this.initFloorplan(pageInfo.svg, pageInfo.config!);\r\n  }\r\n\r\n  getBestImage(config: Config.ConfigBase): string {\r\n    let imageUrl = '';\r\n\r\n    if (typeof config.image === 'string') {\r\n      imageUrl = config.image;\r\n    }\r\n    else {\r\n      if (config.image && config.image.sizes) {\r\n        config.image.sizes.sort((a, b) => b.min_width - a.min_width); // sort descending\r\n        for (let pageSize of config.image.sizes) {\r\n          if (screen.width >= pageSize.min_width) {\r\n            imageUrl = pageSize.location;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return imageUrl;\r\n  }\r\n\r\n  createPageInfo(pageConfig: Config.PageConfig): Info.PageInfo {\r\n    const pageInfo = { config: pageConfig } as Info.PageInfo;\r\n\r\n    // Merge the page's rules with the main config's rules\r\n    if (pageInfo.config!.rules && this.options.config!.rules) {\r\n      pageInfo.config!.rules = pageInfo.config!.rules.concat(this.options.config!.rules);\r\n    }\r\n\r\n    this.pageInfos.set(pageInfo.config!.page_id, pageInfo);\r\n\r\n    return pageInfo;\r\n  }\r\n\r\n  async loadStyleSheet(stylesheetUrl: string): Promise<void> {\r\n    if (!stylesheetUrl) return;\r\n\r\n    const stylesheet = await Utils.fetchText(stylesheetUrl);\r\n    const link = document.createElement('style');\r\n    link.type = 'text/css';\r\n    (link as any).innerHTML = stylesheet;\r\n    this.options.root!.appendChild(link);\r\n\r\n    const cssRules = Utils.getArray((link.sheet as any).cssRules);\r\n    this.cssRules = this.cssRules.concat(cssRules);\r\n  }\r\n\r\n  async loadFloorplanSvg(imageUrl: string, pageInfo?: Info.PageInfo, masterPageInfo?: any): Promise<SVGGraphicsElement> {\r\n    const svgText = await Utils.fetchText(imageUrl);\r\n    const svgContainer = document.createElement('div');\r\n    svgContainer.innerHTML = svgText;\r\n    const svg = svgContainer.querySelector(\"svg\") as SVGGraphicsElement;\r\n\r\n    if (pageInfo) {\r\n      svg.setAttribute('id', pageInfo.config!.page_id);\r\n    }\r\n\r\n    svg.setAttribute('height', '100%');\r\n    svg.setAttribute('width', '100%');\r\n    svg.style.height = '100%';\r\n    svg.style.width = '100%';\r\n    //svg.style.position = this.isPanel ? 'absolute' : 'relative'); TODO: IsPanel???\r\n    svg.style.cursor = 'default';\r\n    svg.style.opacity = '0';\r\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\r\n\r\n    if (pageInfo && masterPageInfo) {\r\n      const masterPageId = masterPageInfo.config!.page_id;\r\n      const contentElementId = masterPageInfo.config!.master_page.content_element;\r\n\r\n      if (pageInfo.config!.page_id === masterPageId) {\r\n        this.options.element!.appendChild(svg);\r\n      }\r\n      else {\r\n        const masterPageElement = this.options.element!.querySelector('#' + masterPageId);\r\n        const contentElement = this.options.element!.querySelector('#' + contentElementId);\r\n\r\n        const height = Number.parseFloat(svg.getAttribute('height')!);\r\n        const width = Number.parseFloat(svg.getAttribute('width')!);\r\n        if (!svg.getAttribute('viewBox')) {\r\n          svg.setAttribute('viewBox', `0 0 ${width} ${height}`); //`\r\n        }\r\n\r\n        svg.setAttribute('preserveAspectRatio', 'xMinYMin meet');\r\n        svg.setAttribute('height', contentElement!.getAttribute('height')!);\r\n        svg.setAttribute('width', contentElement!.getAttribute('width')!);\r\n        svg.setAttribute('x', contentElement!.getAttribute('x')!);\r\n        svg.setAttribute('y', contentElement!.getAttribute('y')!);\r\n\r\n        contentElement!.parentElement!.appendChild(svg);\r\n      }\r\n    }\r\n    else {\r\n      this.options.element!.appendChild(svg);\r\n    }\r\n\r\n    // TODO: Re-enable???\r\n    // Enable pan / zoom if enabled in config\r\n    /*\r\n    if (this.isOptionEnabled(this.options.config!.pan_zoom)) {\r\n      svgPanZoom(svg, {\r\n        zoomEnabled: true,\r\n        controlIconsEnabled: true,\r\n        fit: true,\r\n        center: true,\r\n      });\r\n    }\r\n    */\r\n\r\n    return svg;\r\n  }\r\n\r\n  async loadImage(imageUrl: string, svgElementInfo: Info.SvgElementInfo, entityId: string, rule: Config.RuleConfig): Promise<SVGGraphicsElement> {\r\n    if (imageUrl.toLowerCase().indexOf('.svg') >= 0) {\r\n      return await this.loadSvgImage(imageUrl, svgElementInfo, entityId, rule);\r\n    }\r\n    else {\r\n      return await this.loadBitmapImage(imageUrl, svgElementInfo, entityId, rule);\r\n    }\r\n  }\r\n\r\n  async loadBitmapImage(imageUrl: string, svgElementInfo: Info.SvgElementInfo, entityId: string, rule: Config.RuleConfig): Promise<SVGGraphicsElement> {\r\n    const imageData = await Utils.fetchImage(imageUrl);\r\n    this.logDebug('IMAGE', `${entityId} (setting image: ${imageUrl})`); //`\r\n\r\n    let svgElement = svgElementInfo.svgElement!; // assume the target element already exists\r\n\r\n    if (svgElement.nodeName !== 'image') {\r\n      svgElement = this.createImageElement(svgElementInfo.originalSvgElement) as SVGGraphicsElement;\r\n\r\n      this.querySelectorAll(svgElement, '*', true).forEach((element) => {\r\n        const titleElem = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n        element.appendChild(titleElem);\r\n        (element as SVGGraphicsElement).onclick = this.onEntityClick.bind({ instance: this, svgElementInfo: svgElementInfo, entityId: entityId, rule: rule });\r\n        (element as SVGGraphicsElement).style.cursor = 'pointer';\r\n        this.addClass(element, 'floorplan-item');\r\n      });\r\n\r\n      svgElementInfo.svgElement = this.replaceElement(svgElementInfo.svgElement!, svgElement);\r\n    }\r\n\r\n    const existingHref = svgElement.getAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href');\r\n    if (existingHref !== imageData) {\r\n      svgElement.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageUrl);\r\n    }\r\n\r\n    return svgElement;\r\n  }\r\n\r\n  async loadSvgImage(imageUrl: string, svgElementInfo: Info.SvgElementInfo, entityId: string, rule: Config.RuleConfig): Promise<SVGGraphicsElement> {\r\n    const svgText = await Utils.fetchText(imageUrl, true);\r\n    this.logDebug('IMAGE', `${entityId} (setting image: ${imageUrl})`); //`\r\n\r\n    const svgContainer = document.createElement('div');\r\n    svgContainer.innerHTML = svgText;\r\n    const svg = svgContainer.querySelector(\"svg\") as SVGGraphicsElement;\r\n\r\n    const height = Number.parseFloat(svg.getAttribute('height')!);\r\n    const width = Number.parseFloat(svg.getAttribute('width')!);\r\n    if (!svg.getAttribute('viewBox')) {\r\n      svg.setAttribute('viewBox', `0 0 ${width} ${height}`); //`\r\n    }\r\n\r\n    svg.id = svgElementInfo.svgElement!.id;\r\n    svg.setAttribute('preserveAspectRatio', 'xMinYMin meet');\r\n    svg.setAttribute('height', svgElementInfo.originalBBox!.height.toString());\r\n    svg.setAttribute('width', svgElementInfo.originalBBox!.width.toString());\r\n    svg.setAttribute('x', svgElementInfo.originalBBox!.x.toString());\r\n    svg.setAttribute('y', svgElementInfo.originalBBox!.y.toString());\r\n\r\n    this.querySelectorAll(svg, '*', true).forEach((element) => {\r\n      const titleElem = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n      element.appendChild(titleElem);\r\n      (element as SVGGraphicsElement).onclick = this.onEntityClick.bind({ instance: this, svgElementInfo: svgElementInfo, entityId: entityId, rule: rule });\r\n      (element as SVGGraphicsElement).style.cursor = 'pointer';\r\n      this.addClass(element, 'floorplan-item');\r\n    });\r\n\r\n    svgElementInfo.svgElement = this.replaceElement(svgElementInfo.svgElement!, svg);\r\n\r\n    return svg;\r\n  }\r\n\r\n  querySelectorAll(element: Element, selector: string, includeSelf: boolean): Array<Element> {\r\n    let elements = Array.from(element.querySelectorAll(selector).values());\r\n    elements = includeSelf ? elements.concat(element) : elements;\r\n    return elements;\r\n  }\r\n\r\n  replaceElement(previousSvgElement: SVGGraphicsElement, svgElement: SVGGraphicsElement): SVGGraphicsElement {\r\n    const parentElement = previousSvgElement.parentElement!;\r\n\r\n    this.querySelectorAll(previousSvgElement, '*', true).forEach((element) => {\r\n      (element as HTMLElement).onclick = null;\r\n      element.remove();\r\n    });\r\n    previousSvgElement.remove();\r\n\r\n    parentElement.appendChild(svgElement);\r\n\r\n    return svgElement;\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Initialization\r\n  /***************************************************************************************************************************/\r\n\r\n  initFullyKiosk(): void {\r\n    if (this.isOptionEnabled(this.options.config!.fully_kiosk)) {\r\n      this.fullyKiosk = new FullyKiosk(this);\r\n      this.fullyKiosk.init();\r\n    }\r\n  }\r\n\r\n  initPageDisplay(): void {\r\n    if (this.options.config!.pages) {\r\n      for (let key of this.pageInfos.keys()) {\r\n        const pageInfo = this.pageInfos.get(key) as Info.PageInfo;\r\n\r\n        pageInfo.svg!.style.opacity = '1';\r\n        pageInfo.svg!.style.display = pageInfo.isMaster || pageInfo.isDefault ? 'initial' : 'none'; // Show the first page\r\n      }\r\n    }\r\n    else {\r\n      // Show the SVG\r\n      this.options.config!.svg!.style.opacity = '1';\r\n      this.options.config!.svg!.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  initVariables(): void {\r\n    if (this.options.config!.variables) {\r\n      for (let variable of this.options.config!.variables) {\r\n        this.initVariable(variable);\r\n      }\r\n    }\r\n\r\n    if (this.options.config!.pages) {\r\n      for (let key of this.pageInfos.keys()) {\r\n        const pageInfo = this.pageInfos.get(key) as Info.PageInfo;\r\n\r\n        if (pageInfo.config!.variables) {\r\n          for (let variable of pageInfo.config!.variables) {\r\n            this.initVariable(variable);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  initVariable(variable: Config.VariableConfig): void {\r\n    let variableName: string;\r\n    let value: any;\r\n\r\n    if (typeof variable === 'string') {\r\n      variableName = variable;\r\n    }\r\n    else {\r\n      variableName = variable.name!;\r\n\r\n      value = variable.value;\r\n      if (variable.value_template) {\r\n        value = this.evaluate(variable.value_template, variableName, undefined);\r\n      }\r\n    }\r\n\r\n    if (!this.entityInfos.has(variableName)) {\r\n      let entityInfo = { entityId: variableName, ruleInfos: [], lastState: undefined };\r\n      this.entityInfos.set(variableName, entityInfo);\r\n    }\r\n\r\n    if (!this.hass!.states![variableName]) {\r\n      this.hass!.states![variableName] = {\r\n        entity_id: variableName,\r\n        state: value,\r\n        last_changed: new Date(),\r\n        attributes: {},\r\n      } as Hass.HassEntityState;\r\n    }\r\n\r\n    this.setVariable(variableName, value, [], true);\r\n  }\r\n\r\n  initStartupActions(): void {\r\n    let actions = new Array<Config.ActionConfig>();\r\n\r\n    const startup = this.options.config!.startup;\r\n    if (startup && startup.action) {\r\n      actions = actions.concat(Array.isArray(startup.action) ? startup.action : [startup.action]);\r\n    }\r\n\r\n    if (this.options.config!.pages) {\r\n      for (let key of this.pageInfos.keys()) {\r\n        const pageInfo = this.pageInfos.get(key);\r\n\r\n        const startup = pageInfo!.config && pageInfo!.config.startup;\r\n        if (startup && startup.action) {\r\n          actions = actions.concat(Array.isArray(startup.action) ? startup.action : [startup.action]);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let action of actions) {\r\n      if (action.service || action.service_template) {\r\n        const actionService = this.getActionService(action, undefined, undefined);\r\n\r\n        switch (this.getDomain(actionService)) {\r\n          case 'floorplan':\r\n            this.callFloorplanService(action, undefined, undefined);\r\n            break;\r\n\r\n          default:\r\n            this.callHomeAssistantService(action, undefined, undefined);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* SVG initialization\r\n  /***************************************************************************************************************************/\r\n\r\n  initFloorplan(svg: SVGGraphicsElement, config: Config.ConfigBase): void {\r\n    if (!config.rules) return;\r\n\r\n    const svgElements = this.querySelectorAll(svg, '*', true) as Array<SVGGraphicsElement>;\r\n\r\n    this.initLastMotion(config, svg, svgElements);\r\n    this.initRules(config, svg, svgElements);\r\n  }\r\n\r\n  initLastMotion(config: Config.ConfigBase, svg: SVGGraphicsElement, svgElements: Array<SVGGraphicsElement>): void {\r\n    // Add the last motion entity if required\r\n    if (config.last_motion && config.last_motion.entity && config.last_motion.class) {\r\n      this.lastMotionConfig = config.last_motion;\r\n\r\n      const entityInfo = { entityId: config.last_motion.entity, ruleInfos: [], lastState: undefined };\r\n      this.entityInfos.set(config.last_motion.entity, entityInfo);\r\n    }\r\n  }\r\n\r\n  initRules(config: Config.ConfigBase, svg: SVGGraphicsElement, svgElements: Array<SVGGraphicsElement>): void {\r\n    // Apply default options to rules that don't override the options explictly\r\n    if (config.defaults) {\r\n      for (let rule of config.rules) {\r\n        rule.hover_over = (rule.hover_over === undefined) ? config.defaults.hover_over : rule.hover_over;\r\n        rule.more_info = (rule.more_info === undefined) ? config.defaults.more_info : rule.more_info;\r\n        rule.propagate = (rule.propagate === undefined) ? config.defaults.propagate : rule.propagate;\r\n      }\r\n    }\r\n\r\n    for (let rule of config.rules) {\r\n      if (rule.entity || rule.entities) {\r\n        this.initEntityRule(rule, svg, svgElements);\r\n      }\r\n      else if (rule.element || rule.elements) {\r\n        this.initElementRule(rule, svg, svgElements);\r\n      }\r\n    }\r\n  }\r\n\r\n  initEntityRule(rule: Config.RuleConfig, svg: SVGGraphicsElement, svgElements: Array<SVGGraphicsElement>): void {\r\n    const entities = this.initGetEntityRuleEntities(rule);\r\n    for (let entity of entities) {\r\n      const entityId = entity.entityId;\r\n      const elementId = entity.elementId;\r\n\r\n      let entityInfo = this.entityInfos.get(entityId);\r\n      if (!entityInfo) {\r\n        entityInfo = { entityId: entityId, ruleInfos: [], lastState: undefined };\r\n        this.entityInfos.set(entityId, entityInfo);\r\n      }\r\n\r\n      const ruleInfo = new Info.RuleInfo(rule);\r\n      entityInfo.ruleInfos.push(ruleInfo);\r\n\r\n      const svgElement = svgElements.find(svgElement => svgElement.id === elementId);\r\n      if (!svgElement) {\r\n        this.logWarning('CONFIG', `Cannot find element '${elementId}' in SVG file`); //`\r\n        continue;\r\n      }\r\n\r\n      const svgElementInfo = this.addSvgElementToRule(svg, svgElement, ruleInfo);\r\n\r\n      svgElementInfo.svgElement = svgElement;\r\n\r\n      // Create a title element (to support hover over text)\r\n      svgElement.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'title'));\r\n\r\n      this.querySelectorAll(svgElement, '*', true).forEach((element) => {\r\n        const titleElem = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n        element.appendChild(titleElem);\r\n        (element as SVGGraphicsElement).onclick = this.onEntityClick.bind({ instance: this, svgElementInfo: svgElementInfo, entityId: entityId, rule: rule });\r\n\r\n        if (ruleInfo.rule.action || (ruleInfo.rule.more_info !== false)) {\r\n          (element as SVGGraphicsElement).style.cursor = 'pointer';\r\n        }\r\n\r\n        this.addClass(element, 'floorplan-item');\r\n      });\r\n\r\n      /*\r\n      if ($svgElement.is('text') && ($svgElement[0].id === elementId)) {\r\n        const backgroundSvgElement = svgElements.find(svgElement => svgElement.id === ($svgElement[0].id + '.background'));\r\n        if (!backgroundSvgElement) {\r\n          this.addBackgroundRectToText(svgElementInfo);\r\n        }\r\n        else {\r\n          svgElementInfo.alreadyHadBackground = true;\r\n          backgroundSvgElement.style.fillOpacity = '0';\r\n        }\r\n      }\r\n      */\r\n    }\r\n  }\r\n\r\n  initGetEntityRuleEntities(rule: Config.RuleConfig): Array<{ entityId: string, elementId: string }> {\r\n    const targetEntities = new Array<{ entityId: string, elementId: string }>();\r\n\r\n    rule.groups = rule.groups ? rule.groups : new Array<string>();\r\n\r\n    // Split out HA entity groups into separate entities\r\n    for (let entityId of rule.groups) {\r\n      const group = this.hass!.states![entityId];\r\n      if (group) {\r\n        for (let entityId of group.attributes!.entity_id!) {\r\n          this.addTargetEntity(entityId, entityId, targetEntities);\r\n        }\r\n      }\r\n      else {\r\n        this.logWarning('CONFIG', `Cannot find '${entityId}' in Home Assistant groups`); //`\r\n      }\r\n    }\r\n\r\n    // Combine single entity and list of entities into combined list\r\n    rule.entities = rule.entities ? rule.entities : new Array<string>();\r\n    rule.entities = rule.entity ? rule.entities.concat(rule.entity) : rule.entities;\r\n\r\n    // Entities as a list of strings\r\n    const entityIds = rule.entities.filter(x => (typeof x === 'string')) as Array<string>;\r\n    for (let entityId of entityIds) {\r\n      const elementId = rule.element ? rule.element : entityId;\r\n      this.addTargetEntity(entityId, elementId, targetEntities);\r\n    }\r\n\r\n    // Entities as a list of objects\r\n    const entityObjects = rule.entities.filter(x => (typeof x !== 'string'));\r\n    for (let entityObject of entityObjects) {\r\n      const ruleEntityElement = entityObject as Config.RuleEntityElementConfig;\r\n      this.addTargetEntity(ruleEntityElement.entity!, ruleEntityElement.element!, targetEntities);\r\n    }\r\n\r\n    return targetEntities;\r\n  }\r\n\r\n  addTargetEntity(entiyId: string, elementId: string, targetEntities: Array<{ entityId: string, elementId: string }>) {\r\n    const hassEntity = this.hass!.states![entiyId];\r\n    const isFloorplanVariable = (entiyId.split('.')[0] === 'floorplan');\r\n\r\n    if (hassEntity || isFloorplanVariable) {\r\n      targetEntities.push({ entityId: entiyId, elementId: elementId });\r\n    }\r\n    else {\r\n      this.logWarning('CONFIG', `Cannot find '${entiyId}' in Home Assistant entities`); //`\r\n    }\r\n  }\r\n\r\n  initElementRule(rule: Config.RuleConfig, svg: SVGGraphicsElement, svgElements: Array<SVGGraphicsElement>): void {\r\n    if (!rule.element && !rule.elements) return;\r\n\r\n    rule.elements = rule.elements ? rule.elements : new Array<string>();\r\n    rule.elements = rule.element ? rule.elements.concat(rule.element) : rule.elements;\r\n\r\n    for (let elementId of rule.elements!) {\r\n      const svgElement = svgElements.find(svgElement => svgElement.id === elementId);\r\n      if (svgElement) {\r\n        let elementInfo = this.elementInfos.get(elementId);\r\n        if (!elementInfo) {\r\n          elementInfo = { ruleInfos: [], lastState: undefined };\r\n          this.elementInfos.set(elementId, elementInfo);\r\n        }\r\n\r\n        const ruleInfo = new Info.RuleInfo(rule);\r\n        elementInfo.ruleInfos.push(ruleInfo);\r\n\r\n        const svgElementInfo = this.addSvgElementToRule(svg, svgElement, ruleInfo);\r\n\r\n        this.querySelectorAll(svgElement, '*', true).forEach((element) => {\r\n          const titleElem = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n          element.appendChild(titleElem);\r\n          (element as SVGGraphicsElement).onclick = this.onElementClick.bind({ instance: this, svgElementInfo: svgElementInfo, elementId: elementId, rule: rule });\r\n\r\n          if (ruleInfo.rule.action || (ruleInfo.rule.more_info !== false)) {\r\n            (element as SVGGraphicsElement).style.cursor = 'pointer';\r\n          }\r\n\r\n          this.addClass(element, 'floorplan-item');\r\n        });\r\n\r\n        /*\r\n        if (svgElement.nodeName === 'text') && (svgElement.id === elementId)) {\r\n          const backgroundSvgElement = svgElements.find(svgElement => svgElement.id === (svgElement.id + '.background'));\r\n          if (!backgroundSvgElement) {\r\n            this.addBackgroundRectToText(svgElementInfo);\r\n          }\r\n          else {\r\n            svgElementInfo.alreadyHadBackground = true;\r\n            backgroundSvgElement.style.fillOpacity = '0';\r\n          }\r\n        }\r\n        */\r\n\r\n        const actions = Array.isArray(rule.action) ? rule.action : [rule.action];\r\n        for (let action of actions.filter(x => x !== undefined)) {\r\n          switch (action.service) {\r\n            case 'toggle':\r\n              for (let otherElementId of action.data.elements) {\r\n                const otherSvgElement = svgElements.find(svgElement => svgElement.id === otherElementId);\r\n                if (otherSvgElement) {\r\n                  this.addClass(otherSvgElement, action.data.default_class);\r\n                }\r\n              }\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.logWarning('CONFIG', `Cannot find '${elementId}' in SVG file`); //`\r\n      }\r\n    }\r\n  }\r\n\r\n  addBackgroundRectToText(svgElementInfo: Info.SvgElementInfo): void {\r\n    const svgElement = svgElementInfo.svgElement!;\r\n\r\n    const bbox = svgElement.getBBox();\r\n\r\n    const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n    rect.setAttribute('id', svgElement.id + '.background');\r\n    rect.setAttribute('height', (bbox.height + 1).toString());\r\n    rect.setAttribute('width', (bbox.width + 2).toString());\r\n    rect.setAttribute('x', (bbox.x - 1).toString());\r\n    rect.setAttribute('y', (bbox.y - 0.5).toString());\r\n    rect.style.fillOpacity = '0';\r\n\r\n    svgElement.parentElement!.insertBefore(rect, svgElement);\r\n  }\r\n\r\n  addSvgElementToRule(svg: SVGGraphicsElement, svgElement: SVGGraphicsElement, ruleInfo: Info.RuleInfo): Info.SvgElementInfo {\r\n    const svgElementInfo = new Info.SvgElementInfo(\r\n      svgElement.id,\r\n      svg,\r\n      svgElement,\r\n      svgElement,\r\n      Utils.getArray(svgElement.classList),\r\n      svgElement.getBBox(),\r\n      svgElement.getBoundingClientRect()\r\n    );\r\n    ruleInfo.svgElementInfos.set(svgElement.id, svgElementInfo);\r\n\r\n    //this.addNestedSvgElementsToRule(svgElement, ruleInfo);\r\n\r\n    return svgElementInfo;\r\n  }\r\n\r\n  addNestedSvgElementsToRule(svgElement: SVGGraphicsElement, ruleInfo: Info.RuleInfo): void {\r\n    this.querySelectorAll(svgElement, '*', false).forEach((svgNestedElement) => {\r\n      const svgElementInfo = new Info.SvgElementInfo(\r\n        svgElement.id,\r\n        undefined,\r\n        svgNestedElement as SVGGraphicsElement,\r\n        svgNestedElement as SVGGraphicsElement,\r\n        Utils.getArray(svgNestedElement.classList),\r\n        (svgNestedElement as SVGGraphicsElement).getBBox(),\r\n        svgNestedElement.getBoundingClientRect()\r\n      );\r\n      ruleInfo.svgElementInfos.set(svgElement.id, svgElementInfo);\r\n    });\r\n  }\r\n\r\n  createImageElement(svgElement: SVGGraphicsElement): SVGGraphicsElement {\r\n    const image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    image.setAttribute('id', svgElement.getAttribute('id') as string)\r\n    image.setAttribute('x', svgElement.getAttribute('x') as string)\r\n    image.setAttribute('y', svgElement.getAttribute('y') as string)\r\n    image.setAttribute('height', svgElement.getAttribute('height') as string)\r\n    image.setAttribute('width', svgElement.getAttribute('width') as string);\r\n    return image;\r\n  }\r\n\r\n  hasClass(element: Element, className: string): boolean {\r\n    return (element.classList) ?\r\n      element.classList.contains(className) :\r\n      new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\r\n  }\r\n\r\n  removeClass(element: Element, className: string) {\r\n    (element.classList) ?\r\n      element.classList.remove(className) :\r\n      element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n  }\r\n\r\n  addClass(element: Element, className: string) {\r\n    (element.classList) ?\r\n      element.classList.add(className) :\r\n      element.className += ' ' + className;\r\n  }\r\n\r\n  addClasses(entityId: string, svgElement: SVGGraphicsElement, classes: Array<string>, propagate: boolean): void {\r\n    if (!classes || !classes.length) return;\r\n\r\n    for (let className of classes) {\r\n      if (this.hasClass(svgElement, 'ha-leave-me-alone')) return;\r\n\r\n      if (!this.hasClass(svgElement, className)) {\r\n        this.logDebug('CLASS', `${entityId} (adding class: ${className})`); //`\r\n        this.addClass(svgElement, className);\r\n\r\n        if (svgElement.nodeName === 'text') {\r\n          /*\r\n          svgElement.parentElement.querySelectorAll(`[id=\"${entityId}.background\"]`).forEach((rectElement) => { //`\r\n            if (!this.hasClass(rectElement, className + '-background')) {\r\n              this.addClass(rectElement, className + '-background');\r\n            }\r\n          });\r\n          */\r\n        }\r\n      }\r\n\r\n      if (propagate || (propagate === undefined)) {\r\n        this.querySelectorAll(svgElement, '*', false).forEach((svgNestedElement) => {\r\n          if (!this.hasClass(svgNestedElement, 'ha-leave-me-alone')) {\r\n            if (!this.hasClass(svgNestedElement, className)) {\r\n              this.addClass(svgNestedElement, className);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeClasses(entityId: string, svgElement: SVGGraphicsElement, classes: Array<string>, propagate: boolean): void {\r\n    if (!classes || !classes.length) return;\r\n\r\n    for (let className of classes) {\r\n      if (this.hasClass(svgElement, className)) {\r\n        this.logDebug('CLASS', `${entityId} (removing class: ${className})`); //`\r\n        this.removeClass(svgElement, className);\r\n\r\n        /*\r\n        if (svgElement.nodeName === 'text') {\r\n          svgElement.parentElement.querySelectorAll(`[id=\"${entityId}.background\"]`).forEach((rectElement) => { //`\r\n            if (this.hasClass(rectElement, className + '-background')) {\r\n              this.removeClass(rectElement, className + '-background');\r\n            }\r\n          });\r\n        }\r\n        */\r\n\r\n        if (propagate || (propagate === undefined)) {\r\n          this.querySelectorAll(svgElement, '*', false).forEach((svgNestedElement) => {\r\n            if (this.hasClass(svgNestedElement, className)) {\r\n              this.removeClass(svgNestedElement, className);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Entity handling (when states change)\r\n  /***************************************************************************************************************************/\r\n\r\n  async handleEntities(isInitialLoad: boolean = false): Promise<void> {\r\n    this.handleElements(isInitialLoad);\r\n\r\n    let changedEntityIds = this.getChangedEntities(isInitialLoad);\r\n    changedEntityIds = changedEntityIds.concat(Array.from(this.variables.keys())); // always assume variables need updating\r\n\r\n    if (changedEntityIds && changedEntityIds.length) {\r\n      for (let entityId of changedEntityIds) {\r\n        await this.handleEntity(entityId, isInitialLoad);\r\n      }\r\n    }\r\n  }\r\n\r\n  getChangedEntities(isInitialLoad: boolean): Array<string> {\r\n    const changedEntityIds = new Array<string>();\r\n\r\n    const entityIds = Object.keys(this.hass!.states!);\r\n\r\n    let lastMotionEntityInfo, oldLastMotionState, newLastMotionState;\r\n\r\n    if (this.lastMotionConfig) {\r\n      lastMotionEntityInfo = this.entityInfos.get(this.lastMotionConfig.entity!);\r\n      if (lastMotionEntityInfo && lastMotionEntityInfo.lastState) {\r\n        oldLastMotionState = lastMotionEntityInfo.lastState.state;\r\n        newLastMotionState = this.hass!.states![this.lastMotionConfig.entity!].state;\r\n      }\r\n    }\r\n\r\n    for (let entityId of entityIds) {\r\n      const entityInfo = this.entityInfos.get(entityId);\r\n      if (entityInfo) {\r\n        const entityState = this.hass!.states![entityId];\r\n\r\n        if (isInitialLoad) {\r\n          this.logDebug('STATE', `${entityId}: ${entityState.state} (initial load)`); //`\r\n          if (changedEntityIds.indexOf(entityId) < 0) {\r\n            changedEntityIds.push(entityId);\r\n          }\r\n        }\r\n        else if (entityInfo.lastState) {\r\n          const oldState = entityInfo.lastState.state;\r\n          const newState = entityState.state;\r\n\r\n          if (entityState.last_changed !== entityInfo.lastState.last_changed) {\r\n            this.logDebug('STATE', `${entityId}: ${newState} (last changed ${this.formatDate(entityInfo.lastState.last_changed)})`); //`\r\n            if (changedEntityIds.indexOf(entityId) < 0) {\r\n              changedEntityIds.push(entityId);\r\n            }\r\n          }\r\n          else {\r\n            if (!Utils.equal(entityInfo.lastState.attributes, entityState.attributes)) {\r\n              this.logDebug('STATE', `${entityId}: attributes (last updated ${this.formatDate(entityInfo.lastState.last_changed)})`); //`\r\n              if (changedEntityIds.indexOf(entityId) < 0) {\r\n                changedEntityIds.push(entityId);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.lastMotionConfig) {\r\n            if ((newLastMotionState !== oldLastMotionState) && (entityId.indexOf('binary_sensor') >= 0)) {\r\n              const friendlyName = entityState.attributes!.friendly_name;\r\n\r\n              if (friendlyName === newLastMotionState) {\r\n                this.logDebug('LAST_MOTION', `${entityId} (new)`); //`\r\n                if (changedEntityIds.indexOf(entityId) < 0) {\r\n                  changedEntityIds.push(entityId);\r\n                }\r\n              }\r\n              else if (friendlyName === oldLastMotionState) {\r\n                this.logDebug('LAST_MOTION', `${entityId} (old)`); //`\r\n                if (changedEntityIds.indexOf(entityId) < 0) {\r\n                  changedEntityIds.push(entityId);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return changedEntityIds;\r\n  }\r\n\r\n  async handleEntity(entityId: string, isInitialLoad: boolean): Promise<void> {\r\n    const entityState = this.hass!.states![entityId];\r\n    const entityInfo = this.entityInfos.get(entityId);\r\n\r\n    if (!entityInfo) return;\r\n\r\n    entityInfo.lastState = Object.assign({}, entityState);\r\n\r\n    await this.handleEntityUpdateDom(entityInfo)\r\n    this.handleEntityUpdateCss(entityInfo, isInitialLoad);\r\n    this.handleEntityUpdateLastMotionCss(entityInfo);\r\n    this.handleEntitySetHoverOver(entityInfo);\r\n  }\r\n\r\n  async handleEntityUpdateDom(entityInfo: Info.EntityInfo): Promise<void> {\r\n    const entityId = entityInfo.entityId as string;\r\n    const entityState = this.hass!.states![entityId];\r\n\r\n    for (let ruleInfo of entityInfo.ruleInfos) {\r\n      for (let svgElementId of ruleInfo.svgElementInfos.keys()) {\r\n        const svgElementInfo = ruleInfo.svgElementInfos.get(svgElementId) as Info.SvgElementInfo;\r\n\r\n        if (svgElementInfo.svgElement.nodeName === 'text') {\r\n          this.handleEntityUpdateText(entityId, ruleInfo, svgElementInfo);\r\n        }\r\n        else if (ruleInfo.rule.image || ruleInfo.rule.image_template) {\r\n          await this.handleEntityUpdateImage(entityId, ruleInfo, svgElementInfo);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async handleElements(isInitialLoad: boolean) {\r\n    for (let key of this.elementInfos.keys()) {\r\n      const elementInfo = this.elementInfos.get(key);\r\n      await this.handleElementUpdateDom(elementInfo)\r\n      this.handleElementUpdateCss(elementInfo, isInitialLoad);\r\n    }\r\n  }\r\n\r\n  async handleElementUpdateDom(elementInfo: Info.ElementInfo) {\r\n    for (let ruleInfo of elementInfo.ruleInfos) {\r\n      for (let svgElementId of ruleInfo.svgElementInfos.keys()) {\r\n        const svgElementInfo = ruleInfo.svgElementInfos.get(svgElementId) as Info.SvgElementInfo;\r\n\r\n        if (svgElementInfo.svgElement.nodeName === 'text') {\r\n          this.handleEntityUpdateText(svgElementId, ruleInfo, svgElementInfo);\r\n        }\r\n        else if (ruleInfo.rule.image || ruleInfo.rule.image_template) {\r\n          await this.handleEntityUpdateImage(svgElementId, ruleInfo, svgElementInfo);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getParents(element: Node, parentSelector: Node): Array<Node> {\r\n    var parents = new Array<Node>();\r\n    var currentParent = element.parentNode;\r\n\r\n    while (currentParent !== parentSelector) {\r\n      parents.push(currentParent!);\r\n      currentParent = currentParent!.parentNode;\r\n    }\r\n    parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  handleEntityUpdateText(entityId: string, ruleInfo: Info.RuleInfo, svgElementInfo: Info.SvgElementInfo) {\r\n    const textElement = svgElementInfo.svgElement;\r\n    const state = this.hass!.states![entityId] ? this.hass!.states![entityId].state : undefined;\r\n\r\n    const text = ruleInfo.rule.text_template ? this.evaluate(ruleInfo.rule.text_template, entityId, textElement) : state;\r\n\r\n    const tspanElement = textElement.querySelector('tspan');\r\n    if (tspanElement) {\r\n      tspanElement.textContent = text;\r\n    }\r\n    else {\r\n      let titleElement = textElement.querySelector('title') as Element;\r\n      if (!titleElement) {\r\n        titleElement = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n        textElement.appendChild(titleElement);\r\n      }\r\n      titleElement.textContent = text;\r\n    }\r\n\r\n    /*\r\n    if (!svgElementInfo.alreadyHadBackground) {\r\n      const rect = svgElement.parentElement.querySelectorAll(`[id=\"${entityId}.background\"]`); //`\r\n      if (rect) {\r\n        if (svgElementstyle.display !== 'none') {\r\n          const parentSvg = this.getParent(svgElement, document.querySelector('svg'));\r\n          if (parentSvg.style.display !== 'none') {\r\n            const bbox = svgElement.getBBox();\r\n            rect.setAttribute('x', bbox.x - 1);\r\n            rect.setAttribute('y', bbox.y - 0.5);\r\n            rect.setAttribute('height', bbox.height + 1);\r\n            rect.setAttribute('width', bbox.width + 2);\r\n            rect.style.height = bbox.height + 1;\r\n            rect.style.width = bbox.width + 2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    */\r\n  }\r\n\r\n  async handleEntityUpdateImage(entityId: string, ruleInfo: Info.RuleInfo, svgElementInfo: Info.SvgElementInfo): Promise<void> {\r\n    const svgElement = svgElementInfo.svgElement;\r\n\r\n    const imageUrl = (ruleInfo.rule.image ? ruleInfo.rule.image : this.evaluate(ruleInfo.rule.image_template!, entityId, svgElement)) as string;\r\n\r\n    if (imageUrl && (ruleInfo.imageUrl !== imageUrl)) {\r\n      ruleInfo.imageUrl = imageUrl;\r\n\r\n      if (ruleInfo.imageLoader) {\r\n        clearInterval(ruleInfo.imageLoader); // cancel any previous image loading for this rule\r\n      }\r\n\r\n      if (ruleInfo.rule.image_refresh_interval) {\r\n        const refreshInterval = parseInt(ruleInfo.rule.image_refresh_interval);\r\n\r\n        ruleInfo.imageLoader = setInterval((imageUrl: string, svgElement: SVGGraphicsElement) => {\r\n          this.loadImage(imageUrl, svgElementInfo, entityId, ruleInfo.rule)\r\n            .catch(error => {\r\n              this.handleError(error);\r\n            });\r\n        }, refreshInterval * 1000, imageUrl, svgElement);\r\n      }\r\n\r\n      try {\r\n        await this.loadImage(imageUrl, svgElementInfo, entityId, ruleInfo.rule);\r\n      }\r\n      catch (error) {\r\n        this.handleError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEntitySetHoverOver(entityInfo: Info.EntityInfo) {\r\n    const entityId = entityInfo.entityId as string;\r\n    const entityState = this.hass!.states![entityId];\r\n\r\n    for (let ruleInfo of entityInfo.ruleInfos) {\r\n      if (ruleInfo.rule.hover_over !== false) {\r\n        for (let svgElementId of ruleInfo.svgElementInfos.keys()) {\r\n          const svgElementInfo = ruleInfo.svgElementInfos.get(svgElementId) as Info.SvgElementInfo;\r\n\r\n          this.handlEntitySetHoverOverText(svgElementInfo.svgElement, entityState);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handlEntitySetHoverOverText(svgElement: SVGGraphicsElement, entityState: Hass.HassEntityState) {\r\n    const dateFormat = this.options.config!.date_format ? this.options.config!.date_format : 'DD-MMM-YYYY';\r\n\r\n    svgElement.querySelectorAll('title').forEach((titleElement) => {\r\n      const lastChangedDate = this.formatDate(entityState.last_changed!);\r\n      const lastUpdatedDate = this.formatDate(entityState.last_updated!);\r\n\r\n      let titleText = `${entityState.attributes!.friendly_name}\\n`; //`\r\n      titleText += `State: ${entityState.state}\\n\\n`; //`\r\n\r\n      Object.keys(entityState.attributes!).map(key => {\r\n        titleText += `${key}: ${entityState.attributes![key]}\\n`; //`\r\n      });\r\n      titleText += '\\n';\r\n\r\n      titleText += `Last changed: ${lastChangedDate}\\n`; //`\r\n      titleText += `Last updated: ${lastUpdatedDate}`; //`\r\n\r\n      titleElement.textContent = titleText;\r\n    });\r\n  }\r\n\r\n  handleElementUpdateCss(elementInfo: Info.ElementInfo, isInitialLoad: boolean) {\r\n    if (!this.cssRules || !this.cssRules.length) return;\r\n\r\n    for (let ruleInfo of elementInfo.ruleInfos) {\r\n      for (let svgElementId of ruleInfo.svgElementInfos.keys()) {\r\n        const svgElementInfo = ruleInfo.svgElementInfos.get(svgElementId) as Info.SvgElementInfo;\r\n\r\n        this.handleUpdateElementCss(svgElementInfo, ruleInfo);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEntityUpdateCss(entityInfo: Info.EntityInfo, isInitialLoad: boolean) {\r\n    if (!this.cssRules || !this.cssRules.length) return;\r\n\r\n    for (let ruleInfo of entityInfo.ruleInfos) {\r\n      for (let svgElementId of ruleInfo.svgElementInfos.keys()) {\r\n        const svgElementInfo = ruleInfo.svgElementInfos.get(svgElementId) as Info.SvgElementInfo;\r\n\r\n        if (svgElementInfo.svgElement) { // images may not have been updated yet\r\n          this.handleUpdateCss(entityInfo, svgElementInfo, ruleInfo);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getStateConfigClasses(stateConfig: Config.RuleStateConfig): Array<string> { // support class: or classes:\r\n    let classes = new Array<string>();\r\n\r\n    if (!stateConfig) return [];\r\n    else if (Array.isArray(stateConfig.class)) classes = stateConfig.class;\r\n    else if (typeof stateConfig.class === \"string\") classes = stateConfig.class.split(\" \").map(x => x.trim());\r\n    else if (Array.isArray(stateConfig.classes)) classes = stateConfig.classes;\r\n    else if (typeof stateConfig.classes === \"string\") classes = stateConfig.classes.split(\" \").map(x => x.trim());\r\n\r\n    return classes;\r\n  }\r\n\r\n  handleUpdateCss(entityInfo: Info.EntityInfo, svgElementInfo: Info.SvgElementInfo, ruleInfo: Info.RuleInfo): void {\r\n    const entityId = entityInfo.entityId as string;\r\n    const svgElement = svgElementInfo.svgElement;\r\n\r\n    let targetClasses = new Array<string>();\r\n    if (ruleInfo.rule.class_template) {\r\n      const targetClasslist = this.evaluate(ruleInfo.rule.class_template, entityId, svgElement) as string;\r\n      targetClasses = targetClasslist ? targetClasslist.split(\" \") : [];\r\n    }\r\n\r\n    // Get the config for the current state\r\n    let obsoleteClasses = new Array<string>();\r\n    if (ruleInfo.rule.states) {\r\n      const entityState = this.hass!.states![entityId];\r\n\r\n      const stateConfig = ruleInfo.rule.states.find(stateConfig => (stateConfig.state === entityState.state)) as Config.RuleStateConfig;\r\n      targetClasses = this.getStateConfigClasses(stateConfig);\r\n\r\n      // Remove any other previously-added state classes\r\n      for (let otherStateConfig of ruleInfo.rule.states) {\r\n        if (!stateConfig || (otherStateConfig.state !== stateConfig.state)) {\r\n          const otherStateClasses = this.getStateConfigClasses(otherStateConfig);\r\n          for (let otherStateClass of otherStateClasses) {\r\n            if (otherStateClass && (targetClasses.indexOf(otherStateClass) < 0) && (otherStateClass !== 'floorplan-item') && this.hasClass(svgElement, otherStateClass) && (svgElementInfo.originalClasses.indexOf(otherStateClass) < 0)) {\r\n              obsoleteClasses.push(otherStateClass);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (svgElement.classList) {\r\n        for (let otherClass of Utils.getArray(svgElement.classList)) {\r\n          if ((targetClasses.indexOf(otherClass) < 0) && (otherClass !== 'floorplan-item') && this.hasClass(svgElement, otherClass) && (svgElementInfo.originalClasses.indexOf(otherClass) < 0)) {\r\n            obsoleteClasses.push(otherClass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove any obsolete classes from the entity\r\n    //this.logDebug(`${entityId}: Removing obsolete classes: ${obsoleteClasses.join(', ')}`); //`\r\n    this.removeClasses(entityId, svgElement, obsoleteClasses, ruleInfo.rule.propagate);\r\n\r\n    // Add the target classes to the entity\r\n    this.addClasses(entityId, svgElement, targetClasses, ruleInfo.rule.propagate);\r\n  }\r\n\r\n  handleUpdateElementCss(svgElementInfo: Info.SvgElementInfo, ruleInfo: Info.RuleInfo): void {\r\n    const entityId = svgElementInfo.entityId;\r\n    const svgElement = svgElementInfo.svgElement;\r\n\r\n    let targetClasses = new Array<string>();\r\n    if (ruleInfo.rule.class_template) {\r\n      const targetClassList = this.evaluate(ruleInfo.rule.class_template, entityId, svgElement) as string;\r\n      targetClasses = targetClassList ? targetClassList.split(\" \") : [];\r\n    }\r\n\r\n    const obsoleteClasses = new Array<string>();\r\n    for (let otherClass of Utils.getArray(svgElement.classList)) {\r\n      if ((targetClasses.indexOf(otherClass) < 0) && (otherClass !== 'floorplan-item') && this.hasClass(svgElement, otherClass) && (svgElementInfo.originalClasses.indexOf(otherClass) < 0)) {\r\n        obsoleteClasses.push(otherClass);\r\n      }\r\n    }\r\n\r\n    // Remove any obsolete classes from the entity\r\n    this.removeClasses(entityId, svgElement, obsoleteClasses, ruleInfo.rule.propagate);\r\n\r\n    // Add the target class to the entity\r\n    this.addClasses(entityId, svgElement, targetClasses, ruleInfo.rule.propagate);\r\n  }\r\n\r\n  handleEntityUpdateLastMotionCss(entityInfo: Info.EntityInfo): void {\r\n    if (!this.lastMotionConfig || !this.cssRules || !this.cssRules.length) return;\r\n\r\n    const entityId = entityInfo.entityId as string;\r\n    const entityState = this.hass!.states![entityId];\r\n\r\n    if (!entityState) return;\r\n\r\n    for (let ruleInfo of entityInfo.ruleInfos) {\r\n      for (let svgElementId of ruleInfo.svgElementInfos.keys()) {\r\n        const svgElementInfo = ruleInfo.svgElementInfos.get(svgElementId) as Info.SvgElementInfo;\r\n        const svgElement = svgElementInfo.svgElement;\r\n\r\n        const stateConfigClasses = this.getStateConfigClasses(this.lastMotionConfig);\r\n\r\n        if (this.hass!.states![this.lastMotionConfig.entity!] &&\r\n          (entityState.attributes!.friendly_name === this.hass!.states![this.lastMotionConfig.entity!].state)) {\r\n          //this.logDebug(`${entityId}: Adding last motion class '${this.lastMotionConfig.class}'`); //`\r\n          this.addClasses(entityId, svgElement, stateConfigClasses, ruleInfo.propagate);\r\n        }\r\n        else {\r\n          //this.logDebug(`${entityId}: Removing last motion class '${this.lastMotionConfig.class}'`); //`\r\n          this.removeClasses(entityId, svgElement, stateConfigClasses, ruleInfo.propagate);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Floorplan helper functions\r\n  /***************************************************************************************************************************/\r\n\r\n  isOptionEnabled(option: any): boolean {\r\n    return ((option === null) || (option !== undefined));\r\n  }\r\n\r\n  isLastMotionEnabled(): boolean {\r\n    return (this.lastMotionConfig && this.options.config!.last_motion!.entity && this.options.config!.last_motion!.class) !== undefined;\r\n  }\r\n\r\n  validateConfig(config: Config.FloorplanConfig): boolean {\r\n    let isValid = true;\r\n\r\n    if (!config.pages && !config.rules) {\r\n      this.options.setIsLoading(false);\r\n      this.logError('CONFIG', `Cannot find 'pages' nor 'rules' in floorplan configuration`); //`\r\n      isValid = false;\r\n    }\r\n    else {\r\n      if (config.pages) {\r\n        if (!config.pages.length) {\r\n          this.logError('CONFIG', `The 'pages' section must contain one or more pages in floorplan configuration`); //`\r\n          isValid = false;\r\n        }\r\n      }\r\n      else {\r\n        if (!config.rules) {\r\n          this.logError('CONFIG', `Cannot find 'rules' in floorplan configuration`); //`\r\n          isValid = false;\r\n        }\r\n\r\n        let invalidRules = config.rules.filter(x => x.entities && x.elements);\r\n        if (invalidRules.length) {\r\n          this.logError('CONFIG', `A rule cannot contain both 'entities' and 'elements' in floorplan configuration`); //`\r\n          isValid = false;\r\n        }\r\n\r\n        invalidRules = config.rules.filter(x => !(x.entity || x.entities) && !(x.element || x.elements));\r\n        if (invalidRules.length) {\r\n          this.logError('CONFIG', `A rule must contain either 'entities' or 'elements' in floorplan configuration`); //`\r\n          isValid = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  formatDate(date: Date): string {\r\n    if (!date) return '';\r\n\r\n    return (typeof date === 'string') ?\r\n      new Date(date).toLocaleString() : date.toLocaleString();\r\n  }\r\n\r\n  evaluate(code: string, entityId?: string, svgElement?: SVGGraphicsElement): any {\r\n    try {\r\n      const entityState = entityId ? this.hass!.states![entityId] : undefined;\r\n      let functionBody = (code.indexOf('${') >= 0) ? `\\`${code}\\`;` : code; //`\r\n      functionBody = (functionBody.indexOf('return') >= 0) ? functionBody : `return ${functionBody};`; //`\r\n      const func = new Function('entity', 'entities', 'hass', 'config', 'element', functionBody);\r\n      const result = func(entityState, this.hass!.states, this.hass, this.options.config!, svgElement);\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      //  this.logError('ERROR', entityId);\r\n      //  this.logError('ERROR', err);\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Event handlers\r\n  /***************************************************************************************************************************/\r\n\r\n  onElementClick(e: any): void {\r\n    e.stopPropagation();\r\n    const localThis = this as any;\r\n    localThis.instance.onActionClick(localThis.svgElementInfo, localThis.elementId, localThis.elementId, localThis.rule);\r\n  }\r\n\r\n  onEntityClick(e: any): void {\r\n    e.stopPropagation();\r\n    const localThis = this as any;\r\n    localThis.instance.onActionClick(localThis.svgElementInfo, localThis.entityId, localThis.elementId, localThis.rule);\r\n  }\r\n\r\n  onActionClick(svgElementInfo: Info.SvgElementInfo, entityId: string, elementId: string, rule: Config.RuleConfig): void {\r\n    let entityInfo = this.entityInfos.get(entityId) as Info.EntityInfo;\r\n    const actionRuleInfo = entityInfo && entityInfo.ruleInfos.find(ruleInfo => (ruleInfo.rule.action !== undefined));\r\n    const actionRule = rule.action ? rule : (actionRuleInfo ? actionRuleInfo.rule : undefined);\r\n\r\n    if (!rule || !actionRule) {\r\n      if (entityId && (rule.more_info !== false)) {\r\n        this.options.openMoreInfo(entityId);\r\n      }\r\n      return;\r\n    }\r\n\r\n    let calledServiceCount = 0;\r\n\r\n    const svgElement = svgElementInfo.svgElement;\r\n\r\n    const actions = Array.isArray(actionRule.action) ? actionRule.action : [actionRule.action];\r\n    for (let action of actions) {\r\n      if (action.service || action.service_template) {\r\n        const actionService = this.getActionService(action, entityId, svgElement);\r\n\r\n        switch (this.getDomain(actionService)) {\r\n          case 'floorplan':\r\n            this.callFloorplanService(action, entityId, svgElementInfo);\r\n            break;\r\n\r\n          default:\r\n            this.callHomeAssistantService(action, entityId, svgElementInfo);\r\n            break;\r\n        }\r\n\r\n        calledServiceCount++;\r\n      }\r\n    }\r\n\r\n    if (!calledServiceCount) {\r\n      if (entityId && (actionRule.more_info !== false)) {\r\n        this.options.openMoreInfo(entityId);\r\n      }\r\n    }\r\n  }\r\n\r\n  callFloorplanService(action: Config.ActionConfig, entityId?: string, svgElementInfo?: Info.SvgElementInfo): void {\r\n    const svgElement = (svgElementInfo ? svgElementInfo.svgElement : undefined) as SVGGraphicsElement;\r\n\r\n    const actionService = this.getActionService(action, entityId, svgElement);\r\n    const actionData = this.getActionData(action, entityId, svgElement);\r\n\r\n    switch (this.getService(actionService)) {\r\n      case 'class_toggle':\r\n        if (actionData) {\r\n          const classes = actionData.classes;\r\n\r\n          for (let otherElementId of actionData.elements) {\r\n            const otherSvgElement = svgElementInfo!.svg!.querySelector(`[id=\"${otherElementId}\"]`); //`\r\n            if (otherSvgElement) {\r\n              if (this.hasClass(otherSvgElement, classes[0])) {\r\n                this.removeClass(otherSvgElement, classes[0]);\r\n                this.addClass(otherSvgElement, classes[1]);\r\n              }\r\n              else if (this.hasClass(otherSvgElement, classes[1])) {\r\n                this.removeClass(otherSvgElement, classes[1]);\r\n                this.addClass(otherSvgElement, classes[0]);\r\n              }\r\n              else {\r\n                this.addClass(otherSvgElement, actionData.default_class);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'page_navigate':\r\n        const page_id = actionData.page_id;\r\n        const targetPageInfo = page_id && this.pageInfos.get(page_id) as Info.PageInfo;\r\n\r\n        if (targetPageInfo) {\r\n          Array.from(this.pageInfos.keys()).map((key) => {\r\n            const pageInfo = this.pageInfos.get(key) as Info.PageInfo;\r\n\r\n            if (!pageInfo.isMaster && (pageInfo.svg!.style.display !== 'none')) {\r\n              pageInfo.svg!.style.display = 'none';\r\n            }\r\n          });\r\n\r\n          targetPageInfo.svg!.style.display = 'block';\r\n        }\r\n        break;\r\n\r\n      case 'variable_set':\r\n        if (actionData.variable) {\r\n          const attributes = [];\r\n\r\n          if (actionData.attributes) {\r\n            for (let attribute of actionData.attributes) {\r\n              const attributeValue = this.getActionValue(attribute, entityId, svgElement);\r\n              attributes.push({ name: attribute.attribute, value: attributeValue });\r\n            }\r\n          }\r\n\r\n          const value = this.getActionValue(actionData, entityId, svgElement);\r\n          this.setVariable(actionData.variable, value, attributes, false);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        // Unknown floorplan service\r\n        break;\r\n    }\r\n  }\r\n\r\n  getActionValue(action: Config.ActionConfig, entityId?: string, svgElement?: SVGGraphicsElement): any {\r\n    let value = action.value;\r\n    if (action.value_template) {\r\n      value = this.evaluate(action.value_template, entityId, svgElement);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  setVariable(variableName: string, value: any, attributes: any, isInitialLoad: boolean): void {\r\n    this.variables.set(variableName, value);\r\n\r\n    if (this.hass!.states![variableName]) {\r\n      this.hass!.states![variableName].state = value;\r\n\r\n      for (let attribute of attributes) {\r\n        this.hass!.states![variableName].attributes![attribute.name] = attribute.value;\r\n      }\r\n    }\r\n\r\n    for (let otherVariableName of Array.from(this.variables.keys())) {\r\n      const otherVariable = this.hass!.states![otherVariableName];\r\n      if (otherVariable) {\r\n        otherVariable.last_changed = new Date(); // mark all variables as changed\r\n      }\r\n    }\r\n\r\n    // Simulate an event change to all entities\r\n    if (!isInitialLoad) {\r\n      this.handleEntitiesDebounced(); // use debounced wrapper\r\n    }\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Home Assisant helper functions\r\n  /***************************************************************************************************************************/\r\n\r\n  callHomeAssistantService(action: Config.ActionConfig, entityId?: string, svgElementInfo?: Info.SvgElementInfo): void {\r\n    const svgElement = svgElementInfo ? svgElementInfo.svgElement : undefined;\r\n\r\n    const actionService = this.getActionService(action, entityId, svgElement);\r\n    const actionData = this.getActionData(action, entityId, svgElement);\r\n\r\n    if (!actionData.entity_id && entityId) {\r\n      actionData.entity_id = entityId;\r\n    }\r\n\r\n    this.hass!.callService(this.getDomain(actionService), this.getService(actionService), actionData);\r\n  }\r\n\r\n  getActionData(action: Config.ActionConfig, entityId?: string, svgElement?: SVGGraphicsElement): any {\r\n    let data = action.data ? action.data : {};\r\n    if (action.data_template) {\r\n      const result = this.evaluate(action.data_template, entityId, svgElement);\r\n      data = (typeof result === 'string') ? JSON.parse(result) : result;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  getActionService(action: Config.ActionConfig, entityId?: string, svgElement?: SVGGraphicsElement): any {\r\n    let service = action.service;\r\n    if (action.service_template) {\r\n      service = this.evaluate(action.service_template, entityId, svgElement);\r\n    }\r\n    return service;\r\n  }\r\n\r\n  getDomain(actionService: string): string {\r\n    return actionService.split(\".\")[0];\r\n  }\r\n\r\n  getService(actionService: string): string {\r\n    return actionService.split(\".\")[1];\r\n  }\r\n\r\n  /***************************************************************************************************************************/\r\n  /* Logging / error handling functions\r\n  /***************************************************************************************************************************/\r\n\r\n  handleWindowError(event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): boolean {\r\n    this.options.setIsLoading(false);\r\n\r\n    if ((event as string).toLowerCase().indexOf(\"script error\") >= 0) {\r\n      this.logError('SCRIPT', 'Script error: See browser console for detail');\r\n    }\r\n    else {\r\n      const message = [\r\n        event as string,\r\n        'URL: ' + source,\r\n        'Line: ' + lineno + ', column: ' + colno,\r\n        'Error: ' + JSON.stringify(error)\r\n      ].join('<br>');\r\n\r\n      this.logError('ERROR', message);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleError(error: any): void {\r\n    let message = 'Error';\r\n    if (typeof error === 'string') {\r\n      message = error;\r\n    }\r\n    if (error.stack) {\r\n      message = `${error.stack}`; //`\r\n    }\r\n    else if (error.message) {\r\n      message = `${error.message}`; //`\r\n    }\r\n\r\n    this.log('error', message);\r\n  }\r\n\r\n  logError(area: string, message: string): void {\r\n    this.log('error', `${area} ${message}`); //`\r\n  }\r\n\r\n  logWarning(area: string, message: string): void {\r\n    this.log('warning', `${area} ${message}`); //`\r\n  }\r\n\r\n  logInfo(area: string, message: string): void {\r\n    this.log('info', `${area} ${message}`); //`\r\n  }\r\n\r\n  logDebug(area: string, message: string): void {\r\n    this.log('debug', `${area} ${message}`); //`\r\n  }\r\n\r\n  log(level: string, message: string): void {\r\n    const text = `${this.formatDate(new Date())} ${level.toUpperCase()} ${message}`; //`\r\n\r\n    if (this.options.config! && this.options.config!.debug_level) {\r\n      switch (this.options.config!.debug_level) {\r\n        case 'error':\r\n          console.error(text);\r\n          break;\r\n\r\n        case 'warning':\r\n          console.warn(text);\r\n          break;\r\n\r\n        case 'error':\r\n          console.info(text);\r\n          break;\r\n\r\n        default:\r\n          console.log(text);\r\n          break;\r\n      }\r\n    }\r\n\r\n    const isTargetLogLevel = this.logLevels && this.logLevels.length && (this.logLevels.indexOf(level) >= 0);\r\n\r\n    if ((!this.options.config! && (level === 'error')) || isTargetLogLevel) {\r\n      // Always log error messages that occur before the config has been loaded\r\n      const log = (this.options.root as Element)!.querySelector('#log') as HTMLElement;\r\n      const listItemElement = document.createElement('li');\r\n      this.addClass(listItemElement, level);\r\n      listItemElement.textContent = text;\r\n      log.querySelector('ul')!.prepend(listItemElement);\r\n      log.style.display = 'block';\r\n    }\r\n  }\r\n}\r\n","import { Hass as HassObject } from './lib/floorplan/hass';\r\nimport { Floorplan } from './lib/floorplan/floorplan';\r\nimport { Floorplan as FloorplanOptions } from './lib/floorplan/floorplan-options';\r\nimport { Floorplan as FloorplanConfig } from './lib/floorplan/floorplan-config';\r\nimport { Lovelace } from './lib/lovelace/card-config';\r\n\r\nexport class FloorplanElement extends HTMLElement {\r\n  isFloorplanLoading = false;\r\n  isFloorplanLoaded = false;\r\n  _config?: FloorplanConfig.FloorplanConfig | Lovelace.CardConfig;\r\n  floorplanElement?: HTMLElement;\r\n  floorplan?: Floorplan;\r\n  log?: HTMLElement;\r\n  spinner?: HTMLElement;\r\n  isLoading: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.debug('constructor');\r\n\r\n    Object.defineProperties(this, this.properties);\r\n\r\n    this.attachShadow({ mode: 'open' });\r\n  }\r\n\r\n  debug(text: string) {\r\n    if (!this._config) return;\r\n\r\n    if ((this._config as any).trace || ((this._config as any).config) && ((this._config as any).config as any).trace) {\r\n      console.log(text);\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.debug('connectedCallback');\r\n  }\r\n\r\n  get properties() {\r\n    this.debug('get properties');\r\n\r\n    const that = this;\r\n\r\n    return {\r\n      config: {\r\n        set(config: FloorplanConfig.FloorplanConfig | Lovelace.CardConfig) {\r\n          that.setConfig(config);\r\n        }\r\n      }, hass: {\r\n        set(hass: HassObject.HassObject) {\r\n          that.setHass(hass);\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  setConfig(config: FloorplanConfig.FloorplanConfig | Lovelace.CardConfig) {\r\n    this.debug('setConfig');\r\n\r\n    this._config = config;\r\n\r\n    this.initDom(config);\r\n\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  setHass(hass: HassObject.HassObject) {\r\n    this.debug('setHass');\r\n\r\n    if (!this._config || !this.isConnected) return;\r\n\r\n    this.loadFloorplanOnce(hass, this._config);\r\n\r\n    this.floorplan!.hassChanged(hass);\r\n  }\r\n\r\n  loadFloorplanOnce(hass: any, config: FloorplanConfig.FloorplanConfig | Lovelace.CardConfig) {\r\n    this.debug('loadFloorplanOnce');\r\n\r\n    if (this.isFloorplanLoading || this.isFloorplanLoaded) return;\r\n\r\n    this.isFloorplanLoading = true;\r\n\r\n    const options = {\r\n      root: this.shadowRoot!,\r\n      element: this.floorplanElement,\r\n      hass: hass,\r\n      config: (config && (config as any).config) || config,\r\n      openMoreInfo: this.openMoreInfo.bind(this),\r\n      setIsLoading: this.setIsLoading.bind(this),\r\n    } as FloorplanOptions.FloorplanOptions;\r\n\r\n    this.floorplan = new Floorplan(options);\r\n\r\n    this.isFloorplanLoading = false;\r\n    this.isFloorplanLoaded = true;\r\n  }\r\n\r\n  initDom(config: FloorplanConfig.FloorplanConfig | Lovelace.CardConfig): void {\r\n    this.debug('initDom');\r\n\r\n    const root = this.shadowRoot as ShadowRoot;\r\n\r\n    if (root.lastChild) root.removeChild(root.lastChild);\r\n\r\n    const style = document.createElement('style');\r\n    style.textContent = this.getStyle();\r\n    root.appendChild(style);\r\n\r\n    const container = this.createAppendContainer();\r\n\r\n    const spinner = document.createElement('paper-spinner-lite');\r\n    container.appendChild(spinner);\r\n\r\n    const floorplan = document.createElement('div');\r\n    floorplan.id = 'floorplan';\r\n    container.appendChild(floorplan);\r\n\r\n    const log = document.createElement('div');\r\n    log.id = 'log';\r\n    container.appendChild(log);\r\n\r\n    const list = document.createElement('ul');\r\n    log.appendChild(list);\r\n\r\n    const hyperlink = document.createElement('a');\r\n    hyperlink.setAttribute('href', '#');\r\n    hyperlink.text = 'Clear log';\r\n    log.appendChild(hyperlink);\r\n    hyperlink.onclick = () => {\r\n      list.innerHTML = '';\r\n      log.style.display = 'none';\r\n    };\r\n\r\n    this.log = log;\r\n    this.spinner = spinner;\r\n    this.floorplanElement = floorplan;\r\n  }\r\n\r\n  createAppendContainer(): HTMLElement {\r\n    const container = document.createElement('div');\r\n    container.id = 'container';\r\n    this.shadowRoot!.appendChild(container);\r\n\r\n    return container;\r\n  }\r\n\r\n  getStyle(): string {\r\n    this.debug('getStyle');\r\n\r\n    return `\r\n      #container {\r\n        text-align: center;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n\r\n      #floorplan {\r\n        height: 100%;\r\n        width: 100%;\r\n       /*\r\n       flex: 1;\r\n       */\r\n    }\r\n\r\n      paper-spinner-lite {\r\n        margin-top: 50px;\r\n        margin-bottom: 50px;\r\n        /*\r\n        flex: 1;\r\n        */\r\n      }\r\n\r\n      #log {\r\n        min-height: 100px;\r\n        max-height: 100px;\r\n        overflow: auto;\r\n        background-color: #eee;\r\n        display: none;\r\n        padding: 10px;\r\n        /*\r\n        flex: 1;\r\n        */\r\n      }\r\n\r\n      #log ul {\r\n        list-style-type: none;\r\n        padding-left: 0px;\r\n        text-align: left;\r\n      }\r\n\r\n      .error {\r\n        color: #FF0000;\r\n      }\r\n\r\n      .warning {\r\n        color: #FF851B;\r\n      }\r\n\r\n      .info {\r\n        color: #0000FF;\r\n      }\r\n\r\n      .debug {\r\n        color: #000000;\r\n      }\r\n    `;\r\n  }\r\n\r\n  openMoreInfo(entityId: string) {\r\n    this.fire('hass-more-info', { entityId: entityId });\r\n  }\r\n\r\n  setIsLoading(isLoading: boolean) {\r\n    this.isLoading = isLoading;\r\n\r\n    if (this.spinner) {\r\n      if (this.isLoading) {\r\n        this.spinner.setAttribute('active', '');\r\n        this.spinner.style.display = 'inline-block';\r\n      }\r\n      else {\r\n        this.spinner.removeAttribute('active');\r\n        this.spinner.style.display = 'none';\r\n      }\r\n    }\r\n  }\r\n\r\n  logError(message: string) {\r\n    console.error(message);\r\n\r\n    if (this.log) {\r\n      this.log.querySelector('ul')!.prepend(`<li class=\"error\">${message}</li>`)\r\n      this.log.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  fire(type: string, detail: any, options?: any) {\r\n    options = options || {};\r\n    detail = (detail === null || detail === undefined) ? {} : detail;\r\n    const event = new Event(type, {\r\n      bubbles: options.bubbles === undefined ? true : options.bubbles,\r\n      cancelable: Boolean(options.cancelable),\r\n      composed: options.composed === undefined ? true : options.composed\r\n    });\r\n    (event as any).detail = detail;\r\n    const node = options.node || this;\r\n    node.dispatchEvent(event);\r\n    return event;\r\n  }\r\n}\r\n","import { FloorplanElement } from './floorplan-element';\r\n\r\nexport class FloorplanPanel extends FloorplanElement {\r\n}\r\n\r\ncustomElements.define('floorplan-panel', FloorplanPanel);\r\n"]}